{"version":3,"sources":["webpack:///./node_modules/flickity/js/animate.js","webpack:///./src/img/gallery/crowd.jpg","webpack:///./src/img/gallery/tcs.png","webpack:///./node_modules/flickity/js/page-dots.js","webpack:///./node_modules/ev-emitter/ev-emitter.js","webpack:///./src/img/gallery/pointcloud.png","webpack:///./node_modules/flickity/js/flickity.js","webpack:///./src/img/gallery/greygoose.png","webpack:///./src/img/gallery/tc.png","webpack:///./src/views/About.vue?2c2b","webpack:///./node_modules/flickity/js/index.js","webpack:///./src/img/gallery/report1.png","webpack:///./src/views/lyingCat.vue","webpack:///./src/views/lyingCat.vue?9d98","webpack:///./src/img/typing.png","webpack:///./src/views/lyingCat.vue?166c","webpack:///./src/img/self.jpg","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./node_modules/get-size/get-size.js","webpack:///./node_modules/flickity/js/drag.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./src/img/gallery/axis.jpg","webpack:///./node_modules/fizzy-ui-utils/utils.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./src/views/sideProject.vue","webpack:///./src/views/FlickityImg.vue","webpack:///./node_modules/vue-flickity/src/flickity.vue","webpack:///./node_modules/vue-flickity/src/flickity.vue?45fa","webpack:///./src/views/project_title.vue","webpack:///./src/views/project_title.vue?2dee","webpack:///./src/views/PopWin.vue","webpack:///./node_modules/@headlessui/vue/dist/hooks/use-id.js","webpack:///./node_modules/@headlessui/vue/dist/utils/match.js","webpack:///./node_modules/@headlessui/vue/dist/utils/render.js","webpack:///./node_modules/@headlessui/vue/dist/utils/once.js","webpack:///./node_modules/@headlessui/vue/dist/utils/disposables.js","webpack:///./node_modules/@headlessui/vue/dist/components/transitions/utils/transition.js","webpack:///./node_modules/@headlessui/vue/dist/utils/dom.js","webpack:///./node_modules/@headlessui/vue/dist/internal/open-closed.js","webpack:///./node_modules/@headlessui/vue/dist/components/transitions/transition.js","webpack:///./node_modules/@headlessui/vue/dist/keyboard.js","webpack:///./node_modules/@headlessui/vue/dist/internal/hidden.js","webpack:///./node_modules/@headlessui/vue/dist/utils/owner.js","webpack:///./node_modules/@headlessui/vue/dist/utils/focus-management.js","webpack:///./node_modules/@headlessui/vue/dist/hooks/use-window-event.js","webpack:///./node_modules/@headlessui/vue/dist/hooks/use-tab-direction.js","webpack:///./node_modules/@headlessui/vue/dist/hooks/use-event-listener.js","webpack:///./node_modules/@headlessui/vue/dist/components/focus-trap/focus-trap.js","webpack:///./node_modules/@headlessui/vue/dist/hooks/use-inert-others.js","webpack:///./node_modules/@headlessui/vue/dist/internal/portal-force-root.js","webpack:///./node_modules/@headlessui/vue/dist/components/portal/portal.js","webpack:///./node_modules/@headlessui/vue/dist/internal/stack-context.js","webpack:///./node_modules/@headlessui/vue/dist/components/description/description.js","webpack:///./node_modules/@headlessui/vue/dist/utils/micro-task.js","webpack:///./node_modules/@headlessui/vue/dist/hooks/use-outside-click.js","webpack:///./node_modules/@headlessui/vue/dist/components/dialog/dialog.js","webpack:///./src/views/PopWin.vue?4b3c","webpack:///./src/views/FlickityImg.vue?568e","webpack:///./src/views/sideProject.vue?8c56","webpack:///./node_modules/flickity/js/slide.js","webpack:///./src/img/gallery/d-led.jpg","webpack:///./node_modules/core-js/internals/create-html.js","webpack:///./src/img/gallery/poincloud.png","webpack:///./node_modules/flickity/js/lazyload.js","webpack:///./src/img/gallery/gauge.png","webpack:///./node_modules/core-js/modules/es.string.link.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/core-js/internals/string-html-forced.js","webpack:///./node_modules/flickity/js/player.js","webpack:///./src/img/gallery/AXIS-1.png","webpack:///./node_modules/flickity/dist/flickity.css?2856","webpack:///./src/views/FlickityImg.vue?ef48","webpack:///./src/views/project_title.vue?ae98","webpack:///./node_modules/flickity/js/add-remove-cell.js","webpack:///./src/img/gallery/gggg.jpg","webpack:///./node_modules/desandro-matches-selector/matches-selector.js","webpack:///./node_modules/flickity/js/cell.js","webpack:///./src/views/Navbar.vue","webpack:///./src/views/Navbar.vue?0fac","webpack:///./node_modules/flickity/js/prev-next-button.js","webpack:///./src/img/gallery/led.jpg","webpack:///./node_modules/unipointer/unipointer.js","webpack:///./src/views/PopWin.vue?d4a2","webpack:///./src/img/spring_fox.jpg","webpack:///./node_modules/unidragger/unidragger.js","webpack:///./src/views/sideProject.vue?4dbf","webpack:///./src/views/Navbar.vue?80ae","webpack:///./src/views/About.vue","webpack:///./src/views/About.vue?aa81"],"names":["window","factory","utils","proto","this","isAnimating","restingFrames","animate","applyDragForce","applySelectedAttraction","previousX","x","integratePhysics","positionSlider","settle","_this","requestAnimationFrame","options","wrapAround","cells","length","modulo","slideableWidth","shiftWrapCells","setTranslateX","dispatchScrollEvent","is3d","cursorPosition","rightToLeft","translateX","getPositionValue","slider","style","transform","firstSlide","slides","positionX","target","progress","slidesWidth","dispatchEvent","selectedSlide","velocity","position","percentPosition","Math","round","size","innerWidth","isResting","isPointerDown","isFreeScrolling","selectedIndex","beforeGap","_shiftCells","beforeShiftCells","afterGap","afterShiftCells","gap","shift","i","cell","cellShift","wrapShift","outerWidth","getFrictionFactor","force","isDraggable","dragVelocity","dragX","dragForce","applyForce","dragDown","distance","selectedAttraction","module","exports","Flickity","Unipointer","PageDots","parent","_create","prototype","Object","create","holder","document","createElement","className","dots","handleClick","onClick","bind","on","childUIPointerDown","activate","setDots","addEventListener","bindStartEvent","element","appendChild","deactivate","removeEventListener","unbindStartEvent","removeChild","delta","addDots","removeDots","count","fragment","createDocumentFragment","newDots","max","dot","setAttribute","push","concat","splice","forEach","updateSelected","selectedDot","removeAttribute","onTap","event","nodeName","uiChange","index","indexOf","select","destroy","allOff","extend","defaults","pageDots","createMethods","_createPageDots","activatePageDots","updateSelectedPageDots","updatePageDots","deactivatePageDots","global","EvEmitter","eventName","listener","events","_events","listeners","once","onceEvents","_onceEvents","onceListeners","off","emitEvent","args","slice","isOnce","apply","getSize","Cell","Slide","animatePrototype","jQuery","getComputedStyle","console","moveElements","elems","toElem","makeArray","GUID","instances","queryElement","getQueryElement","flickityGUID","instance","option","$element","constructor","error","accessibility","cellAlign","freeScrollFriction","friction","namespaceJQueryEvents","resize","setGallerySize","id","guid","originSide","viewport","_createSlider","watchCSS","method","opts","isActive","classList","add","cellElems","_filterFindCellElements","children","reloadCells","tabIndex","selectInitialIndex","isInitActivated","filterFindElements","cellSelector","_makeCells","positionCells","_getWrapShiftCells","map","cellElem","getLastCell","getLastSlide","_sizeCells","_positionCells","maxCellHeight","cellX","startCell","len","setPosition","outerHeight","updateSlides","_containSlides","slide","isOriginLeft","nextMargin","canCellFit","_getCanCellFit","slideWidth","firstMargin","call","updateTarget","addCell","updateSelectedSlide","groupCells","number","parseInt","percentMatch","match","percent","_init","reposition","positionSliderAtSelected","setCellAlign","cellAlignShorthands","center","left","right","shorthand","height","adaptiveHeight","_unshiftCells","gapX","cellIndex","_getGapCells","increment","contain","isRightToLeft","beginMargin","endMargin","contentWidth","isContentSmaller","beginBound","endBound","min","type","emitArgs","$event","jQEvent","Event","trigger","isWrap","isInstant","_wrapSelect","prevIndex","startAnimation","isWrapping","wrapIndex","abs","backWrapDelta","forewardWrapDelta","isDragSelect","previous","next","unselectSelectedSlide","selectedCells","selectedElements","getCellElements","selectedCell","selectedElement","unselect","initialIndex","queryCell","selectCell","value","getCellSlideIndex","getCell","elem","getCells","getParentCell","getParent","getAdjacentCellElements","adjCount","undefined","slideIndex","selector","querySelector","preventDefault","focus","onresize","debounceMethod","isDragging","watchOption","afterContent","content","onkeydown","isNotFocused","activeElement","handler","keyboardHandlers","keyCode","37","leftMethod","39","rightMethod","prevScrollY","pageYOffset","preventScroll","scrollTo","pageXOffset","remove","removeData","data","htmlInit","bridget","setJQuery","jq","class","_createElementVNode","_createElementBlock","_hoisted_2","width","ref","$options","_createVNode","_component_fallen","_hoisted_4","name","components","fallen","vueCanvas","mounted","log","getElementById","$refs","canvas","rough","rectangle","roughness","fill","hachureAngle","fillWeight","bowing","fillStyle","methods","__exports__","render","uncurryThis","valueOf","getStyleSize","num","parseFloat","isValid","isNaN","noop","logError","message","measurements","measurementsLength","getZeroSize","innerHeight","measurement","getStyle","isBoxSizeOuter","isSetup","setup","div","padding","borderStyle","borderWidth","boxSizing","body","documentElement","nodeType","display","offsetWidth","offsetHeight","isBorderBox","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","Unidragger","draggable","dragThreshold","_touchActionValue","_createDrag","onActivateDrag","_uiChangeDrag","onDeactivateDrag","updateDraggable","handles","bindHandles","unbindHandles","bindDrag","unbindDrag","pointerDown","pointer","isOkay","okayPointerDown","_pointerDownPreventDefault","pointerDownFocus","pointerDownBlur","pointerDownScroll","getScrollPosition","_pointerDownDefault","pointerDownPointer","pageX","pageY","_bindPostStartEvents","focusNodes","INPUT","TEXTAREA","SELECT","y","isFocusNode","isTouchStart","isTouchPointer","pointerType","hasDragStarted","moveVector","pointerUp","isTouchScrolling","_dragPointerUp","pointerDone","dragStart","dragStartPosition","pointerMove","_dragPointerMove","_dragMove","dragMove","previousDragX","direction","originBound","dragMoveTime","Date","dragEnd","freeScroll","dragEndRestingSelect","restingX","getRestingPosition","dragEndBoostSelect","getSlideDistance","positiveResting","_getClosestResting","negativeResting","minDistance","Infinity","condition","dist","minDist","isWrapAround","wrap","floor","staticClick","clickedCell","onscroll","scroll","scrollMoveX","scrollMoveY","_pointerDone","requireObjectCoercible","toString","whitespaces","replace","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","start","end","trim","matchesSelector","a","b","prop","arraySlice","Array","obj","isArray","isArrayLike","removeFrom","ary","parentNode","handleEvent","ffElems","HTMLElement","childElems","querySelectorAll","_class","methodName","threshold","timeoutName","timeout","clearTimeout","arguments","setTimeout","docReady","callback","readyState","toDashed","str","$1","$2","toLowerCase","WidgetClass","namespace","dashedNamespace","dataAttr","dataAttrElems","jsDashElems","dataOptionsAttr","attr","getAttribute","JSON","parse","isCallable","isObject","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","src","_imports_0","viewBox","xmlns","preserveAspectRatio","fill-rule","clip-rule","d","stroke","stroke-width","stroke-linecap","_hoisted_3","_hoisted_5","_hoisted_6","_hoisted_7","_imports_1","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_imports_2","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_imports_3","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_imports_4","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_imports_5","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_component_Navbar","$data","_Transition","onMouseover","onMouseleave","_component_ProjectName","ind","_hoisted_40","_component_FlickityImg","_component_PopWin","val","isOpen","onIsClose","_ctx","_component_flickity","onInit","_renderSlot","props","init","beforeDestroy","$flickity","require","$el","$emit","flickity","isWrapped","prepend","elements","append","insert","playPlayer","stopPlayer","pausePlayer","unpausePlayer","rerender","disableDrag","enableDrag","mode","key","_toDisplayString","project_name_list","project_name","Number","default","required","watch","oldVal","project_content","_component_TransitionRoot","appear","show","$props","as","_component_Dialog","onClose","_component_TransitionChild","enter","enter-from","enter-to","leave","leave-from","leave-to","_hoisted_1","_component_DialogPanel","_createBlock","_component_DialogTitle","href","_hoisted_8","r","n","e","t","Error","keys","join","captureStackTrace","None","RenderStrategy","Static","Unmount","Hidden","visible","features","static","unmount","hidden","attrs","slots","slot","c","s","o","u","p","f","j","l","assign","called","cancelAnimationFrame","Finished","Cancelled","F","dispose","transitionDuration","transitionDelay","split","filter","Boolean","includes","sort","L","nextFrame","Symbol","Open","Closed","ae","Visible","le","ie","se","state","K","findIndex","v","find","register","unregister","_","oe","String","enterFrom","enterTo","entered","leaveFrom","leaveTo","emits","beforeEnter","afterEnter","beforeLeave","afterLeave","emit","expose","fe","onBeforeEnter","onAfterEnter","onBeforeLeave","onAfterLeave","el","h","B","m","N","k","$","q","O","z","G","J","Q","S","C","Comment","immediate","de","ve","pe","me","Te","W","ue","inheritAttrs","Space","Enter","Escape","Backspace","Delete","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Home","End","PageUp","PageDown","Tab","Focusable","margin","overflow","clip","whiteSpace","Node","ownerDocument","hasOwnProperty","First","Previous","Next","Last","WrapAround","NoScroll","Overflow","Success","Underflow","from","Strict","Loose","matches","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_PRECEDING","P","hasAttribute","Forwards","Backwards","shiftKey","InitialFocus","TabLock","FocusLock","RestoreFocus","All","initialFocus","containers","Set","A","container","previousActiveElement","T","H","R","onFocus","every","contains","warn","flush","defaultView","stopPropagation","Map","inert","get","delete","set","has","resolveTarget","parentElement","to","Add","Remove","onUpdate","entries","reduce","g","queueMicrotask","Promise","resolve","then","catch","IgnoreScrollbars","clientX","clientWidth","clientY","clientHeight","He","open","close","I","M","V","Y","w","D","titleId","panelRef","dialogState","defaultPrevented","X","IntersectionObserver","boundingClientRect","observe","disconnect","role","leaf","We","currentTarget","Ke","setTitleId","TransitionRoot","TransitionChild","Dialog","DialogPanel","DialogTitle","flexColumn","img_src","templateImg","openModal","addLink","link","reportImg","greygooseImg","tcImg","axisImg","ledImg","pointcloud","closeModal","ProjectName","PopWin","flickityOptions","prevNextButtons","flexCol","winHeight","newVal","change","__default__","Navbar","FlickityImg","value_ind","scale_item","scale_space","hovered","flickity_enable","selected_index","calcVal","projectHover","projectLeave","handleResize","created","destroyed","lastCell","lastMargin","quot","tag","attribute","p1","getCellLazyImages","lazyloadAttr","srcAttr","srcsetAttr","lazySelector","imgs","LazyLoader","img","load","_createLazyload","lazyLoad","lazyImages","lazyCellImages","srcset","onload","complete","onerror","cellSizeChange","createHTML","forcedStringHTMLMethod","forced","url","DESCRIPTORS","isForced","redefine","hasOwn","inheritIfRequired","isPrototypeOf","isSymbol","toPrimitive","fails","getOwnPropertyNames","getOwnPropertyDescriptor","defineProperty","thisNumberValue","NUMBER","NativeNumber","NumberPrototype","TypeError","charCodeAt","toNumeric","primValue","toNumber","argument","first","third","radix","maxCode","digits","code","it","NaN","NumberWrapper","METHOD_NAME","test","Player","onVisibilityChange","visibilityChange","onVisibilityPlay","visibilityPlay","play","isPageHidden","tick","time","autoPlay","clear","stop","pause","unpause","pauseAutoPlayOnHover","_createPlayer","player","activatePlayer","deactivatePlayer","onmouseenter","onmouseleave","getCellsFragment","isAppend","insertCellElement","insertBefore","endCells","cellChange","minCellIndex","changedCellIndex","isPositioningSlider","prevSelectedElem","matchesMethod","ElemProto","Element","prefixes","prefix","side","renderPosition","setDefaultTarget","marginProperty","sideOffset","adjustedX","_component_router_link","_component_router_view","svgURI","PrevNextButton","getArrowMovements","shape","x0","x1","y1","x2","y2","x3","isEnabled","isPrevious","leftDirection","isLeft","disable","svg","createSVG","update","createElementNS","path","pathMovements","arrowShape","onclick","enable","disabled","lastIndex","boundIndex","_createPrevNextButtons","prevButton","nextButton","activatePrevNextButtons","deactivatePrevNextButtons","_bindStartEvent","isAdd","bindMethod","startEvent","PointerEvent","getTouch","touches","touch","identifier","pointerIdentifier","onmousedown","button","_pointerDown","ontouchstart","changedTouches","onpointerdown","pointerId","postStartEvents","mousedown","touchstart","pointerdown","_boundPointerEvents","_unbindPostStartEvents","onmousemove","_pointerMove","onpointermove","ontouchmove","onmouseup","_pointerUp","onpointerup","ontouchend","_pointerReset","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","_bindHandles","touchAction","handle","cursorNodes","OPTION","clickTypes","radio","checkbox","submit","image","file","isCursorNode","isClickType","focused","canBlur","blur","_dragStart","_dragEnd","_staticClick","isPreventingClicks","isIgnoringMouseUp"],"mappings":"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","file":"js/about.a3c252f5.js","sourcesContent":["// animate\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'fizzy-ui-utils/utils',\n    ], function( utils ) {\n      return factory( window, utils );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.animatePrototype = factory(\n        window,\n        window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, utils ) {\n\n'use strict';\n\n// -------------------------- animate -------------------------- //\n\nvar proto = {};\n\nproto.startAnimation = function() {\n  if ( this.isAnimating ) {\n    return;\n  }\n\n  this.isAnimating = true;\n  this.restingFrames = 0;\n  this.animate();\n};\n\nproto.animate = function() {\n  this.applyDragForce();\n  this.applySelectedAttraction();\n\n  var previousX = this.x;\n\n  this.integratePhysics();\n  this.positionSlider();\n  this.settle( previousX );\n  // animate next frame\n  if ( this.isAnimating ) {\n    var _this = this;\n    requestAnimationFrame( function animateFrame() {\n      _this.animate();\n    } );\n  }\n};\n\nproto.positionSlider = function() {\n  var x = this.x;\n  // wrap position around\n  if ( this.options.wrapAround && this.cells.length > 1 ) {\n    x = utils.modulo( x, this.slideableWidth );\n    x -= this.slideableWidth;\n    this.shiftWrapCells( x );\n  }\n\n  this.setTranslateX( x, this.isAnimating );\n  this.dispatchScrollEvent();\n};\n\nproto.setTranslateX = function( x, is3d ) {\n  x += this.cursorPosition;\n  // reverse if right-to-left and using transform\n  x = this.options.rightToLeft ? -x : x;\n  var translateX = this.getPositionValue( x );\n  // use 3D transforms for hardware acceleration on iOS\n  // but use 2D when settled, for better font-rendering\n  this.slider.style.transform = is3d ?\n    'translate3d(' + translateX + ',0,0)' : 'translateX(' + translateX + ')';\n};\n\nproto.dispatchScrollEvent = function() {\n  var firstSlide = this.slides[0];\n  if ( !firstSlide ) {\n    return;\n  }\n  var positionX = -this.x - firstSlide.target;\n  var progress = positionX / this.slidesWidth;\n  this.dispatchEvent( 'scroll', null, [ progress, positionX ] );\n};\n\nproto.positionSliderAtSelected = function() {\n  if ( !this.cells.length ) {\n    return;\n  }\n  this.x = -this.selectedSlide.target;\n  this.velocity = 0; // stop wobble\n  this.positionSlider();\n};\n\nproto.getPositionValue = function( position ) {\n  if ( this.options.percentPosition ) {\n    // percent position, round to 2 digits, like 12.34%\n    return ( Math.round( ( position / this.size.innerWidth ) * 10000 ) * 0.01 ) + '%';\n  } else {\n    // pixel positioning\n    return Math.round( position ) + 'px';\n  }\n};\n\nproto.settle = function( previousX ) {\n  // keep track of frames where x hasn't moved\n  var isResting = !this.isPointerDown &&\n      Math.round( this.x * 100 ) == Math.round( previousX * 100 );\n  if ( isResting ) {\n    this.restingFrames++;\n  }\n  // stop animating if resting for 3 or more frames\n  if ( this.restingFrames > 2 ) {\n    this.isAnimating = false;\n    delete this.isFreeScrolling;\n    // render position with translateX when settled\n    this.positionSlider();\n    this.dispatchEvent( 'settle', null, [ this.selectedIndex ] );\n  }\n};\n\nproto.shiftWrapCells = function( x ) {\n  // shift before cells\n  var beforeGap = this.cursorPosition + x;\n  this._shiftCells( this.beforeShiftCells, beforeGap, -1 );\n  // shift after cells\n  var afterGap = this.size.innerWidth - ( x + this.slideableWidth + this.cursorPosition );\n  this._shiftCells( this.afterShiftCells, afterGap, 1 );\n};\n\nproto._shiftCells = function( cells, gap, shift ) {\n  for ( var i = 0; i < cells.length; i++ ) {\n    var cell = cells[i];\n    var cellShift = gap > 0 ? shift : 0;\n    cell.wrapShift( cellShift );\n    gap -= cell.size.outerWidth;\n  }\n};\n\nproto._unshiftCells = function( cells ) {\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  for ( var i = 0; i < cells.length; i++ ) {\n    cells[i].wrapShift( 0 );\n  }\n};\n\n// -------------------------- physics -------------------------- //\n\nproto.integratePhysics = function() {\n  this.x += this.velocity;\n  this.velocity *= this.getFrictionFactor();\n};\n\nproto.applyForce = function( force ) {\n  this.velocity += force;\n};\n\nproto.getFrictionFactor = function() {\n  return 1 - this.options[ this.isFreeScrolling ? 'freeScrollFriction' : 'friction' ];\n};\n\nproto.getRestingPosition = function() {\n  // my thanks to Steven Wittens, who simplified this math greatly\n  return this.x + this.velocity / ( 1 - this.getFrictionFactor() );\n};\n\nproto.applyDragForce = function() {\n  if ( !this.isDraggable || !this.isPointerDown ) {\n    return;\n  }\n  // change the position to drag position by applying force\n  var dragVelocity = this.dragX - this.x;\n  var dragForce = dragVelocity - this.velocity;\n  this.applyForce( dragForce );\n};\n\nproto.applySelectedAttraction = function() {\n  // do not attract if pointer down or no slides\n  var dragDown = this.isDraggable && this.isPointerDown;\n  if ( dragDown || this.isFreeScrolling || !this.slides.length ) {\n    return;\n  }\n  var distance = this.selectedSlide.target * -1 - this.x;\n  var force = distance * this.options.selectedAttraction;\n  this.applyForce( force );\n};\n\nreturn proto;\n\n} ) );\n","module.exports = __webpack_public_path__ + \"img/crowd.77b95a75.jpg\";","module.exports = __webpack_public_path__ + \"img/tcs.b09277b7.png\";","// page dots\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'unipointer/unipointer',\n      'fizzy-ui-utils/utils',\n    ], function( Flickity, Unipointer, utils ) {\n      return factory( window, Flickity, Unipointer, utils );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('./flickity'),\n        require('unipointer'),\n        require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n        window,\n        window.Flickity,\n        window.Unipointer,\n        window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, Unipointer, utils ) {\n\n// -------------------------- PageDots -------------------------- //\n\n'use strict';\n\nfunction PageDots( parent ) {\n  this.parent = parent;\n  this._create();\n}\n\nPageDots.prototype = Object.create( Unipointer.prototype );\n\nPageDots.prototype._create = function() {\n  // create holder element\n  this.holder = document.createElement('ol');\n  this.holder.className = 'flickity-page-dots';\n  // create dots, array of elements\n  this.dots = [];\n  // events\n  this.handleClick = this.onClick.bind( this );\n  this.on( 'pointerDown', this.parent.childUIPointerDown.bind( this.parent ) );\n};\n\nPageDots.prototype.activate = function() {\n  this.setDots();\n  this.holder.addEventListener( 'click', this.handleClick );\n  this.bindStartEvent( this.holder );\n  // add to DOM\n  this.parent.element.appendChild( this.holder );\n};\n\nPageDots.prototype.deactivate = function() {\n  this.holder.removeEventListener( 'click', this.handleClick );\n  this.unbindStartEvent( this.holder );\n  // remove from DOM\n  this.parent.element.removeChild( this.holder );\n};\n\nPageDots.prototype.setDots = function() {\n  // get difference between number of slides and number of dots\n  var delta = this.parent.slides.length - this.dots.length;\n  if ( delta > 0 ) {\n    this.addDots( delta );\n  } else if ( delta < 0 ) {\n    this.removeDots( -delta );\n  }\n};\n\nPageDots.prototype.addDots = function( count ) {\n  var fragment = document.createDocumentFragment();\n  var newDots = [];\n  var length = this.dots.length;\n  var max = length + count;\n\n  for ( var i = length; i < max; i++ ) {\n    var dot = document.createElement('li');\n    dot.className = 'dot';\n    dot.setAttribute( 'aria-label', 'Page dot ' + ( i + 1 ) );\n    fragment.appendChild( dot );\n    newDots.push( dot );\n  }\n\n  this.holder.appendChild( fragment );\n  this.dots = this.dots.concat( newDots );\n};\n\nPageDots.prototype.removeDots = function( count ) {\n  // remove from this.dots collection\n  var removeDots = this.dots.splice( this.dots.length - count, count );\n  // remove from DOM\n  removeDots.forEach( function( dot ) {\n    this.holder.removeChild( dot );\n  }, this );\n};\n\nPageDots.prototype.updateSelected = function() {\n  // remove selected class on previous\n  if ( this.selectedDot ) {\n    this.selectedDot.className = 'dot';\n    this.selectedDot.removeAttribute('aria-current');\n  }\n  // don't proceed if no dots\n  if ( !this.dots.length ) {\n    return;\n  }\n  this.selectedDot = this.dots[ this.parent.selectedIndex ];\n  this.selectedDot.className = 'dot is-selected';\n  this.selectedDot.setAttribute( 'aria-current', 'step' );\n};\n\nPageDots.prototype.onTap = // old method name, backwards-compatible\nPageDots.prototype.onClick = function( event ) {\n  var target = event.target;\n  // only care about dot clicks\n  if ( target.nodeName != 'LI' ) {\n    return;\n  }\n\n  this.parent.uiChange();\n  var index = this.dots.indexOf( target );\n  this.parent.select( index );\n};\n\nPageDots.prototype.destroy = function() {\n  this.deactivate();\n  this.allOff();\n};\n\nFlickity.PageDots = PageDots;\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pageDots: true,\n} );\n\nFlickity.createMethods.push('_createPageDots');\n\nvar proto = Flickity.prototype;\n\nproto._createPageDots = function() {\n  if ( !this.options.pageDots ) {\n    return;\n  }\n  this.pageDots = new PageDots( this );\n  // events\n  this.on( 'activate', this.activatePageDots );\n  this.on( 'select', this.updateSelectedPageDots );\n  this.on( 'cellChange', this.updatePageDots );\n  this.on( 'resize', this.updatePageDots );\n  this.on( 'deactivate', this.deactivatePageDots );\n};\n\nproto.activatePageDots = function() {\n  this.pageDots.activate();\n};\n\nproto.updateSelectedPageDots = function() {\n  this.pageDots.updateSelected();\n};\n\nproto.updatePageDots = function() {\n  this.pageDots.setDots();\n};\n\nproto.deactivatePageDots = function() {\n  this.pageDots.deactivate();\n};\n\n// -----  ----- //\n\nFlickity.PageDots = PageDots;\n\nreturn Flickity;\n\n} ) );\n","/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n","module.exports = __webpack_public_path__ + \"img/pointcloud.b360279c.png\";","// Flickity main\n/* eslint-disable max-params */\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter',\n      'get-size/get-size',\n      'fizzy-ui-utils/utils',\n      './cell',\n      './slide',\n      './animate',\n    ], function( EvEmitter, getSize, utils, Cell, Slide, animatePrototype ) {\n      return factory( window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('ev-emitter'),\n        require('get-size'),\n        require('fizzy-ui-utils'),\n        require('./cell'),\n        require('./slide'),\n        require('./animate')\n    );\n  } else {\n    // browser global\n    var _Flickity = window.Flickity;\n\n    window.Flickity = factory(\n        window,\n        window.EvEmitter,\n        window.getSize,\n        window.fizzyUIUtils,\n        _Flickity.Cell,\n        _Flickity.Slide,\n        _Flickity.animatePrototype\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize,\n    utils, Cell, Slide, animatePrototype ) {\n\n/* eslint-enable max-params */\n'use strict';\n\n// vars\nvar jQuery = window.jQuery;\nvar getComputedStyle = window.getComputedStyle;\nvar console = window.console;\n\nfunction moveElements( elems, toElem ) {\n  elems = utils.makeArray( elems );\n  while ( elems.length ) {\n    toElem.appendChild( elems.shift() );\n  }\n}\n\n// -------------------------- Flickity -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Flickity intances\nvar instances = {};\n\nfunction Flickity( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for Flickity: ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // do not initialize twice on same element\n  if ( this.element.flickityGUID ) {\n    var instance = instances[ this.element.flickityGUID ];\n    if ( instance ) instance.option( options );\n    return instance;\n  }\n\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // kick things off\n  this._create();\n}\n\nFlickity.defaults = {\n  accessibility: true,\n  // adaptiveHeight: false,\n  cellAlign: 'center',\n  // cellSelector: undefined,\n  // contain: false,\n  freeScrollFriction: 0.075, // friction when free-scrolling\n  friction: 0.28, // friction when selecting\n  namespaceJQueryEvents: true,\n  // initialIndex: 0,\n  percentPosition: true,\n  resize: true,\n  selectedAttraction: 0.025,\n  setGallerySize: true,\n  // watchCSS: false,\n  // wrapAround: false\n};\n\n// hash of methods triggered on _create()\nFlickity.createMethods = [];\n\nvar proto = Flickity.prototype;\n// inherit EventEmitter\nutils.extend( proto, EvEmitter.prototype );\n\nproto._create = function() {\n  // add id for Flickity.data\n  var id = this.guid = ++GUID;\n  this.element.flickityGUID = id; // expando\n  instances[ id ] = this; // associate via id\n  // initial properties\n  this.selectedIndex = 0;\n  // how many frames slider has been in same position\n  this.restingFrames = 0;\n  // initial physics properties\n  this.x = 0;\n  this.velocity = 0;\n  this.originSide = this.options.rightToLeft ? 'right' : 'left';\n  // create viewport & slider\n  this.viewport = document.createElement('div');\n  this.viewport.className = 'flickity-viewport';\n  this._createSlider();\n\n  if ( this.options.resize || this.options.watchCSS ) {\n    window.addEventListener( 'resize', this );\n  }\n\n  // add listeners from on option\n  for ( var eventName in this.options.on ) {\n    var listener = this.options.on[ eventName ];\n    this.on( eventName, listener );\n  }\n\n  Flickity.createMethods.forEach( function( method ) {\n    this[ method ]();\n  }, this );\n\n  if ( this.options.watchCSS ) {\n    this.watchCSS();\n  } else {\n    this.activate();\n  }\n\n};\n\n/**\n * set options\n * @param {Object} opts - options to extend\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\nproto.activate = function() {\n  if ( this.isActive ) {\n    return;\n  }\n  this.isActive = true;\n  this.element.classList.add('flickity-enabled');\n  if ( this.options.rightToLeft ) {\n    this.element.classList.add('flickity-rtl');\n  }\n\n  this.getSize();\n  // move initial cell elements so they can be loaded as cells\n  var cellElems = this._filterFindCellElements( this.element.children );\n  moveElements( cellElems, this.slider );\n  this.viewport.appendChild( this.slider );\n  this.element.appendChild( this.viewport );\n  // get cells from children\n  this.reloadCells();\n\n  if ( this.options.accessibility ) {\n    // allow element to focusable\n    this.element.tabIndex = 0;\n    // listen for key presses\n    this.element.addEventListener( 'keydown', this );\n  }\n\n  this.emitEvent('activate');\n  this.selectInitialIndex();\n  // flag for initial activation, for using initialIndex\n  this.isInitActivated = true;\n  // ready event. #493\n  this.dispatchEvent('ready');\n};\n\n// slider positions the cells\nproto._createSlider = function() {\n  // slider element does all the positioning\n  var slider = document.createElement('div');\n  slider.className = 'flickity-slider';\n  slider.style[ this.originSide ] = 0;\n  this.slider = slider;\n};\n\nproto._filterFindCellElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.cellSelector );\n};\n\n// goes through all children\nproto.reloadCells = function() {\n  // collection of item elements\n  this.cells = this._makeCells( this.slider.children );\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n};\n\n/**\n * turn elements into Flickity.Cells\n * @param {[Array, NodeList, HTMLElement]} elems - elements to make into cells\n * @returns {Array} items - collection of new Flickity Cells\n */\nproto._makeCells = function( elems ) {\n  var cellElems = this._filterFindCellElements( elems );\n\n  // create new Flickity for collection\n  var cells = cellElems.map( function( cellElem ) {\n    return new Cell( cellElem, this );\n  }, this );\n\n  return cells;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.getLastSlide = function() {\n  return this.slides[ this.slides.length - 1 ];\n};\n\n// positions all cells\nproto.positionCells = function() {\n  // size all cells\n  this._sizeCells( this.cells );\n  // position all cells\n  this._positionCells( 0 );\n};\n\n/**\n * position certain cells\n * @param {Integer} index - which cell to start with\n */\nproto._positionCells = function( index ) {\n  index = index || 0;\n  // also measure maxCellHeight\n  // start 0 if positioning all cells\n  this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n  var cellX = 0;\n  // get cellX\n  if ( index > 0 ) {\n    var startCell = this.cells[ index - 1 ];\n    cellX = startCell.x + startCell.size.outerWidth;\n  }\n  var len = this.cells.length;\n  for ( var i = index; i < len; i++ ) {\n    var cell = this.cells[i];\n    cell.setPosition( cellX );\n    cellX += cell.size.outerWidth;\n    this.maxCellHeight = Math.max( cell.size.outerHeight, this.maxCellHeight );\n  }\n  // keep track of cellX for wrap-around\n  this.slideableWidth = cellX;\n  // slides\n  this.updateSlides();\n  // contain slides target\n  this._containSlides();\n  // update slidesWidth\n  this.slidesWidth = len ? this.getLastSlide().target - this.slides[0].target : 0;\n};\n\n/**\n * cell.getSize() on multiple cells\n * @param {Array} cells - cells to size\n */\nproto._sizeCells = function( cells ) {\n  cells.forEach( function( cell ) {\n    cell.getSize();\n  } );\n};\n\n// --------------------------  -------------------------- //\n\nproto.updateSlides = function() {\n  this.slides = [];\n  if ( !this.cells.length ) {\n    return;\n  }\n\n  var slide = new Slide( this );\n  this.slides.push( slide );\n  var isOriginLeft = this.originSide == 'left';\n  var nextMargin = isOriginLeft ? 'marginRight' : 'marginLeft';\n\n  var canCellFit = this._getCanCellFit();\n\n  this.cells.forEach( function( cell, i ) {\n    // just add cell if first cell in slide\n    if ( !slide.cells.length ) {\n      slide.addCell( cell );\n      return;\n    }\n\n    var slideWidth = ( slide.outerWidth - slide.firstMargin ) +\n      ( cell.size.outerWidth - cell.size[ nextMargin ] );\n\n    if ( canCellFit.call( this, i, slideWidth ) ) {\n      slide.addCell( cell );\n    } else {\n      // doesn't fit, new slide\n      slide.updateTarget();\n\n      slide = new Slide( this );\n      this.slides.push( slide );\n      slide.addCell( cell );\n    }\n  }, this );\n  // last slide\n  slide.updateTarget();\n  // update .selectedSlide\n  this.updateSelectedSlide();\n};\n\nproto._getCanCellFit = function() {\n  var groupCells = this.options.groupCells;\n  if ( !groupCells ) {\n    return function() {\n      return false;\n    };\n  } else if ( typeof groupCells == 'number' ) {\n    // group by number. 3 -> [0,1,2], [3,4,5], ...\n    var number = parseInt( groupCells, 10 );\n    return function( i ) {\n      return ( i % number ) !== 0;\n    };\n  }\n  // default, group by width of slide\n  // parse '75%\n  var percentMatch = typeof groupCells == 'string' &&\n    groupCells.match( /^(\\d+)%$/ );\n  var percent = percentMatch ? parseInt( percentMatch[1], 10 ) / 100 : 1;\n  return function( i, slideWidth ) {\n    /* eslint-disable-next-line no-invalid-this */\n    return slideWidth <= ( this.size.innerWidth + 1 ) * percent;\n  };\n};\n\n// alias _init for jQuery plugin .flickity()\nproto._init =\nproto.reposition = function() {\n  this.positionCells();\n  this.positionSliderAtSelected();\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n  this.setCellAlign();\n  this.cursorPosition = this.size.innerWidth * this.cellAlign;\n};\n\nvar cellAlignShorthands = {\n  // cell align, then based on origin side\n  center: {\n    left: 0.5,\n    right: 0.5,\n  },\n  left: {\n    left: 0,\n    right: 1,\n  },\n  right: {\n    right: 0,\n    left: 1,\n  },\n};\n\nproto.setCellAlign = function() {\n  var shorthand = cellAlignShorthands[ this.options.cellAlign ];\n  this.cellAlign = shorthand ? shorthand[ this.originSide ] : this.options.cellAlign;\n};\n\nproto.setGallerySize = function() {\n  if ( this.options.setGallerySize ) {\n    var height = this.options.adaptiveHeight && this.selectedSlide ?\n      this.selectedSlide.height : this.maxCellHeight;\n    this.viewport.style.height = height + 'px';\n  }\n};\n\nproto._getWrapShiftCells = function() {\n  // only for wrap-around\n  if ( !this.options.wrapAround ) {\n    return;\n  }\n  // unshift previous cells\n  this._unshiftCells( this.beforeShiftCells );\n  this._unshiftCells( this.afterShiftCells );\n  // get before cells\n  // initial gap\n  var gapX = this.cursorPosition;\n  var cellIndex = this.cells.length - 1;\n  this.beforeShiftCells = this._getGapCells( gapX, cellIndex, -1 );\n  // get after cells\n  // ending gap between last cell and end of gallery viewport\n  gapX = this.size.innerWidth - this.cursorPosition;\n  // start cloning at first cell, working forwards\n  this.afterShiftCells = this._getGapCells( gapX, 0, 1 );\n};\n\nproto._getGapCells = function( gapX, cellIndex, increment ) {\n  // keep adding cells until the cover the initial gap\n  var cells = [];\n  while ( gapX > 0 ) {\n    var cell = this.cells[ cellIndex ];\n    if ( !cell ) {\n      break;\n    }\n    cells.push( cell );\n    cellIndex += increment;\n    gapX -= cell.size.outerWidth;\n  }\n  return cells;\n};\n\n// ----- contain ----- //\n\n// contain cell targets so no excess sliding\nproto._containSlides = function() {\n  if ( !this.options.contain || this.options.wrapAround || !this.cells.length ) {\n    return;\n  }\n  var isRightToLeft = this.options.rightToLeft;\n  var beginMargin = isRightToLeft ? 'marginRight' : 'marginLeft';\n  var endMargin = isRightToLeft ? 'marginLeft' : 'marginRight';\n  var contentWidth = this.slideableWidth - this.getLastCell().size[ endMargin ];\n  // content is less than gallery size\n  var isContentSmaller = contentWidth < this.size.innerWidth;\n  // bounds\n  var beginBound = this.cursorPosition + this.cells[0].size[ beginMargin ];\n  var endBound = contentWidth - this.size.innerWidth * ( 1 - this.cellAlign );\n  // contain each cell target\n  this.slides.forEach( function( slide ) {\n    if ( isContentSmaller ) {\n      // all cells fit inside gallery\n      slide.target = contentWidth * this.cellAlign;\n    } else {\n      // contain to bounds\n      slide.target = Math.max( slide.target, beginBound );\n      slide.target = Math.min( slide.target, endBound );\n    }\n  }, this );\n};\n\n// -----  ----- //\n\n/**\n * emits events via eventEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery && this.$element ) {\n    // default trigger with type if no event\n    type += this.options.namespaceJQueryEvents ? '.flickity' : '';\n    var $event = type;\n    if ( event ) {\n      // create jQuery event\n      var jQEvent = new jQuery.Event( event );\n      jQEvent.type = type;\n      $event = jQEvent;\n    }\n    this.$element.trigger( $event, args );\n  }\n};\n\n// -------------------------- select -------------------------- //\n\n/**\n * @param {Integer} index - index of the slide\n * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n * @param {Boolean} isInstant - will immediately set position at selected cell\n */\nproto.select = function( index, isWrap, isInstant ) {\n  if ( !this.isActive ) {\n    return;\n  }\n  index = parseInt( index, 10 );\n  this._wrapSelect( index );\n\n  if ( this.options.wrapAround || isWrap ) {\n    index = utils.modulo( index, this.slides.length );\n  }\n  // bail if invalid index\n  if ( !this.slides[ index ] ) {\n    return;\n  }\n  var prevIndex = this.selectedIndex;\n  this.selectedIndex = index;\n  this.updateSelectedSlide();\n  if ( isInstant ) {\n    this.positionSliderAtSelected();\n  } else {\n    this.startAnimation();\n  }\n  if ( this.options.adaptiveHeight ) {\n    this.setGallerySize();\n  }\n  // events\n  this.dispatchEvent( 'select', null, [ index ] );\n  // change event if new index\n  if ( index != prevIndex ) {\n    this.dispatchEvent( 'change', null, [ index ] );\n  }\n  // old v1 event name, remove in v3\n  this.dispatchEvent('cellSelect');\n};\n\n// wraps position for wrapAround, to move to closest slide. #113\nproto._wrapSelect = function( index ) {\n  var len = this.slides.length;\n  var isWrapping = this.options.wrapAround && len > 1;\n  if ( !isWrapping ) {\n    return index;\n  }\n  var wrapIndex = utils.modulo( index, len );\n  // go to shortest\n  var delta = Math.abs( wrapIndex - this.selectedIndex );\n  var backWrapDelta = Math.abs( ( wrapIndex + len ) - this.selectedIndex );\n  var forewardWrapDelta = Math.abs( ( wrapIndex - len ) - this.selectedIndex );\n  if ( !this.isDragSelect && backWrapDelta < delta ) {\n    index += len;\n  } else if ( !this.isDragSelect && forewardWrapDelta < delta ) {\n    index -= len;\n  }\n  // wrap position so slider is within normal area\n  if ( index < 0 ) {\n    this.x -= this.slideableWidth;\n  } else if ( index >= len ) {\n    this.x += this.slideableWidth;\n  }\n};\n\nproto.previous = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex - 1, isWrap, isInstant );\n};\n\nproto.next = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex + 1, isWrap, isInstant );\n};\n\nproto.updateSelectedSlide = function() {\n  var slide = this.slides[ this.selectedIndex ];\n  // selectedIndex could be outside of slides, if triggered before resize()\n  if ( !slide ) {\n    return;\n  }\n  // unselect previous selected slide\n  this.unselectSelectedSlide();\n  // update new selected slide\n  this.selectedSlide = slide;\n  slide.select();\n  this.selectedCells = slide.cells;\n  this.selectedElements = slide.getCellElements();\n  // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility\n  // Remove in v3?\n  this.selectedCell = slide.cells[0];\n  this.selectedElement = this.selectedElements[0];\n};\n\nproto.unselectSelectedSlide = function() {\n  if ( this.selectedSlide ) {\n    this.selectedSlide.unselect();\n  }\n};\n\nproto.selectInitialIndex = function() {\n  var initialIndex = this.options.initialIndex;\n  // already activated, select previous selectedIndex\n  if ( this.isInitActivated ) {\n    this.select( this.selectedIndex, false, true );\n    return;\n  }\n  // select with selector string\n  if ( initialIndex && typeof initialIndex == 'string' ) {\n    var cell = this.queryCell( initialIndex );\n    if ( cell ) {\n      this.selectCell( initialIndex, false, true );\n      return;\n    }\n  }\n\n  var index = 0;\n  // select with number\n  if ( initialIndex && this.slides[ initialIndex ] ) {\n    index = initialIndex;\n  }\n  // select instantly\n  this.select( index, false, true );\n};\n\n/**\n * select slide from number or cell element\n * @param {[Element, Number]} value - zero-based index or element to select\n * @param {Boolean} isWrap - enables wrapping around for extra index\n * @param {Boolean} isInstant - disables slide animation\n */\nproto.selectCell = function( value, isWrap, isInstant ) {\n  // get cell\n  var cell = this.queryCell( value );\n  if ( !cell ) {\n    return;\n  }\n\n  var index = this.getCellSlideIndex( cell );\n  this.select( index, isWrap, isInstant );\n};\n\nproto.getCellSlideIndex = function( cell ) {\n  // get index of slides that has cell\n  for ( var i = 0; i < this.slides.length; i++ ) {\n    var slide = this.slides[i];\n    var index = slide.cells.indexOf( cell );\n    if ( index != -1 ) {\n      return i;\n    }\n  }\n};\n\n// -------------------------- get cells -------------------------- //\n\n/**\n * get Flickity.Cell, given an Element\n * @param {Element} elem - matching cell element\n * @returns {Flickity.Cell} cell - matching cell\n */\nproto.getCell = function( elem ) {\n  // loop through cells to get the one that matches\n  for ( var i = 0; i < this.cells.length; i++ ) {\n    var cell = this.cells[i];\n    if ( cell.element == elem ) {\n      return cell;\n    }\n  }\n};\n\n/**\n * get collection of Flickity.Cells, given Elements\n * @param {[Element, Array, NodeList]} elems - multiple elements\n * @returns {Array} cells - Flickity.Cells\n */\nproto.getCells = function( elems ) {\n  elems = utils.makeArray( elems );\n  var cells = [];\n  elems.forEach( function( elem ) {\n    var cell = this.getCell( elem );\n    if ( cell ) {\n      cells.push( cell );\n    }\n  }, this );\n  return cells;\n};\n\n/**\n * get cell elements\n * @returns {Array} cellElems\n */\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  } );\n};\n\n/**\n * get parent cell from an element\n * @param {Element} elem - child element\n * @returns {Flickit.Cell} cell - parent cell\n */\nproto.getParentCell = function( elem ) {\n  // first check if elem is cell\n  var cell = this.getCell( elem );\n  if ( cell ) {\n    return cell;\n  }\n  // try to get parent cell elem\n  elem = utils.getParent( elem, '.flickity-slider > *' );\n  return this.getCell( elem );\n};\n\n/**\n * get cells adjacent to a slide\n * @param {Integer} adjCount - number of adjacent slides\n * @param {Integer} index - index of slide to start\n * @returns {Array} cells - array of Flickity.Cells\n */\nproto.getAdjacentCellElements = function( adjCount, index ) {\n  if ( !adjCount ) {\n    return this.selectedSlide.getCellElements();\n  }\n  index = index === undefined ? this.selectedIndex : index;\n\n  var len = this.slides.length;\n  if ( 1 + ( adjCount * 2 ) >= len ) {\n    return this.getCellElements();\n  }\n\n  var cellElems = [];\n  for ( var i = index - adjCount; i <= index + adjCount; i++ ) {\n    var slideIndex = this.options.wrapAround ? utils.modulo( i, len ) : i;\n    var slide = this.slides[ slideIndex ];\n    if ( slide ) {\n      cellElems = cellElems.concat( slide.getCellElements() );\n    }\n  }\n  return cellElems;\n};\n\n/**\n * select slide from number or cell element\n * @param {[Element, String, Number]} selector - element, selector string, or index\n * @returns {Flickity.Cell} - matching cell\n */\nproto.queryCell = function( selector ) {\n  if ( typeof selector == 'number' ) {\n    // use number as index\n    return this.cells[ selector ];\n  }\n  if ( typeof selector == 'string' ) {\n    // do not select invalid selectors from hash: #123, #/. #791\n    if ( selector.match( /^[#.]?[\\d/]/ ) ) {\n      return;\n    }\n    // use string as selector, get element\n    selector = this.element.querySelector( selector );\n  }\n  // get cell from element\n  return this.getCell( selector );\n};\n\n// -------------------------- events -------------------------- //\n\nproto.uiChange = function() {\n  this.emitEvent('uiChange');\n};\n\n// keep focus on element when child UI elements are clicked\nproto.childUIPointerDown = function( event ) {\n  // HACK iOS does not allow touch events to bubble up?!\n  if ( event.type != 'touchstart' ) {\n    event.preventDefault();\n  }\n  this.focus();\n};\n\n// ----- resize ----- //\n\nproto.onresize = function() {\n  this.watchCSS();\n  this.resize();\n};\n\nutils.debounceMethod( Flickity, 'onresize', 150 );\n\nproto.resize = function() {\n  // #1177 disable resize behavior when animating or dragging for iOS 15\n  if ( !this.isActive || this.isAnimating || this.isDragging ) {\n    return;\n  }\n  this.getSize();\n  // wrap values\n  if ( this.options.wrapAround ) {\n    this.x = utils.modulo( this.x, this.slideableWidth );\n  }\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  this.emitEvent('resize');\n  // update selected index for group slides, instant\n  // TODO: position can be lost between groups of various numbers\n  var selectedElement = this.selectedElements && this.selectedElements[0];\n  this.selectCell( selectedElement, false, true );\n};\n\n// watches the :after property, activates/deactivates\nproto.watchCSS = function() {\n  var watchOption = this.options.watchCSS;\n  if ( !watchOption ) {\n    return;\n  }\n\n  var afterContent = getComputedStyle( this.element, ':after' ).content;\n  // activate if :after { content: 'flickity' }\n  if ( afterContent.indexOf('flickity') != -1 ) {\n    this.activate();\n  } else {\n    this.deactivate();\n  }\n};\n\n// ----- keydown ----- //\n\n// go previous/next if left/right keys pressed\nproto.onkeydown = function( event ) {\n  // only work if element is in focus\n  var isNotFocused = document.activeElement && document.activeElement != this.element;\n  if ( !this.options.accessibility || isNotFocused ) {\n    return;\n  }\n\n  var handler = Flickity.keyboardHandlers[ event.keyCode ];\n  if ( handler ) {\n    handler.call( this );\n  }\n};\n\nFlickity.keyboardHandlers = {\n  // left arrow\n  37: function() {\n    var leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n    this.uiChange();\n    this[ leftMethod ]();\n  },\n  // right arrow\n  39: function() {\n    var rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n    this.uiChange();\n    this[ rightMethod ]();\n  },\n};\n\n// ----- focus ----- //\n\nproto.focus = function() {\n  // TODO remove scrollTo once focus options gets more support\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus ...\n  //    #Browser_compatibility\n  var prevScrollY = window.pageYOffset;\n  this.element.focus({ preventScroll: true });\n  // hack to fix scroll jump after focus, #76\n  if ( window.pageYOffset != prevScrollY ) {\n    window.scrollTo( window.pageXOffset, prevScrollY );\n  }\n};\n\n// -------------------------- destroy -------------------------- //\n\n// deactivate all Flickity functionality, but keep stuff available\nproto.deactivate = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.element.classList.remove('flickity-enabled');\n  this.element.classList.remove('flickity-rtl');\n  this.unselectSelectedSlide();\n  // destroy cells\n  this.cells.forEach( function( cell ) {\n    cell.destroy();\n  } );\n  this.element.removeChild( this.viewport );\n  // move child elements back into element\n  moveElements( this.slider.children, this.element );\n  if ( this.options.accessibility ) {\n    this.element.removeAttribute('tabIndex');\n    this.element.removeEventListener( 'keydown', this );\n  }\n  // set flags\n  this.isActive = false;\n  this.emitEvent('deactivate');\n};\n\nproto.destroy = function() {\n  this.deactivate();\n  window.removeEventListener( 'resize', this );\n  this.allOff();\n  this.emitEvent('destroy');\n  if ( jQuery && this.$element ) {\n    jQuery.removeData( this.element, 'flickity' );\n  }\n  delete this.element.flickityGUID;\n  delete instances[ this.guid ];\n};\n\n// -------------------------- prototype -------------------------- //\n\nutils.extend( proto, animatePrototype );\n\n// -------------------------- extras -------------------------- //\n\n/**\n * get Flickity instance from element\n * @param {[Element, String]} elem - element or selector string\n * @returns {Flickity} - Flickity instance\n */\nFlickity.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.flickityGUID;\n  return id && instances[ id ];\n};\n\nutils.htmlInit( Flickity, 'flickity' );\n\nif ( jQuery && jQuery.bridget ) {\n  jQuery.bridget( 'flickity', Flickity );\n}\n\n// set internal jQuery, for Webpack + jQuery v3, #478\nFlickity.setJQuery = function( jq ) {\n  jQuery = jq;\n};\n\nFlickity.Cell = Cell;\nFlickity.Slide = Slide;\n\nreturn Flickity;\n\n} ) );\n","module.exports = __webpack_public_path__ + \"img/greygoose.83a31cf2.png\";","module.exports = __webpack_public_path__ + \"img/tc.bc6d6a9e.png\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./About.vue?vue&type=style&index=0&id=19431972&lang=scss\"","/*!\n * Flickity v2.3.0\n * Touch, responsive, flickable carousels\n *\n * Licensed GPLv3 for open source use\n * or Flickity Commercial License for commercial use\n *\n * https://flickity.metafizzy.co\n * Copyright 2015-2021 Metafizzy\n */\n\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      './drag',\n      './prev-next-button',\n      './page-dots',\n      './player',\n      './add-remove-cell',\n      './lazyload',\n    ], factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./flickity'),\n        require('./drag'),\n        require('./prev-next-button'),\n        require('./page-dots'),\n        require('./player'),\n        require('./add-remove-cell'),\n        require('./lazyload')\n    );\n  }\n\n} )( window, function factory( Flickity ) {\n  return Flickity;\n} );\n","module.exports = __webpack_public_path__ + \"img/report1.db061d52.png\";","<template>\r\n\r\n  <div class=\"lyingCat\">\r\n\r\n    <div class=\"content content--cat\">\r\n      \r\n      <!--<div class=\"fox\">\r\n      \r\n        <div class=\"fox-tail\">\r\n\t\t\t\t\t\t<div class=\"fox-tail\">\r\n\t\t\t\t\t\t\t<div class=\"fox-tail\">\r\n\t\t\t\t\t\t\t\t<div class=\"fox-tail\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"fox-tail\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"fox-tail\">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n      </div> -->\r\n  \r\n      <div class =\"place_center\">\r\n        <div class=\"Cat\">\r\n\r\n          <svg width=\"695\" height=\"724\" viewBox=\"0 0 695 724\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <g id=\"flower_cat\" clip-path=\"url(#clip0_1_2)\">\r\n            <g id=\"body\">\r\n            <path id=\"Vector\" d=\"M441.33 87.81C435.39 83.87 437.52 71.66 441.04 52.68C443.74 38.1 447.94 23.06 458.04 8.19998C462.82 1.13998 464.95 0.0699783 466.82 -2.17245e-05C474.03 -0.270022 476.52 14.5 490.82 37.31C501.27 54.01 508.82 60.25 506.14 65.2C503.73 69.66 496.99 65.62 484.4 70.2C471.06 75.1 469 83.08 453.96 87.2C448.18 88.78 444.37 89.82 441.33 87.81Z\" fill=\"url(#paint0_linear_1_2)\"/>\r\n            <path id=\"Vector_2\" d=\"M691.01 228.45C690.803 216.06 689.758 203.698 687.88 191.45C687.451 188.437 686.765 185.466 685.83 182.57C684.66 179.04 679.69 165.39 666.22 156.43C655.66 149.43 644.58 148.38 639.78 147.94C627.85 146.84 623.06 149.89 615.68 145.6C610.43 142.54 607.05 137.6 604.56 133.99C600.91 128.66 599.96 125.18 597.83 120.62C593.851 112.929 588.681 105.915 582.51 99.84C572.31 89.66 561.06 85.84 551 82.38C538.06 77.95 513.15 69.43 488.07 78.57C472.65 84.19 469.9 91.85 459.88 90.67C454.12 89.99 448.42 86.67 443.75 82.3C451.924 78.2126 460.448 74.8659 469.22 72.3C486.811 67.2938 505.105 65.216 523.37 66.15C536.17 66.95 551.37 67.89 568.44 75.81C582.62 82.39 596.53 93.69 624.34 116.3C630.06 120.95 634.98 125.08 643.08 128.01C658.86 133.72 667.26 127.84 676.25 131.52C694.78 139.1 694.94 178.83 694.98 188.89C695.062 202.18 693.731 215.441 691.01 228.45V228.45Z\" fill=\"url(#paint1_linear_1_2)\"/>\r\n            <path id=\"Vector_3\" d=\"M691.57 227.59C687.29 247.68 678.41 271.11 660.03 287.78C653.36 293.83 641.03 302.94 629.6 320.94C625.082 328.015 621.286 335.526 618.27 343.36C615.09 351.67 605.49 377.74 612.03 408.14C614.35 418.96 616.47 419.88 621.39 434.14C627.964 453.194 631.648 473.125 632.32 493.27C632.32 499.99 632.32 510.79 631.23 523.78C630.115 538.484 627.736 553.064 624.12 567.36C618.78 587.94 611.8 601.93 602.27 621.02C593.9 637.79 590.14 644.02 575.15 668.24C567.42 680.71 556.6 699.16 544.81 723.07L0.119995 723.68C0.119995 723.24 0.03 722.81 0 722.36C4.8657 722.973 9.80133 722.722 14.58 721.62C32.15 717.52 41.44 702.71 52.83 685.53C52.83 685.53 78.35 647.01 116.24 597.14C129.68 579.45 136.39 570.61 145.32 561.43C174.86 531.02 196.32 525.43 245.61 496.43C278.265 476.822 309.438 454.846 338.88 430.68C375.69 400.54 391.3 382.02 395.07 358.29C397.213 343.874 395.876 329.154 391.17 315.36C386.9 304.36 383.09 302.6 374.97 288.63C368.97 278.37 359.13 261.37 356.24 240.24C354.78 229.54 356.31 214.44 359.36 184.24C360.07 177.24 360.6 172.8 360.92 169.91C376.7 132.79 407.23 99.85 444.31 81.43C448.98 85.83 454.68 89.12 460.44 89.8C470.44 90.98 473.21 83.32 488.63 77.7C513.71 68.56 538.63 77.08 551.56 81.51C561.62 84.95 572.87 88.79 583.07 98.97C589.241 105.045 594.411 112.059 598.39 119.75C600.52 124.31 601.47 127.75 605.12 133.12C607.61 136.75 610.99 141.67 616.24 144.73C623.62 149.02 628.41 145.97 640.34 147.07C645.14 147.51 656.22 148.52 666.78 155.56C680.25 164.56 685.22 178.17 686.39 181.7C687.309 184.598 687.978 187.568 688.39 190.58C690.285 202.831 691.347 215.196 691.57 227.59V227.59Z\" fill=\"url(#paint2_linear_1_2)\"/>\r\n            <path id=\"Vector_4\" d=\"M396.54 359.44C392.77 383.17 377.16 401.69 340.35 431.83C310.908 455.996 279.735 477.972 247.08 497.58C197.8 526.53 176.33 532.15 146.79 562.58C137.86 571.76 131.15 580.58 117.71 598.29C79.82 648.16 54.3 686.68 54.3 686.68C42.91 703.86 33.62 718.68 16.05 722.77C11.2713 723.872 6.33572 724.123 1.47001 723.51C-1.63495 691.075 0.64924 658.349 8.23001 626.66C14.05 602.42 28.52 542.21 79.23 496.32C102.48 475.32 124.93 464.87 163.13 447.15C201.85 429.15 212.08 430.35 258.74 407.34C301.95 386.03 319.16 372.23 323.91 368.34C336.34 358.11 340.19 352.53 355.8 341.75C370.8 331.37 377.19 329.68 378.94 322.68C381.65 311.86 369.61 305.56 359.04 285.22C350.74 269.22 350.25 254.68 349.67 237.61C349.069 219.05 351.848 200.536 357.87 182.97C359.203 178.97 360.703 175.013 362.37 171.1C362.05 173.99 361.52 178.44 360.81 185.43C357.76 215.63 356.23 230.73 357.69 241.43C360.58 262.56 370.46 279.56 376.42 289.82C384.54 303.82 388.35 305.53 392.62 316.55C397.326 330.33 398.67 345.035 396.54 359.44V359.44Z\" fill=\"#413B54\"/>\r\n            <path id=\"Vector_5\" d=\"M463.89 109.49C452.46 117.7 444.45 128.61 441.62 132.49C417.97 165.17 424.62 190.34 408.33 195.85C400.2 198.61 397.13 192.74 380.81 195.66C367.15 198.1 362.49 203.44 358.81 200.73C353.81 197.07 360.06 185.73 360.88 160.4C361.23 149.74 359.76 152.4 360.3 138.84C361.3 113.72 364.05 100.11 365.15 95.01C365.15 94.82 365.23 94.66 365.27 94.45C369.18 76.65 371.9 64.28 379.03 59.32C385.63 54.73 398.24 58.59 423.47 66.32C424.53 66.65 423.29 66.27 437.06 70.86C443.31 72.95 462.16 79.18 480.66 88.91C483.92 90.62 488.8 93.3 488.37 95.38C488.05 96.91 485.04 97.38 483.54 97.75C478.84 98.76 473.85 102.36 463.89 109.49Z\" fill=\"#4E415B\"/>\r\n            <path id=\"Vector_6\" d=\"M484.88 95.89C473.59 90.4 421.49 65.23 395.88 59.4C391.07 58.31 384.26 57.23 380.07 60.97C375.56 64.97 376.16 72.8 377.34 80.28C379.812 95.6849 384.617 110.623 391.59 124.58C399.8 140.36 407.93 156.14 419.29 178.23C431.549 144.349 454.583 115.423 484.86 95.89H484.88Z\" fill=\"url(#paint3_linear_1_2)\"/>\r\n            </g>\r\n            <g id=\"top\">\r\n            <path id=\"Vector_7\" d=\"M365.94 722.36C359.072 702.13 350.956 682.346 341.64 663.12C326.08 630.96 309.93 606.06 308.28 606.92C306.63 607.78 322.89 634.06 331.4 674.24C334.746 690.066 336.512 706.185 336.67 722.36H365.94Z\" fill=\"#393A50\"/>\r\n            <path id=\"Vector_8\" d=\"M477.06 700.29C487.05 699.019 496.75 696.05 505.74 691.51C521.3 683.58 530.52 672.77 531.94 674.09C533.03 675.09 528.08 682.04 521.33 691.51C511.33 705.45 506.4 712.42 503.25 714.38C501.645 715.258 500.402 716.675 499.74 718.38C499.391 719.592 499.391 720.878 499.74 722.09L476.6 722.36L477.06 700.29Z\" fill=\"#3A3A50\"/>\r\n            <path id=\"Vector_9\" d=\"M654.26 122.99C655.12 121.52 658.26 116.78 663.82 116.35C669.38 115.92 673 119.96 674.36 121.43C676 123.2 678.17 125.56 677.87 128.06C677.07 134.81 658.49 141.06 653.48 135.28C650.88 132.29 652.25 126.44 654.26 122.99Z\" fill=\"white\"/>\r\n            <path id=\"Vector_10\" d=\"M652.49 124.48C653.35 123.01 656.49 118.28 662.05 117.85C667.61 117.42 671.23 121.45 672.59 122.92C674.23 124.7 676.4 127.05 676.1 129.56C675.3 136.31 656.72 142.56 651.71 136.77C649.11 133.79 650.48 127.94 652.49 124.48Z\" fill=\"url(#paint4_linear_1_2)\"/>\r\n            </g>\r\n            <g id=\"eye\">\r\n            <path id=\"Vector_11\" d=\"M529.84 196.29C526.92 191.81 527.35 186.76 527.9 180.24C528.71 171.365 531.524 162.789 536.13 155.16C540.23 148.28 544.74 140.71 553.84 136.16C566.23 129.94 578.84 133.43 583.4 134.7C598.98 139.02 614.22 151.7 618.69 169.4C621.42 180.19 619.25 189.34 618.08 194.26C616.68 200.19 615.27 205.78 610.41 209.58C606.5 212.64 602.03 213.23 597.01 213.43C582.24 214.02 574.55 210.8 550.01 204.94C538.07 202.06 533.01 201.19 529.84 196.29Z\" fill=\"#4C415A\"/>\r\n            <path id=\"Vector_12\" d=\"M538.52 193.14C537.121 190.258 536.53 187.051 536.81 183.86C537.45 168.81 537.81 160.66 543.81 151.81C547.144 146.534 551.784 142.207 557.28 139.25C574.28 130.45 592.28 139.97 594.84 141.35C609.84 149.54 614.76 163.76 615.7 166.66C616.88 170.27 621.89 185.66 613.61 198.82C611.056 203.088 607.383 206.577 602.99 208.91C600.17 210.35 595.9 211.83 576.25 209.1C569 208.1 553.5 205.65 544.19 199.2C541.823 197.686 539.874 195.602 538.52 193.14V193.14Z\" fill=\"url(#paint5_linear_1_2)\"/>\r\n            <path id=\"Vector_13\" d=\"M574.47 148.43C572.56 150.53 578.01 158.5 580.33 161.9C583.064 165.958 586.364 169.605 590.13 172.73C592.42 174.58 601.77 182.18 604.13 180.19C606.85 177.95 601.07 163.3 589.94 154.58C584.34 150.16 576.29 146.45 574.47 148.43Z\" fill=\"#231815\" stroke=\"#231815\" stroke-miterlimit=\"10\"/>\r\n            <path id=\"Vector_14\" d=\"M566.72 159.41C566.02 157.08 568.96 154.07 571.55 152.82C572.688 152.275 573.929 151.981 575.19 151.957C576.451 151.933 577.702 152.179 578.86 152.68C579.19 152.83 582.92 154.68 582.81 157.21C582.7 159.74 578.41 161.58 575.94 162.04C572.59 162.66 567.51 162.04 566.72 159.41Z\" fill=\"white\" stroke=\"#231815\" stroke-miterlimit=\"10\"/>\r\n            <path id=\"Vector_15\" d=\"M583.01 144.48C583.01 143.96 587.58 143.35 592.23 144.48C594.876 145.088 597.368 146.235 599.55 147.85C604.69 151.71 606.32 157.22 607.74 162.04C609.57 168.24 609.81 173.95 609.35 174.04C608.89 174.13 608.24 170.2 605.4 163.04C604.225 159.83 602.652 156.78 600.72 153.96C599.778 152.487 598.622 151.163 597.29 150.03C596.73 149.57 594.98 148.2 589.89 146.5C585.22 144.99 582.93 144.86 583.01 144.48Z\" fill=\"white\" stroke=\"#231815\" stroke-miterlimit=\"10\"/>\r\n            </g>\r\n            <g id=\"flowers\">\r\n            <path id=\"Vector_16\" d=\"M336.37 333.64C337.53 330.84 346.12 330.05 363.3 328.45C371.65 327.68 375.83 327.29 378.3 327.71C392.18 330.04 402.87 341.18 408.35 352.41C411.92 359.73 411.99 364.41 411.86 366.73C411.8 367.91 411.24 376.05 406.4 380.07C404.56 381.6 402.78 381.96 395.47 382.07C390.916 382.228 386.356 382.148 381.81 381.83C365.42 379.57 331.66 345.07 336.37 333.64Z\" fill=\"url(#paint6_linear_1_2)\"/>\r\n            <path id=\"Vector_17\" d=\"M398.69 421.1C404.81 431.03 407.87 435.99 410.2 435.73C416.85 434.98 418.59 410.07 417.03 399.63C416.732 397.558 416.143 395.538 415.28 393.63C413.432 389.362 410.202 385.84 406.11 383.63C403.72 382.41 398.85 379.92 394.98 382.07C391.58 383.96 390.74 388.44 390.11 391.83C389.635 394.403 389.568 397.036 389.91 399.63C390.67 405.65 392.92 411.72 398.69 421.1Z\" fill=\"url(#paint7_linear_1_2)\"/>\r\n            <path id=\"Vector_18\" d=\"M316.15 400.02C314.6 397.09 319.41 391.89 326.5 384.22C334.24 375.84 338.39 371.48 343.86 372.12C347.86 372.59 352.02 375.67 353.03 379.53C355.03 387.11 344.26 395.07 337.81 398.27C329.61 402.36 318.13 403.76 316.15 400.02Z\" fill=\"#4B4159\"/>\r\n            <path id=\"Vector_19\" d=\"M357.72 343.83C349.54 343.56 344.28 350.83 340.55 355.93C333.17 366.05 331.15 379.19 334.69 381.49C336.48 382.65 339.53 380.95 341.13 382.85C342.22 384.15 341.32 385.56 342.13 386.75C343.73 389.2 350.82 388.45 356.37 385.75C365.81 381.21 369.81 371.63 371.98 366.43C373.35 363.15 373.98 361.43 373.93 359.21C373.58 351.86 365.94 344.1 357.72 343.83Z\" fill=\"url(#paint8_linear_1_2)\"/>\r\n            <path id=\"Vector_20\" d=\"M327.86 333.1C325.71 335.1 326.86 339.53 327.47 341.88C327.68 342.65 329.91 350.88 335.08 351.44C336.661 351.522 338.229 351.113 339.57 350.27C342.69 348.58 342.57 346.5 345.03 344.8C348.81 342.19 353.24 344.21 353.62 343.05C354.13 341.45 345.8 337.54 344.62 337C337.12 333.5 330.63 330.49 327.86 333.1Z\" stroke=\"#231815\" stroke-miterlimit=\"10\"/>\r\n            <path id=\"Vector_21\" d=\"M371.01 325.49C370.39 321.32 372.1 318.03 375.5 311.44C377.94 306.73 380.93 303.03 386.82 295.83C393.23 287.99 394.22 287.69 395.01 287.83C399.08 288.54 400.59 301.02 399.89 309.68C399.369 315.749 397.645 321.653 394.82 327.05C391.51 333.76 389.41 338 385.45 338.75C379.53 339.88 372.07 332.78 371.01 325.49Z\" fill=\"url(#paint9_linear_1_2)\"/>\r\n            <path id=\"Vector_22\" d=\"M377.81 359.24C381.94 355.45 389.37 357.57 392.06 361.97C392.829 363.31 393.24 364.825 393.253 366.37C393.266 367.915 392.882 369.437 392.136 370.791C391.391 372.144 390.31 373.282 388.997 374.097C387.684 374.911 386.184 375.374 384.64 375.44C383.439 375.438 382.25 375.195 381.144 374.726C380.038 374.257 379.037 373.572 378.2 372.71C375.01 369.36 374.01 362.7 377.81 359.24Z\" fill=\"url(#paint10_linear_1_2)\"/>\r\n            <path id=\"Vector_23\" d=\"M277.52 327.83C275.03 333.5 290.17 348.2 307.37 352.41C312.66 353.71 319.48 355.27 325.37 351.24C329.96 348.08 333.27 341.95 332.19 336.41C330.06 325.41 311.92 323.17 309.95 322.95C307.01 322.62 303.95 322.95 297.85 323.53C285.01 324.82 278.56 325.47 277.52 327.83Z\" fill=\"url(#paint11_linear_1_2)\"/>\r\n            <path id=\"Vector_24\" d=\"M300.91 279.63C300.01 280.86 300.76 283.85 302.3 289.78C303.225 293.71 304.466 297.559 306.01 301.29C311.68 314.73 315.63 324.09 324.15 329.39C336.15 336.86 355.7 335.25 359.86 326.85C363.35 319.85 356.53 307.11 351.37 300.56C351.19 300.34 350.97 300.06 350.69 299.73C344.69 292.56 337.42 288.84 328.01 285.29C314.22 280.09 303.55 276.06 300.91 279.63Z\" fill=\"url(#paint12_linear_1_2)\"/>\r\n            <path id=\"Vector_25\" d=\"M351.67 316.36C353.36 316.76 359.97 318.36 363.76 324.16C367.04 329.16 366.51 334.71 366.11 338.99C365.77 342.57 365.35 346.99 362.59 351.09C356.66 359.94 344.31 360.74 333.52 361.43C329.449 361.825 325.34 361.427 321.42 360.26C318.49 359.34 313.6 357.8 310.69 353.26C308.56 349.92 307.51 344.97 309.33 343.26C310.08 342.58 310.82 342.91 311.47 342.09C312.92 340.29 310.47 337.25 311.47 336.04C312.84 334.48 318.21 338.29 319.86 336.63C320.59 335.9 319.99 334.72 319.67 332.14C319.38 329.81 318.8 325.14 321.03 321.6C323.37 317.89 327.83 316.91 328.64 316.73C330.053 316.431 331.505 316.364 332.94 316.53C342.81 317.41 345.25 314.77 351.67 316.36Z\" fill=\"url(#paint13_linear_1_2)\"/>\r\n            <path id=\"Vector_26\" d=\"M353.01 285.12C349.3 287.12 350.57 296.76 351.38 302.89C351.99 307.58 352.57 311.96 355.38 316.53C360.12 324.33 370.38 331.25 375.28 328.44C380.41 325.51 378.79 312.54 375.09 304.05C369.82 292.04 357.64 282.59 353.01 285.12Z\" fill=\"url(#paint14_linear_1_2)\"/>\r\n            <path id=\"Vector_27\" d=\"M414.89 333.49C415.57 333.25 418.67 333.06 424.89 332.71C438.96 331.89 441.49 331.95 442.64 333.71C444.06 335.83 442.53 339.14 440.89 342.71C438.78 347.158 435.635 351.036 431.72 354.02C429.19 356.02 422.51 361.02 412.99 361.02C408.77 361.02 403.7 361.02 401.47 357.9C397.25 351.97 404.62 337.04 414.89 333.49Z\" fill=\"url(#paint15_linear_1_2)\"/>\r\n            <path id=\"Vector_28\" d=\"M398.69 321.58C406.85 318.52 406.17 318.06 412.16 315.93C422.08 312.39 431.34 309.09 434.16 312.41C437.45 316.22 431.05 327.22 426.36 332.9C423.48 336.435 419.975 339.411 416.02 341.68C412.26 343.78 400.78 350.17 392.02 344.8C386.02 341.12 382.29 332.51 384.8 327.8C386.24 325.21 388.77 325.36 398.69 321.58Z\" fill=\"url(#paint16_linear_1_2)\"/>\r\n            <path id=\"Vector_29\" d=\"M417.23 350.66C426.5 346.25 436.02 352.21 441.03 355.34C443.93 357.15 447.87 359.61 447.67 362.56C447.51 364.88 444.88 365.88 435.57 371.56C427.35 376.56 427.57 376.9 425.62 377.42C419.42 379.07 409.78 377.72 406.69 371.56C403.19 364.57 409.53 354.36 417.23 350.66Z\" fill=\"url(#paint17_linear_1_2)\"/>\r\n            <path id=\"Vector_30\" d=\"M411.01 369C419.01 366.12 428.36 377.29 431.7 382.46C433.46 385.19 438.79 393.46 435.4 399.63C434.2 401.83 431.32 404.82 427.99 404.9C425.32 404.97 424.23 403.12 421.94 403.73C419.17 404.47 419.38 407.56 417.06 408.22C413.56 409.22 408.8 403.37 406.72 400.02C405.086 397.393 403.96 394.483 403.4 391.44C402.13 384.02 403.77 371.6 411.01 369Z\" fill=\"url(#paint18_linear_1_2)\"/>\r\n            <path id=\"Vector_31\" d=\"M376.45 381.29C380.01 387.18 386.14 389.37 390.45 390.85C395.33 392.52 406.45 396.32 410.74 391.24C413.25 388.24 412.53 383.11 412.5 382.85C412.207 380.949 411.471 379.143 410.35 377.58C407.24 373.33 402.14 372.52 399.62 372.12C396.76 371.67 397 372.28 393.96 371.93C386.75 371.1 385.32 367.68 380.89 368.41C378.47 368.81 375.69 370.41 374.64 372.9C373.35 376.16 375.46 379.66 376.45 381.29Z\" fill=\"url(#paint19_linear_1_2)\"/>\r\n            <path id=\"Vector_32\" d=\"M439.47 365.1C440.58 365.44 443.87 367.67 450.4 372.1C460.04 378.67 461.76 380.1 461.52 381.66C461.2 383.85 457.52 384.98 451.76 386.73C450.2 387.21 447.27 388.04 438.5 389.27C431.94 390.19 428.63 390.65 426.98 390.27C421.88 389.02 415.98 384.59 415.47 378.56C415.328 375.765 416.154 373.007 417.81 370.75C422.39 364.28 432.35 362.87 439.47 365.1Z\" fill=\"url(#paint20_linear_1_2)\"/>\r\n            <path id=\"Vector_33\" d=\"M366.11 402.56C365.99 405.22 366.04 407.12 366.11 409.78C366.303 415.222 366.955 420.638 368.06 425.97C368.8 429.64 369.14 430.29 369.81 430.66C372.44 432.07 377.4 427.66 381.72 423.83C384.745 421.31 387.374 418.351 389.52 415.05C389.97 414.34 390.61 413.27 393.23 407.44C396.56 400.01 398.23 396.26 398.3 394.56C398.386 391.991 397.845 389.44 396.722 387.128C395.6 384.816 393.931 382.812 391.86 381.29C384.52 376.29 373.26 379.67 369.03 385.78C366.7 389.14 366.5 393.62 366.11 402.56Z\" fill=\"url(#paint21_linear_1_2)\"/>\r\n            <path id=\"Vector_34\" d=\"M411.01 395.73C409.82 397.65 410.95 400.28 412.19 403.14C414.644 408.493 418.655 412.982 423.7 416.02C424.86 416.76 424.18 416.22 429.55 419.14C436.38 422.86 437.49 423.72 438.14 423.24C439.81 422 435.61 413.84 432.8 408.38C426.88 396.86 424 395.32 422.72 394.75C418.61 392.93 412.73 392.93 411.01 395.73Z\" fill=\"url(#paint22_linear_1_2)\"/>\r\n            <path id=\"Vector_35\" d=\"M351.28 336.8C351.66 335.8 354.79 337.06 359.08 335.8C362.37 334.86 362.58 333.54 364.94 332.87C369.37 331.61 374.59 334.59 377.42 337.55C383.74 344.16 382.58 355.26 380.55 355.9C379.91 356.09 378.48 354.4 375.67 351.02C370.11 344.33 370.88 344.02 369.23 343.02C364.72 340.27 361.12 343.85 355.18 340.68C353.01 339.52 350.94 337.66 351.28 336.8Z\" fill=\"url(#paint23_linear_1_2)\"/>\r\n            <path id=\"Vector_36\" d=\"M373.53 374.52C375.13 375.64 375.1 377.99 374.9 383.1C374.33 397.5 373.7 398.9 372.36 399.69C370.23 400.94 367.52 399.9 364.95 398.91C363.72 398.44 353.68 394.43 353.63 387.2C353.63 379.73 364.27 376.01 367.7 374.81C371.47 373.49 372.86 374.04 373.53 374.52Z\" fill=\"url(#paint24_linear_1_2)\"/>\r\n            <path id=\"Vector_37\" d=\"M334.69 325.49C334.15 323.95 332.69 319.92 334.69 316.12C335.798 314.143 337.508 312.57 339.57 311.63C346.46 308.08 354.26 311.32 355.96 312.02C362.06 314.55 369.96 320.68 368.84 325.88C368.25 328.48 365.55 330.05 364.35 330.75C361.64 332.33 359.65 332.09 353.81 332.32C343.38 332.71 342.02 333.79 339.37 332.12C336.35 330.21 335.21 326.96 334.69 325.49Z\" fill=\"url(#paint25_linear_1_2)\"/>\r\n            <path id=\"Vector_38\" d=\"M391.86 336.8C398.79 333.66 405.72 335.64 410.2 337C416.01 338.75 427.75 343.65 427.37 348.9C427.14 352.12 422.61 352.08 420.16 357.9C418.3 362.29 419.4 365.84 417.42 366.68C415.44 367.52 413.5 364.17 410.79 364.92C408.35 365.6 408.73 368.64 405.91 370.38C403.09 372.12 398.41 371.72 396.35 369.38C393.88 366.61 397.21 363.38 395.96 357.87C394.08 349.51 384.51 347.67 385.23 342.65C385.66 339.62 389.52 337.87 391.86 336.8Z\" fill=\"url(#paint26_linear_1_2)\"/>\r\n            <path id=\"Vector_39\" d=\"M548.13 473.22C555.92 475.66 558.7 484.66 561.59 494C563.51 500.22 565.48 506.6 562.76 508.93C558.24 512.79 544.11 502.68 537.3 497.81C529.46 492.2 525.54 489.32 525.59 485.51C525.68 478.36 538.59 470.24 548.13 473.22Z\" fill=\"url(#paint27_linear_1_2)\"/>\r\n            <path id=\"Vector_40\" d=\"M486.76 482.68C484.53 488.18 486.42 494.84 489.69 499.08C494.63 505.49 504.21 508.27 507.25 505.51C508.44 504.43 507.87 503.19 509.25 502.2C511.87 500.2 515.69 503.86 520.57 503.76C525.77 503.65 531.31 499.32 532.86 494.39C535.17 487.03 528.33 479.01 522.71 475.47C510.92 468.04 491.21 471.74 486.76 482.68Z\" fill=\"url(#paint28_linear_1_2)\"/>\r\n            <path id=\"Vector_41\" d=\"M448.32 448.36C443.72 450.96 441.69 459.79 444.47 464.52C446.47 468 449.9 467.19 453.88 472.07C456.79 475.63 455.78 477.07 458.88 481.14C460.37 483.14 463.73 487.63 468.24 488.46C474.65 489.64 483.09 483.34 484.34 476.75C487.01 462.8 458.32 442.71 448.32 448.36Z\" fill=\"url(#paint29_linear_1_2)\"/>\r\n            <path id=\"Vector_42\" d=\"M449.49 421.12C445.74 414.75 432.37 416.26 425.49 418.49C420.28 420.18 416.4 423.07 412.32 426.1C407.05 430.02 404.41 431.98 404.42 434C404.42 440.31 424.6 451.12 438.42 443.51C447.01 438.82 453.07 427.19 449.49 421.12Z\" fill=\"url(#paint30_linear_1_2)\"/>\r\n            <path id=\"Vector_43\" d=\"M536.13 353.36C531.9 351.94 524.61 363.03 521.93 367.85C520.11 371.13 518.44 374.21 518.13 378.67C518 380.51 517.56 386.76 521.93 392.14C522.7 393.14 527.58 399.08 531.93 397.99C538.75 396.26 539.11 377.99 539.25 370.92C539.35 363.18 539.52 354.51 536.13 353.36Z\" fill=\"url(#paint31_linear_1_2)\"/>\r\n            <path id=\"Vector_44\" d=\"M491.79 336.98C488.59 336.31 484.43 344.33 482.71 347.66C479.607 353.19 477.76 359.336 477.3 365.66C476.85 372.71 476.36 380.6 481.83 385.71C486.18 389.71 493.94 391.71 497.93 388.64C500.93 386.33 500.4 380.03 499.39 367.42C498.85 360.53 497.81 355.95 495.74 346.78C494.01 339.15 493.19 337.27 491.79 336.98Z\" fill=\"url(#paint32_linear_1_2)\"/>\r\n            <path id=\"Vector_45\" d=\"M504.89 355.61C503.89 355.48 503.57 361.16 500.2 367.12C496.95 372.89 494.2 373.04 492.59 378.05C491.705 380.969 491.571 384.065 492.2 387.05C494.05 396.88 502.93 401.75 503.91 402.27C511.63 406.34 523.64 406.87 527.32 401.1C530.32 396.43 526.82 389.28 524.59 384.71C520.66 376.63 512.34 367.37 509.59 364.61C508.502 363.59 507.581 362.406 506.86 361.1C505.2 358.03 505.51 355.7 504.89 355.61Z\" fill=\"url(#paint33_linear_1_2)\"/>\r\n            <path id=\"Vector_46\" d=\"M468.01 450.36C465.903 454.722 465.487 459.709 466.84 464.36C467.54 466.61 467.92 466.12 470.55 471.19C474.76 479.3 474.78 482.45 477.97 483.87C479.78 484.68 480.12 483.81 483.62 484.65C486.26 485.339 488.767 486.461 491.04 487.97C496.81 491.2 508.92 487.97 516.04 479.97C521.58 473.71 524.7 463.8 521.51 456.17C514.01 438.44 474.78 438.41 468.01 450.36Z\" fill=\"url(#paint34_linear_1_2)\"/>\r\n            <path id=\"Vector_47\" d=\"M570.81 373.71C569.06 371.35 562.53 373.26 553.98 375.71C547.67 377.55 544.51 378.47 541.23 380.6C535.23 384.48 526.32 393.42 528.96 400.15C530.81 404.88 537.89 407.28 543.44 406.73C550.93 405.99 555.37 399.9 563.44 388.85C568.22 382.36 572.67 376.21 570.81 373.71Z\" fill=\"url(#paint35_linear_1_2)\"/>\r\n            <path id=\"Vector_48\" d=\"M505.32 468.36C498.54 454.5 509.11 427.36 528.81 425.12C543.66 423.43 555.43 436.82 559.13 445.9C559.36 446.46 563.23 456.2 559.85 459.04C558.54 460.15 556.85 459.62 555.85 461.12C554.67 462.86 556.1 464.9 556.28 468.21C556.266 470.976 555.58 473.698 554.28 476.14C549.96 484.53 526.98 486.92 512.28 475.94C509.86 474.08 507.14 472.04 505.32 468.36Z\" fill=\"url(#paint36_linear_1_2)\"/>\r\n            <path id=\"Vector_49\" d=\"M584.01 398.29C582.42 395.29 576.15 397.65 560.74 397.42C549.29 397.24 545.97 395.82 543.62 398.42C540.02 402.42 543.08 411.13 546.25 415.98C550.84 422.98 560.49 429.37 567.47 426.66C570.07 425.66 570.22 424.21 578.6 409.98C583.62 401.42 584.8 399.86 584.01 398.29Z\" fill=\"url(#paint37_linear_1_2)\"/>\r\n            <path id=\"Vector_50\" d=\"M454.18 352.05C453.35 352.52 452.93 353.88 452.18 356.59C451.052 360.346 450.41 364.231 450.27 368.15C450.19 380.15 450.13 388.09 455.69 394.64C456.69 395.78 462.81 403.04 470.32 401.95C478.98 400.7 484.89 389.03 483.32 380.15C482.64 376.25 479.88 373.15 474.39 366.98C470.25 362.36 458.69 349.48 454.18 352.05Z\" fill=\"url(#paint38_linear_1_2)\"/>\r\n            <path id=\"Vector_51\" d=\"M459.15 401.95C456.58 403.49 457.27 405.57 453.74 408.83C448.74 413.43 444.91 411.57 441.15 415.27C439.84 416.57 439.36 417.73 437.2 429.32C434.56 443.52 434.65 445.13 435.44 447.03C437.84 452.75 444.1 455.09 447.59 456.39C449.08 456.95 466.2 463.04 478.32 452.73C491.85 441.22 488.87 418 478.47 407.95C473.44 403.1 464.22 398.93 459.15 401.95Z\" fill=\"url(#paint39_linear_1_2)\"/>\r\n            <path id=\"Vector_52\" d=\"M546.66 424.49C552.78 420.06 561.03 423.15 568.66 426.01C574.58 428.22 578.54 429.7 578.97 432.54C579.89 438.54 564.66 447.29 550.88 447.03C545.09 446.92 543.23 445.28 542.54 444.54C538.32 439.99 540.42 429.01 546.66 424.49Z\" fill=\"url(#paint40_linear_1_2)\"/>\r\n            <path id=\"Vector_53\" d=\"M533.18 402.54C536.3 401.65 542.43 401.14 545.86 404.54C549.29 407.94 548.08 412.66 552.69 415.86C554.69 417.23 555.29 416.63 556.55 417.86C559.93 421.29 558.36 428.47 556.39 432.59C554.516 436.637 551.267 439.886 547.22 441.76C538.29 445.55 525.06 441.25 520.49 430.83C515.35 419.11 523.64 405.25 533.18 402.54Z\" fill=\"url(#paint41_linear_1_2)\"/>\r\n            <path id=\"Vector_54\" d=\"M508.42 385.71C507.42 385.96 502.68 387.17 500.81 390.98C499.75 393.12 500.62 393.89 500.03 397.81C499.4 401.475 497.931 404.945 495.74 407.95C493.63 411.02 492.95 410.59 490.27 413.81C487.146 417.669 484.824 422.112 483.44 426.88C481.52 432.88 480.56 435.88 481.69 438.39C482.82 440.9 485.38 442.32 502.37 445.81C513.8 448.15 515.46 449.25 518.37 448.15C519.98 447.54 522.44 446.2 528.71 434.88C538 418.12 538.46 410.47 538.47 407.17C538.47 402.77 537.7 400.22 536.47 398.17C535.89 397.17 534.23 394.6 526.71 390.75C518.83 386.72 514.01 384.27 508.42 385.71Z\" fill=\"url(#paint42_linear_1_2)\"/>\r\n            <path id=\"Vector_55\" d=\"M531.42 423.03C532.81 424.09 533.75 426.91 537.86 431.81C538.65 432.877 539.735 433.69 540.98 434.15C542.87 434.76 543.86 433.91 545.66 434.15C547.97 434.45 549.44 436.22 551.13 438.25C553.201 440.769 554.549 443.804 555.03 447.03C555.33 449.13 555.68 451.51 554.64 454.03C553.02 457.97 549.76 460.03 545.86 462.42C543.874 463.708 541.72 464.717 539.46 465.42C535.052 466.666 530.39 466.707 525.96 465.54C523.54 464.98 520.84 463.65 515.42 461.06C514.57 460.65 510.84 458.85 505.86 455.98C500.41 452.84 497.69 451.27 497.27 450.32C493.52 441.72 524.81 417.98 531.42 423.03Z\" fill=\"url(#paint43_linear_1_2)\"/>\r\n            <path id=\"Vector_56\" d=\"M530.69 427.12C532.92 429.32 531.69 430.83 534.44 436.34C535.62 438.71 536.52 439.74 536.44 441.63C536.298 443.127 535.661 444.535 534.63 445.63C532.93 447.49 530.63 447.87 527.63 448.35C523.68 448.97 523.69 448.22 520.55 448.78C516.35 449.53 516.01 450.92 512.43 451.14C510.445 451.25 508.459 450.957 506.59 450.28C505.02 449.71 500.25 448 499.93 445.35C499.47 441.61 508.53 441.35 516.59 431.84C519.37 428.58 521.01 425.41 524.51 424.98C525.633 424.875 526.766 425.012 527.832 425.381C528.897 425.75 529.872 426.343 530.69 427.12V427.12Z\" fill=\"url(#paint44_linear_1_2)\"/>\r\n            <path id=\"Vector_57\" d=\"M474.25 430.05C471.49 432.96 469.96 434.21 468.79 437.05C467.655 439.906 467.31 443.015 467.79 446.05C468.037 449.299 469.427 452.356 471.713 454.677C474 456.998 477.035 458.434 480.28 458.73C483.58 459.33 484.37 458.62 496.08 456.59C500.94 455.74 502.39 455.59 504.28 454.25C506.604 452.498 508.302 450.043 509.12 447.25C510.82 441.94 508.88 437.3 505.84 430.02C502.99 423.2 501.57 419.8 497.84 417.73C497.57 417.58 492.05 414.62 486.33 416.73C482.01 418.36 482.85 420.98 474.25 430.05Z\" fill=\"url(#paint45_linear_1_2)\"/>\r\n            <path id=\"Vector_58\" d=\"M463.13 399.81C463.279 398.059 463.882 396.377 464.88 394.93C465.78 393.59 466.53 393.15 468.39 391.42C470.87 389.11 471.57 387.99 472.49 387.12C476 383.83 483.36 383.67 488.88 386.12C491.42 387.284 493.656 389.02 495.413 391.192C497.171 393.364 498.402 395.913 499.01 398.64C500.67 406.19 496.48 412.2 493.16 416.98C488.73 423.33 480.24 431.43 475.59 429.27C474 428.53 473.23 426.17 471.69 421.47C469.12 413.59 470.69 412.47 468.37 408.39C465.95 404.03 463.01 403.22 463.13 399.81Z\" fill=\"url(#paint46_linear_1_2)\"/>\r\n            <path id=\"Vector_59\" d=\"M505.39 412.54C504.1 413.68 505.19 415.09 503.74 417.42C502.29 419.75 500.27 419.42 497.49 422.1C496.054 423.606 494.9 425.357 494.08 427.27C492.53 430.27 491.36 432.56 491.64 435.56C491.705 437.178 492.248 438.74 493.2 440.05C494.78 442.05 496.99 442.35 503.05 443.27C513.43 444.84 514.05 445.08 515.64 444.44C519.97 442.73 521.94 438.56 522.57 437.22C525.4 431.22 523.43 425.44 522.86 423.86C521.546 420.21 519.122 417.063 515.93 414.86C513.01 412.91 507.63 410.57 505.39 412.54Z\" fill=\"url(#paint47_linear_1_2)\"/>\r\n            <path id=\"Vector_60\" d=\"M611.88 388.76C614.44 386.4 617.654 384.869 621.1 384.37C622.73 384.06 630.89 382.53 633.68 386.37C636.33 390.06 631.96 395.55 634.85 398.51C636.76 400.46 639.49 398.94 641 400.85C643.11 403.53 640 409.25 638.81 411.39C636.25 416.06 632.37 423.16 625.93 423.98C616.87 425.13 607.33 413.28 606.93 402.61C606.85 401.27 606.55 393.91 611.88 388.76Z\" fill=\"url(#paint48_linear_1_2)\"/>\r\n            <path id=\"Vector_61\" d=\"M581.69 532.01C578.86 535.37 578.54 542.06 580.13 546.84C581.41 550.69 584.19 554.07 583.05 558.54C582.68 560.04 582.05 560.8 582.47 561.28C583.62 562.65 590.99 558.93 596.32 554.84C600.11 551.93 611.16 543.45 609.2 536.69C606.92 528.82 587.51 525.09 581.69 532.01Z\" fill=\"url(#paint49_linear_1_2)\"/>\r\n            <path id=\"Vector_62\" d=\"M569.4 495.36C557.33 489.04 541.4 499.02 538.96 506.68C537.35 511.82 538.76 515.27 538.76 515.27C539.58 517.27 540.49 517.41 540.91 519.17C541.8 522.95 538.23 525.08 538.76 527.75C539.41 531 545.76 533.18 551.05 533.22C556.68 533.22 562.36 529.61 573.49 522.29C578.21 519.19 578.96 518.4 579.49 517.22C582.69 510.77 577.6 499.62 569.4 495.36Z\" fill=\"url(#paint50_linear_1_2)\"/>\r\n            <path id=\"Vector_63\" d=\"M657.01 474.45C663.71 469.4 673.6 466.45 675.93 469.37C676.99 470.72 676.19 473.2 674.57 478.15C673.694 480.781 672.583 483.328 671.25 485.76C667.94 491.93 664.91 497.57 659.15 499.42C658.235 499.828 657.221 499.964 656.23 499.81C651.36 498.73 647.77 487.9 651.35 480.5C652.7 477.68 654.7 476.18 657.01 474.45Z\" fill=\"url(#paint51_linear_1_2)\"/>\r\n            <path id=\"Vector_64\" d=\"M611.01 541.76C609.91 548.15 613.92 553.3 620.96 562.06C623.78 565.56 644.24 591.01 652.76 586.45C659.59 582.79 654.76 562.06 653.35 556.2C650.22 542.88 646.88 528.65 636.18 525.96C626.12 523.44 612.68 531.76 611.01 541.76Z\" fill=\"url(#paint52_linear_1_2)\"/>\r\n            <path id=\"Vector_65\" d=\"M590.08 494.74C588.35 499.03 588.85 501.08 589.69 502.15C591.43 504.39 594.86 502.69 598.86 505.28C601.73 507.13 601.12 508.75 603.74 510.74C607.39 513.51 614.13 514.59 617.4 511.32C621.19 507.54 618.2 500.01 616.4 496.89C615.71 495.67 611.94 489.06 604.16 488.29C595.66 487.44 590.35 494.36 590.08 494.74Z\" stroke=\"#53445D\" stroke-miterlimit=\"10\"/>\r\n            <path id=\"Vector_66\" d=\"M588.52 430.15C590.27 421.56 596.52 416.81 601.59 412.98C610.43 406.28 620.25 404.06 620.71 404.98C620.99 405.53 617.71 406.68 617.4 409.28C617.02 412.43 621.49 413.81 624.62 418.45C627.38 422.54 627.44 426.72 627.54 434.25C627.66 442.52 627.72 446.65 625.4 449.86C619.83 457.55 603 459.3 593.98 450.45C586.14 442.75 588.33 431.08 588.52 430.15Z\" fill=\"url(#paint53_linear_1_2)\"/>\r\n            <path id=\"Vector_67\" d=\"M643.35 445.57C645.09 442.97 645.29 440.28 645.49 437.57C645.76 434.07 646.04 430.38 644.13 429.02C640.36 426.34 630.78 434.63 628.52 436.59C624.77 439.84 621.4 442.84 622.08 445.96C622.76 449.08 626.68 450.28 627.74 450.64C633.15 452.49 640.11 450.36 643.35 445.57Z\" fill=\"url(#paint54_linear_1_2)\"/>\r\n            <path id=\"Vector_68\" d=\"M666.18 439.93C664.87 438.93 661.7 443.06 655.05 445.2C650.35 446.72 649.4 445.47 643.35 446.57C637.3 447.67 631.13 448.79 628.71 453.2C625.88 458.38 628.9 466.71 633.79 470.57C636.79 472.91 638.35 471.9 647.84 476.03C652.74 478.17 653.01 478.74 654.47 478.57C660.42 477.86 666.02 467.11 665.4 458.08C665.17 454.88 664.27 453.39 664.62 449.3C665.08 443.81 667.19 440.68 666.18 439.93Z\" fill=\"url(#paint55_linear_1_2)\"/>\r\n            <path id=\"Vector_69\" d=\"M593.4 457.67C592.98 453.59 600.45 449.34 605.69 447.67C614.59 444.91 627.61 446.42 633.4 455.48C636.88 460.93 638 469.48 634.4 472.48C632.18 474.28 629.28 473.08 613.72 467.4C597.01 461.36 593.66 460.28 593.4 457.67Z\" fill=\"url(#paint56_linear_1_2)\"/>\r\n            <path id=\"Vector_70\" d=\"M601.79 473.47C602.5 467.24 612.79 463.33 619.54 462.74C632.16 461.64 643.54 471.03 646.47 482.25C647.18 484.95 649.34 493.14 645.3 496.69C636.26 504.63 600.38 485.74 601.79 473.47Z\" fill=\"url(#paint57_linear_1_2)\"/>\r\n            <path id=\"Vector_71\" d=\"M636.08 477.36C639.02 473.83 644.86 471.79 649.35 473.85C655.65 476.73 657.06 486.7 654.62 489.65C654.331 489.891 654.093 490.188 653.921 490.523C653.75 490.858 653.647 491.224 653.62 491.6C653.75 493.05 655.92 493.65 657.13 494.53C660.99 497.32 661.24 507.29 657.33 509.94C653.42 512.59 645.55 507.51 641.52 503.31C635.15 496.67 630.45 484.14 636.08 477.36Z\" fill=\"url(#paint58_linear_1_2)\"/>\r\n            <path id=\"Vector_72\" d=\"M669.69 499.81C673.62 501.22 673.33 503.97 679.05 507.03C679.86 507.47 680.72 507.86 680.81 508.59C681.08 510.68 674.81 512.99 673.98 513.28C668.98 515.08 663.51 517.04 660.13 513.86C656.75 510.68 656.67 504.13 660.13 500.98C662.94 498.42 667.33 498.97 669.69 499.81Z\" fill=\"url(#paint59_linear_1_2)\"/>\r\n            <path id=\"Vector_73\" d=\"M664.01 512.5C668.01 513.35 670.14 518.67 672.6 524.79C674.3 529.04 677.52 537.04 674.35 540.2C671.18 543.36 663.84 539.32 661.28 542.93C660.03 544.69 661.28 546.35 659.72 548.01C657.88 550.01 654.06 549.86 651.52 548.79C646.68 546.79 645.31 540.79 645.08 539.79C642.25 527.41 656.01 510.79 664.01 512.5Z\" fill=\"url(#paint60_linear_1_2)\"/>\r\n            <path id=\"Vector_74\" d=\"M628.32 532.2C629.491 533.765 630.951 535.092 632.62 536.11C638.85 540.11 648.34 540.45 653.1 535.91C654.03 535.02 655.35 532.07 657.98 526.15C659.8 522.06 660.72 520.01 660.91 518.93C661.33 515.777 660.858 512.57 659.546 509.673C658.234 506.776 656.136 504.304 653.49 502.54C645.42 497.54 634.12 502.24 628.91 509.54C624.17 516.23 623.78 526.03 628.32 532.2Z\" fill=\"url(#paint61_linear_1_2)\"/>\r\n            <path id=\"Vector_75\" d=\"M596.1 526.36C594.79 533.64 604.68 540.65 605.47 541.19C610.23 544.48 619.03 547.92 623.81 544.12C624.39 543.66 625.81 542.38 627.32 535.34C629.44 525.51 630.58 520.22 628.1 517.19C622.4 510.18 598.01 515.79 596.1 526.36Z\" fill=\"url(#paint62_linear_1_2)\"/>\r\n            <path id=\"Vector_76\" d=\"M573.91 414.74C576.8 413.51 583.38 421.85 596.54 438.54C598.117 440.339 599.074 442.596 599.27 444.98C599.46 449.46 596.27 453.98 592.27 455.91C586.09 458.98 578.27 455.91 574.51 451.23C573.74 450.23 571.83 447.62 571.59 434.84C571.35 422.06 571.21 415.89 573.91 414.74Z\" fill=\"url(#paint63_linear_1_2)\"/>\r\n            <path id=\"Vector_77\" d=\"M571.15 481.08C571.15 481.08 568.31 475.16 571.74 465.47C572.092 464.169 572.93 463.052 574.08 462.35V462.35C575.08 461.69 575.43 461.89 576.23 461.18C577.3 460.18 577.03 459.48 578.18 458.06C578.87 457.2 579.18 457.28 580.18 456.3C581.101 455.373 581.888 454.323 582.52 453.18C584.59 450.34 601.24 450.72 608.67 462.18C608.99 462.68 615.38 472.87 610.42 482.09C605.46 491.31 592.74 492.09 585.64 490.67C582.73 490.05 574.66 488.36 571.15 481.08Z\" fill=\"url(#paint64_linear_1_2)\"/>\r\n            <path id=\"Vector_78\" d=\"M576.62 481.28C573.9 481.42 569.27 481.75 566.47 485.18C564.2 487.96 563.32 492.58 564.91 493.96C565.7 494.65 566.56 494.06 567.25 494.74C568.73 496.2 565.56 499.74 566.08 503.32C566.68 507.41 572.01 510.62 576.42 511.32C582.81 512.32 587.85 508.22 591.42 505.32C595.19 502.22 600.8 497.62 600.2 492.44C599.34 484.85 585.81 480.77 576.62 481.28Z\" fill=\"url(#paint65_linear_1_2)\"/>\r\n            <path id=\"Vector_79\" d=\"M578.18 491.23C571.91 497.74 569.81 509.53 573.69 516.01C574.83 517.9 576.23 518.94 578.76 523.23C581.95 528.63 581.54 530.07 583.64 532.01C585.447 533.542 587.638 534.551 589.977 534.928C592.316 535.305 594.713 535.036 596.91 534.15C601.91 531.88 600.53 527.32 606.66 522.06C611.76 517.69 614.56 519.23 617.59 515.62C621.74 510.62 621.44 501.89 618.37 496.3C611.82 484.36 588.9 480.08 578.18 491.23Z\" fill=\"url(#paint66_linear_1_2)\"/>\r\n            <path id=\"Vector_80\" d=\"M608.01 484.62C611.78 481.26 621.21 486.15 625.77 488.52C631.28 491.37 637.92 494.82 639.43 501.79C640.27 505.66 639.68 511.34 635.72 514.67C630.46 519.1 622.72 516.43 621.72 516.03C608.46 511.21 602.7 489.36 608.01 484.62Z\" fill=\"url(#paint67_linear_1_2)\"/>\r\n            </g>\r\n            </g>\r\n            <defs>\r\n            <linearGradient id=\"paint0_linear_1_2\" x1=\"439.11\" y1=\"49.83\" x2=\"487.53\" y2=\"35.5\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.08\" stop-color=\"#5D435F\"/>\r\n            <stop offset=\"0.34\" stop-color=\"#684662\"/>\r\n            <stop offset=\"0.77\" stop-color=\"#864A6B\"/>\r\n            <stop offset=\"1\" stop-color=\"#9A4E71\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint1_linear_1_2\" x1=\"485.74\" y1=\"58.08\" x2=\"695.36\" y2=\"196.56\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#80496A\"/>\r\n            <stop offset=\"0.22\" stop-color=\"#994D70\"/>\r\n            <stop offset=\"0.48\" stop-color=\"#AA5479\"/>\r\n            <stop offset=\"0.87\" stop-color=\"#BF597D\" stop-opacity=\"0.9\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint2_linear_1_2\" x1=\"257.27\" y1=\"736.23\" x2=\"650.56\" y2=\"148.43\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#3E3C55\"/>\r\n            <stop offset=\"0.34\" stop-color=\"#403C56\"/>\r\n            <stop offset=\"0.49\" stop-color=\"#483E58\"/>\r\n            <stop offset=\"0.52\" stop-color=\"#4B3E59\"/>\r\n            <stop offset=\"0.72\" stop-color=\"#55415C\"/>\r\n            <stop offset=\"0.85\" stop-color=\"#7A4867\"/>\r\n            <stop offset=\"0.96\" stop-color=\"#A65277\"/>\r\n            <stop offset=\"1\" stop-color=\"#B26080\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint3_linear_1_2\" x1=\"378.16\" y1=\"119.38\" x2=\"478.37\" y2=\"115.13\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#3E3D54\"/>\r\n            <stop offset=\"0.26\" stop-color=\"#403D55\"/>\r\n            <stop offset=\"0.34\" stop-color=\"#453E56\"/>\r\n            <stop offset=\"0.57\" stop-color=\"#6B4563\"/>\r\n            <stop offset=\"0.73\" stop-color=\"#704565\"/>\r\n            <stop offset=\"1\" stop-color=\"#7C4867\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint4_linear_1_2\" x1=\"653.02\" y1=\"128.35\" x2=\"676.02\" y2=\"128.58\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#80496A\"/>\r\n            <stop offset=\"0.37\" stop-color=\"#994D70\"/>\r\n            <stop offset=\"0.62\" stop-color=\"#AA5479\"/>\r\n            <stop offset=\"0.87\" stop-color=\"#BF597D\" stop-opacity=\"0.9\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint5_linear_1_2\" x1=\"536.78\" y1=\"173.09\" x2=\"618.23\" y2=\"173.09\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#4D445C\"/>\r\n            <stop offset=\"1\" stop-color=\"#A1618B\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint6_linear_1_2\" x1=\"335.06\" y1=\"336.98\" x2=\"412.94\" y2=\"367.55\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#4C415A\"/>\r\n            <stop offset=\"0.42\" stop-color=\"#4F3F59\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint7_linear_1_2\" x1=\"389.69\" y1=\"408.48\" x2=\"417.56\" y2=\"408.48\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.48\" stop-color=\"#714663\"/>\r\n            <stop offset=\"0.95\" stop-color=\"#5D435F\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint8_linear_1_2\" x1=\"345.08\" y1=\"376.27\" x2=\"371.54\" y2=\"345.05\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#754766\"/>\r\n            <stop offset=\"0.82\" stop-color=\"#4D415A\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint9_linear_1_2\" x1=\"397.54\" y1=\"297.37\" x2=\"377.58\" y2=\"332.89\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.24\" stop-color=\"#664561\"/>\r\n            <stop offset=\"0.72\" stop-color=\"#674661\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint10_linear_1_2\" x1=\"376.52\" y1=\"363.4\" x2=\"393.14\" y2=\"369.93\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#4A405B\"/>\r\n            <stop offset=\"0.74\" stop-color=\"#794766\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint11_linear_1_2\" x1=\"277.25\" y1=\"338.32\" x2=\"332.36\" y2=\"338.32\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#764667\"/>\r\n            <stop offset=\"0.96\" stop-color=\"#56415E\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint12_linear_1_2\" x1=\"317.36\" y1=\"288.06\" x2=\"352.34\" y2=\"337.17\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#49415A\"/>\r\n            <stop offset=\"0.89\" stop-color=\"#4C4159\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint13_linear_1_2\" x1=\"308.4\" y1=\"338.66\" x2=\"366.41\" y2=\"338.66\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#844B6B\"/>\r\n            <stop offset=\"1\" stop-color=\"#4B415A\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint14_linear_1_2\" x1=\"354.36\" y1=\"288.69\" x2=\"372.27\" y2=\"324.41\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#4C4159\"/>\r\n            <stop offset=\"0.95\" stop-color=\"#4C4059\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint15_linear_1_2\" x1=\"402.5\" y1=\"352.54\" x2=\"442.6\" y2=\"337.23\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#59425C\"/>\r\n            <stop offset=\"0.8\" stop-color=\"#6E4563\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint16_linear_1_2\" x1=\"428.36\" y1=\"317.02\" x2=\"386.71\" y2=\"342.98\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#6B4464\"/>\r\n            <stop offset=\"0.8\" stop-color=\"#4F445C\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint17_linear_1_2\" x1=\"405.7\" y1=\"363.56\" x2=\"447.67\" y2=\"363.56\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#4A405B\"/>\r\n            <stop offset=\"0.62\" stop-color=\"#6D4664\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint18_linear_1_2\" x1=\"405.47\" y1=\"383.41\" x2=\"435.5\" y2=\"398.22\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#4A405B\"/>\r\n            <stop offset=\"0.34\" stop-color=\"#794766\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint19_linear_1_2\" x1=\"375.96\" y1=\"374.67\" x2=\"412.28\" y2=\"387.15\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#4A405B\"/>\r\n            <stop offset=\"0.59\" stop-color=\"#794766\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint20_linear_1_2\" x1=\"415.44\" y1=\"377.26\" x2=\"461.54\" y2=\"377.26\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#4A405B\"/>\r\n            <stop offset=\"0.62\" stop-color=\"#6D4664\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint21_linear_1_2\" x1=\"368.4\" y1=\"428.91\" x2=\"388.79\" y2=\"377.29\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.12\" stop-color=\"#664661\"/>\r\n            <stop offset=\"0.87\" stop-color=\"#654663\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint22_linear_1_2\" x1=\"416.28\" y1=\"399.37\" x2=\"437.22\" y2=\"417.98\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.07\" stop-color=\"#4A405B\"/>\r\n            <stop offset=\"0.59\" stop-color=\"#794766\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint23_linear_1_2\" x1=\"358.06\" y1=\"333.61\" x2=\"384.11\" y2=\"350.27\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.48\" stop-color=\"#714663\"/>\r\n            <stop offset=\"0.95\" stop-color=\"#6A4464\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint24_linear_1_2\" x1=\"360.37\" y1=\"395.57\" x2=\"373.52\" y2=\"378.73\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.48\" stop-color=\"#714663\"/>\r\n            <stop offset=\"0.95\" stop-color=\"#5D435F\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint25_linear_1_2\" x1=\"334.08\" y1=\"319.42\" x2=\"368.74\" y2=\"325.93\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#4C4159\"/>\r\n            <stop offset=\"0.03\" stop-color=\"#8E4C6F\"/>\r\n            <stop offset=\"0.94\" stop-color=\"#59415B\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint26_linear_1_2\" x1=\"396.86\" y1=\"342.26\" x2=\"425.84\" y2=\"372.93\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.05\" stop-color=\"#5B435E\"/>\r\n            <stop offset=\"0.7\" stop-color=\"#664561\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint27_linear_1_2\" x1=\"537.01\" y1=\"479.79\" x2=\"564.22\" y2=\"507.04\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.36\" stop-color=\"#53445D\"/>\r\n            <stop offset=\"0.7\" stop-color=\"#724666\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint28_linear_1_2\" x1=\"513.71\" y1=\"499.53\" x2=\"501.61\" y2=\"472.41\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.06\" stop-color=\"#604461\"/>\r\n            <stop offset=\"0.58\" stop-color=\"#4C4159\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint29_linear_1_2\" x1=\"449.43\" y1=\"476.73\" x2=\"483.08\" y2=\"452.81\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.21\" stop-color=\"#4A415A\"/>\r\n            <stop offset=\"0.47\" stop-color=\"#413E56\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint30_linear_1_2\" x1=\"404.42\" y1=\"431.34\" x2=\"450.54\" y2=\"431.34\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.28\" stop-color=\"#684663\"/>\r\n            <stop offset=\"0.69\" stop-color=\"#504059\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint31_linear_1_2\" x1=\"533.51\" y1=\"358.96\" x2=\"524.32\" y2=\"398.4\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.15\" stop-color=\"#7B4666\"/>\r\n            <stop offset=\"0.55\" stop-color=\"#5E435F\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint32_linear_1_2\" x1=\"490.2\" y1=\"345.85\" x2=\"487.71\" y2=\"392.93\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#664661\"/>\r\n            <stop offset=\"0.78\" stop-color=\"#674362\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint33_linear_1_2\" x1=\"496.47\" y1=\"373.73\" x2=\"527.06\" y2=\"393.93\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.15\" stop-color=\"#614561\"/>\r\n            <stop offset=\"0.77\" stop-color=\"#884C6D\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint34_linear_1_2\" x1=\"511.43\" y1=\"440.83\" x2=\"476\" y2=\"485.11\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.2\" stop-color=\"#57425E\"/>\r\n            <stop offset=\"0.58\" stop-color=\"#614460\"/>\r\n            <stop offset=\"0.87\" stop-color=\"#6A4462\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint35_linear_1_2\" x1=\"534.28\" y1=\"401.25\" x2=\"568.08\" y2=\"375.05\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.23\" stop-color=\"#684663\"/>\r\n            <stop offset=\"0.85\" stop-color=\"#684662\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint36_linear_1_2\" x1=\"505.88\" y1=\"445.84\" x2=\"561.15\" y2=\"463.3\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.39\" stop-color=\"#5C425D\"/>\r\n            <stop offset=\"0.69\" stop-color=\"#694463\"/>\r\n            <stop offset=\"0.87\" stop-color=\"#894C6B\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint37_linear_1_2\" x1=\"543.41\" y1=\"416.33\" x2=\"583.46\" y2=\"402.88\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.38\" stop-color=\"#6D4563\"/>\r\n            <stop offset=\"0.84\" stop-color=\"#954D71\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint38_linear_1_2\" x1=\"456.11\" y1=\"356.21\" x2=\"472.91\" y2=\"396.55\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.22\" stop-color=\"#6F4564\"/>\r\n            <stop offset=\"0.38\" stop-color=\"#614461\"/>\r\n            <stop offset=\"0.7\" stop-color=\"#494058\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint39_linear_1_2\" x1=\"477.85\" y1=\"417.93\" x2=\"438.61\" y2=\"452.73\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.28\" stop-color=\"#52415C\"/>\r\n            <stop offset=\"0.69\" stop-color=\"#644661\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint40_linear_1_2\" x1=\"540.34\" y1=\"434.65\" x2=\"579.04\" y2=\"434.65\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.52\" stop-color=\"#55415D\"/>\r\n            <stop offset=\"0.94\" stop-color=\"#774769\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint41_linear_1_2\" x1=\"518.92\" y1=\"422.5\" x2=\"558.53\" y2=\"422.5\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.38\" stop-color=\"#6D4563\"/>\r\n            <stop offset=\"0.84\" stop-color=\"#954D71\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint42_linear_1_2\" x1=\"493.41\" y1=\"416.94\" x2=\"552.89\" y2=\"416.94\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.16\" stop-color=\"#624661\"/>\r\n            <stop offset=\"0.69\" stop-color=\"#824C6C\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint43_linear_1_2\" x1=\"498.4\" y1=\"438.09\" x2=\"555.65\" y2=\"449.54\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.39\" stop-color=\"#6C4564\"/>\r\n            <stop offset=\"0.77\" stop-color=\"#844B6A\"/>\r\n            <stop offset=\"0.94\" stop-color=\"#984E72\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint44_linear_1_2\" x1=\"508.48\" y1=\"435.83\" x2=\"543.69\" y2=\"444.04\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.16\" stop-color=\"#50425C\" stop-opacity=\"0.7\"/>\r\n            <stop offset=\"0.69\" stop-color=\"#664762\" stop-opacity=\"0.6\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint45_linear_1_2\" x1=\"502.57\" y1=\"427.26\" x2=\"473.85\" y2=\"458.15\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.16\" stop-color=\"#52415C\"/>\r\n            <stop offset=\"0.82\" stop-color=\"#694764\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint46_linear_1_2\" x1=\"463.12\" y1=\"407.04\" x2=\"499.4\" y2=\"407.04\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.22\" stop-color=\"#814A6B\"/>\r\n            <stop offset=\"0.89\" stop-color=\"#6F4666\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint47_linear_1_2\" x1=\"498.52\" y1=\"428.28\" x2=\"532.23\" y2=\"428.28\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.16\" stop-color=\"#56425D\"/>\r\n            <stop offset=\"0.69\" stop-color=\"#894B6D\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint48_linear_1_2\" x1=\"613.69\" y1=\"387.82\" x2=\"636.19\" y2=\"421.15\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.11\" stop-color=\"#714766\"/>\r\n            <stop offset=\"0.41\" stop-color=\"#6C4564\"/>\r\n            <stop offset=\"0.81\" stop-color=\"#654462\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint49_linear_1_2\" x1=\"584.96\" y1=\"562.34\" x2=\"598.11\" y2=\"528.77\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.17\" stop-color=\"#664762\"/>\r\n            <stop offset=\"0.46\" stop-color=\"#674362\"/>\r\n            <stop offset=\"0.75\" stop-color=\"#664562\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint50_linear_1_2\" x1=\"546.49\" y1=\"532.56\" x2=\"568.54\" y2=\"496.47\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.25\" stop-color=\"#794667\"/>\r\n            <stop offset=\"0.46\" stop-color=\"#664563\"/>\r\n            <stop offset=\"0.75\" stop-color=\"#4F415B\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint51_linear_1_2\" x1=\"652.46\" y1=\"478.36\" x2=\"676.64\" y2=\"489.24\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.15\" stop-color=\"#6C4563\"/>\r\n            <stop offset=\"0.36\" stop-color=\"#6E4564\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint52_linear_1_2\" x1=\"629.76\" y1=\"543.12\" x2=\"647.88\" y2=\"584.84\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.12\" stop-color=\"#53425D\"/>\r\n            <stop offset=\"0.95\" stop-color=\"#744566\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint53_linear_1_2\" x1=\"586.64\" y1=\"423.06\" x2=\"628.09\" y2=\"434.8\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.28\" stop-color=\"#6D4664\"/>\r\n            <stop offset=\"0.56\" stop-color=\"#7F496A\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint54_linear_1_2\" x1=\"623.06\" y1=\"436.11\" x2=\"645.86\" y2=\"442.57\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.5\" stop-color=\"#874D6D\"/>\r\n            <stop offset=\"0.81\" stop-color=\"#BC587D\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint55_linear_1_2\" x1=\"638.95\" y1=\"469.66\" x2=\"667\" y2=\"440.06\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#6E4564\"/>\r\n            <stop offset=\"0.57\" stop-color=\"#BC587D\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint56_linear_1_2\" x1=\"610.23\" y1=\"469.42\" x2=\"632.96\" y2=\"438.1\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.13\" stop-color=\"#7B4868\"/>\r\n            <stop offset=\"0.49\" stop-color=\"#8F4E6F\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint57_linear_1_2\" x1=\"601.75\" y1=\"480.61\" x2=\"647.69\" y2=\"480.61\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.17\" stop-color=\"#664762\"/>\r\n            <stop offset=\"0.46\" stop-color=\"#674362\"/>\r\n            <stop offset=\"0.75\" stop-color=\"#664562\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint58_linear_1_2\" x1=\"642.19\" y1=\"482.95\" x2=\"664.79\" y2=\"516.41\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.11\" stop-color=\"#6C4463\"/>\r\n            <stop offset=\"0.41\" stop-color=\"#7E4A68\"/>\r\n            <stop offset=\"0.65\" stop-color=\"#744766\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint59_linear_1_2\" x1=\"657.71\" y1=\"506.51\" x2=\"680.77\" y2=\"509\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.16\" stop-color=\"#55435E\"/>\r\n            <stop offset=\"0.76\" stop-color=\"#734563\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint60_linear_1_2\" x1=\"644.72\" y1=\"530.96\" x2=\"675.71\" y2=\"530.96\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.12\" stop-color=\"#53425D\"/>\r\n            <stop offset=\"0.95\" stop-color=\"#744566\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint61_linear_1_2\" x1=\"626.82\" y1=\"514.39\" x2=\"661.18\" y2=\"525.08\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.32\" stop-color=\"#53425D\"/>\r\n            <stop offset=\"0.84\" stop-color=\"#814A6B\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint62_linear_1_2\" x1=\"620.95\" y1=\"520.02\" x2=\"600.73\" y2=\"546.76\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.11\" stop-color=\"#54435F\"/>\r\n            <stop offset=\"0.41\" stop-color=\"#634462\"/>\r\n            <stop offset=\"0.65\" stop-color=\"#754667\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint63_linear_1_2\" x1=\"573.43\" y1=\"439.98\" x2=\"598.5\" y2=\"427.89\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.13\" stop-color=\"#5E455F\"/>\r\n            <stop offset=\"0.4\" stop-color=\"#744465\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint64_linear_1_2\" x1=\"577.83\" y1=\"461.99\" x2=\"610.45\" y2=\"488.77\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.13\" stop-color=\"#944D70\"/>\r\n            <stop offset=\"0.46\" stop-color=\"#7E4868\"/>\r\n            <stop offset=\"0.75\" stop-color=\"#5B435F\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint65_linear_1_2\" x1=\"572.55\" y1=\"488.9\" x2=\"599.15\" y2=\"510.73\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.13\" stop-color=\"#944D70\"/>\r\n            <stop offset=\"0.46\" stop-color=\"#7E4868\"/>\r\n            <stop offset=\"0.75\" stop-color=\"#5B435F\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint66_linear_1_2\" x1=\"594.41\" y1=\"533.62\" x2=\"597.98\" y2=\"480.61\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.17\" stop-color=\"#7B4666\"/>\r\n            <stop offset=\"0.46\" stop-color=\"#664563\"/>\r\n            <stop offset=\"0.75\" stop-color=\"#51415B\"/>\r\n            </linearGradient>\r\n            <linearGradient id=\"paint67_linear_1_2\" x1=\"607.26\" y1=\"481.43\" x2=\"633.72\" y2=\"513.59\" gradientUnits=\"userSpaceOnUse\">\r\n            <stop offset=\"0.25\" stop-color=\"#52415C\"/>\r\n            <stop offset=\"0.54\" stop-color=\"#6C4463\"/>\r\n            <stop offset=\"0.83\" stop-color=\"#894E6E\"/>\r\n            </linearGradient>\r\n            <clipPath id=\"clip0_1_2\">\r\n            <rect width=\"695\" height=\"724\" fill=\"white\"/>\r\n            </clipPath>\r\n            </defs>\r\n            </svg>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" style=\"display:none\">\r\n        <defs>\r\n            <filter id=\"squiggly-0\">\r\n                <feTurbulence id=\"turbulence\" baseFrequency=\"0.02\" numOctaves=\"3\" result=\"noise\" seed=\"0\" />\r\n                <feDisplacementMap id=\"displacement\" in=\"SourceGraphic\" in2=\"noise\" scale=\"2\" />\r\n            </filter>\r\n            <filter id=\"squiggly-1\">\r\n                <feTurbulence id=\"turbulence\" baseFrequency=\"0.02\" numOctaves=\"3\" result=\"noise\" seed=\"1\" />\r\n                <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"3\" />\r\n            </filter>\r\n            <filter id=\"squiggly-2\">\r\n                <feTurbulence id=\"turbulence\" baseFrequency=\"0.02\" numOctaves=\"3\" result=\"noise\" seed=\"2\" />\r\n                <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"2\" />\r\n            </filter>\r\n            <filter id=\"squiggly-3\">\r\n                <feTurbulence id=\"turbulence\" baseFrequency=\"0.02\" numOctaves=\"3\" result=\"noise\" seed=\"3\" />\r\n                <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"3\" />\r\n            </filter>\r\n            <filter id=\"squiggly-4\">\r\n                <feTurbulence id=\"turbulence\" baseFrequency=\"0.02\" numOctaves=\"3\" result=\"noise\" seed=\"4\" />\r\n                <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"1\" />\r\n            </filter>\r\n        </defs>\r\n      </svg>\r\n    </div><!-- /content -->\r\n\r\n    <div class=\"canvas-bCenter\" >\r\n      <canvas id=\"canvas\" width=\"220\" height=\"220\" ref=\"canvas\" @click=\"trigger\">   </canvas>\r\n    </div>\r\n\r\n    <div>\r\n      <fallen />\r\n    </div>\r\n    \r\n\r\n    <div class=\"text\">\r\n      <h1 class=\"header-1\"> Hello </h1>\r\n      <h1 class=\"header-1\"> I'm Aqua </h1>\r\n      \r\n      \r\n    </div>\r\n    \r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport rough from 'roughjs/bundled/rough.cjs';\r\nimport fallen from './Fallenflower.vue';\r\n\r\nexport default {\r\n  name: 'LyingCat',\r\n  components: {\r\n    fallen\r\n  },\r\n  data() {\r\n    return {\r\n      activate: true,\r\n      vueCanvas: null\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log(document.getElementById('test'))\r\n    console.log(this.$refs.canvas)\r\n    this.vueCanvas = rough.canvas(this.$refs.canvas);//);\r\n    this.vueCanvas.rectangle(20, 70, 180, 80, { \r\n                            roughness: 2.5, \r\n                            fill: '#EBCEA2',\r\n                            hachureAngle: 60,\r\n                            //hachureGap: 8,\r\n                            fillWeight: 3 ,\r\n                            bowing: 1,\r\n                            fillStyle:'solid'\r\n                            });\r\n  },\r\n  methods:{\r\n\r\n    trigger(){\r\n      console.log(\"trigger\")\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import 'node_modules/sassdash';\r\n@import 'node_modules/sass-svg/index';\r\n\r\n  $duration: 17s;\r\n  $size: 0.07;\r\n  $color-fox: #e37c67;\r\n  \r\n/* cat animation */\r\n\r\n.fox {\r\n\tposition: absolute;\r\n\theight: 375vmax * $size;\r\n\twidth: 260vmax * $size;\r\n\tanimation: fox $duration none, squigglevision 0.3s infinite;\r\n\tanimation-timing-function: cubic-bezier(0, 0, 0.80, 0.90);\r\n\tbottom: 2.5vmax;\r\n\tleft: 60%;\r\n\ttransform-origin: bottom right;\r\n\r\n\t*, *:before, *:after {\r\n\t\tanimation-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1) !important;\r\n\t}\r\n\r\n\t* {  \r\n\t\tposition: absolute;\r\n\t\tbackground-size: contain;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\ttransform-style: preserve-3d;\r\n\t\t\r\n\t\t&:before, &:after {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\tdisplay: block;\r\n\t\t\tbackground-size: contain;\r\n\t\t\tbackground-repeat: no-repeat;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.lyingCat {\r\n  \r\n  .text{\r\n    @apply mx-9 ;\r\n\r\n    .header-1{\r\n      @apply font-acme 2xl:text-8xl xl:text-7xl;\r\n      text-align: left;\r\n    }\r\n\r\n  }\r\n  \r\n  .content--cat {\r\n    background: url('../img/cherryTree.png') no-repeat 100% 0%; //center center fixed\r\n    background-size: 45%;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    top: 0;\r\n    //left: 0;\r\n    width: 100%;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    left:50%;\r\n    transform: translateX(-50%); \r\n\r\n    &:after {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100vh;\r\n        background-position: bottom center;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n      /*@include svg((viewBox: (0 0 1290 900))) {\r\n          @include svg('path', (\r\n            fill: #7e8841,\r\n            d: 'M1290,764.1V900H0V722c115.2,0,514.2,135.7,698,134.8C903.5,855.7,1223.5,764.1,1290,764.1z'\r\n          ));\r\n\r\n          @include svg('path', (\r\n            fill: #4f6333,\r\n            d: 'M6,900c0,0,209.1-96.7,417.9-88.5c180.9,7.1,230.7,64.4,442.4,60.9c68.2-1.1,126.6-8.1,233.7-1.5c71.8,4.5,190,29,190,29H6z'\r\n          ));\r\n        }*/\r\n      \r\n    }\r\n\r\n  }\r\n  .place_center{\r\n    @apply flex justify-center;\r\n    .Cat {\r\n      position: absolute;\r\n      @apply  flex justify-center;\r\n      animation: cat $duration none, squigglevision 0.3s infinite;\r\n      animation-timing-function: cubic-bezier(0, 0, 0.8, 0.9);\r\n      bottom: 0;\r\n\r\n      transform-origin: bottom right;\r\n      width : 25vw;\r\n      height: auto;\r\n    }\r\n\r\n  }\r\n\r\n  /*#eye {\r\n    transform-origin: center;\r\n    animation: blink 5s infinite;\r\n  }*/\r\n    \r\n}\r\n\r\n@-webkit-keyframes blink {\r\n  0%, 100% {\r\n      transform: scale(1, .05);\r\n  }\r\n  5%,\r\n  95% {\r\n      transform: scale(1, 1);\r\n  }\r\n}\r\n\r\n.fox-tail {\r\n  z-index: -1;\r\n  $initial-tail-width: 50vmax * $size;\r\n  width: $initial-tail-width;\r\n  height: $initial-tail-width;\r\n  transform-origin: center bottom;\r\n\r\n  &:before {\r\n    transform-origin: center bottom;\r\n\r\n      @include svg((viewBox: (0 0 66.4 66.4))) {\r\n      @include svg('path', (\r\n        fill: rgb(31, 31, 182),\r\n        d: 'M43.0793 30.6286C42.8598 29.2779 42.6111 29.4953 35.3529 19.5903C29.4118 11.4708 26.412 7.34113 25.3437 4.76397C24.4657 2.63705 24.2462 1.56582 23.0756 0.75852C19.5782 -1.66338 13.5054 2.23339 8.91052 5.16762C3.56935 8.58312 0.554866 10.5237 0.0426991 13.9858C-0.264601 16.0351 1.0963 18.752 3.8181 24.2013C4.98877 26.5455 6.32042 29.1848 8.54468 32.6158C11.047 36.4971 13.2127 39.8349 16.6662 43.0331C20.6025 46.6815 24.0267 49.8486 28.3728 49.8176C36.4943 49.771 44.411 38.624 43.0793 30.6286Z'\r\n      ));\r\n    }\r\n  }\r\n\r\n  .fox > & {\r\n    transform: rotate(90deg);\r\n    top: 280vmax * $size;\r\n    left: 160vmax * $size;\r\n  }\r\n\r\n  > .fox-tail {\r\n    animation: tail-inner 3s ease-in-out both infinite;\r\n    top: -$initial-tail-width / 2;\r\n    transform:\r\n      scale(1.1)\r\n      rotate(-35deg);\r\n  }\r\n\r\n  > .fox-tail > .fox-tail > .fox-tail > .fox-tail {\r\n    // opacity: 0.5;\r\n    animation: tail-outer 3s ease-in-out both infinite;\r\n    transform:\r\n      scale(1.1)\r\n      rotate(15deg);\r\n  }\r\n}\r\n\r\n@keyframes tail-inner {\r\n  0% { transform: scale(1.1) rotate(-38deg); }\r\n  50% { transform: scale(1.1) rotate(-35deg); }\r\n  100% { transform: scale(1.1) rotate(-38deg); }\r\n}\r\n\r\n@keyframes tail-outer {\r\n  0% { transform: scale(1.1) rotate(-3deg); }\r\n  50% { transform: scale(1.1) rotate(15deg); }\r\n  100% { transform: scale(1.1) rotate(-3deg); }\r\n}\r\n\r\n/*\r\n  @keyframes tail-inner {\r\n    0% { transform:  rotate(-1deg); }\r\n    50% { transform:  rotate(-2deg); }\r\n    100% { transform: rotate(-3deg); }\r\n  }\r\n\r\n  @keyframes tail-outer {\r\n    0% { transform: scale(1.1) rotate(-3deg); }\r\n    50% { transform: scale(1.1) rotate(15deg); }\r\n    100% { transform: scale(1.1) rotate(-3deg); }\r\n  }\r\n*/\r\n$animations: (\r\n\r\n  'body': (\r\n    (1s, 2s, 3s, 4s): translateY(5vmax * $size),\r\n    (1.2s, 2.2s, 3.2s, 4.2s): translateY(0),\r\n  )\r\n);\r\n\r\n@each $animation-name, $animation in $animations {\r\n  @keyframes #{$animation-name} {\r\n    @each $offsets, $transform in $animation {\r\n      @each $offset in $offsets {      \r\n        #{percentage($offset / $duration)} {\r\n          @if (type-of($transform) == 'number') {\r\n            opacity: $transform;\r\n          } @else {\r\n            transform: #{$transform};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@keyframes squigglevision {\r\n  0% {\r\n    filter: url(\"#squiggly-0\");\r\n  }\r\n  25% {\r\n    filter: url(\"#squiggly-1\");\r\n  }\r\n  50% {\r\n    filter: url(\"#squiggly-2\");\r\n  }\r\n  75% {\r\n    filter: url(\"#squiggly-3\");\r\n  }\r\n  100% {\r\n    filter: url(\"#squiggly-4\");\r\n  }\r\n}\r\n\r\n\r\n/* some style */\r\n\r\n.canvas-bCenter{\r\n  @apply flex justify-center ;\r\n\r\n  #canvas {\r\n    position: absolute;\r\n    top: -20vh;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin:auto;\r\n  }\r\n}\r\n  \r\n\r\n</style>","import { render } from \"./lyingCat.vue?vue&type=template&id=bc41cade\"\nimport script from \"./lyingCat.vue?vue&type=script&lang=js\"\nexport * from \"./lyingCat.vue?vue&type=script&lang=js\"\n\nimport \"./lyingCat.vue?vue&type=style&index=0&id=bc41cade&lang=scss\"\n\nimport exportComponent from \"D:\\\\Project\\\\vue-scss\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"img/typing.5980cc7a.png\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./lyingCat.vue?vue&type=style&index=0&id=bc41cade&lang=scss\"","module.exports = __webpack_public_path__ + \"img/self.4eb78d16.jpg\";","var uncurryThis = require('../internals/function-uncurry-this');\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = uncurryThis(1.0.valueOf);\n","/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n","// drag\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'unidragger/unidragger',\n      'fizzy-ui-utils/utils',\n    ], function( Flickity, Unidragger, utils ) {\n      return factory( window, Flickity, Unidragger, utils );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('./flickity'),\n        require('unidragger'),\n        require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    window.Flickity = factory(\n        window,\n        window.Flickity,\n        window.Unidragger,\n        window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, Unidragger, utils ) {\n\n'use strict';\n\n// ----- defaults ----- //\n\nutils.extend( Flickity.defaults, {\n  draggable: '>1',\n  dragThreshold: 3,\n} );\n\n// ----- create ----- //\n\nFlickity.createMethods.push('_createDrag');\n\n// -------------------------- drag prototype -------------------------- //\n\nvar proto = Flickity.prototype;\nutils.extend( proto, Unidragger.prototype );\nproto._touchActionValue = 'pan-y';\n\n// --------------------------  -------------------------- //\n\nproto._createDrag = function() {\n  this.on( 'activate', this.onActivateDrag );\n  this.on( 'uiChange', this._uiChangeDrag );\n  this.on( 'deactivate', this.onDeactivateDrag );\n  this.on( 'cellChange', this.updateDraggable );\n  // TODO updateDraggable on resize? if groupCells & slides change\n};\n\nproto.onActivateDrag = function() {\n  this.handles = [ this.viewport ];\n  this.bindHandles();\n  this.updateDraggable();\n};\n\nproto.onDeactivateDrag = function() {\n  this.unbindHandles();\n  this.element.classList.remove('is-draggable');\n};\n\nproto.updateDraggable = function() {\n  // disable dragging if less than 2 slides. #278\n  if ( this.options.draggable == '>1' ) {\n    this.isDraggable = this.slides.length > 1;\n  } else {\n    this.isDraggable = this.options.draggable;\n  }\n  if ( this.isDraggable ) {\n    this.element.classList.add('is-draggable');\n  } else {\n    this.element.classList.remove('is-draggable');\n  }\n};\n\n// backwards compatibility\nproto.bindDrag = function() {\n  this.options.draggable = true;\n  this.updateDraggable();\n};\n\nproto.unbindDrag = function() {\n  this.options.draggable = false;\n  this.updateDraggable();\n};\n\nproto._uiChangeDrag = function() {\n  delete this.isFreeScrolling;\n};\n\n// -------------------------- pointer events -------------------------- //\n\nproto.pointerDown = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    this._pointerDownDefault( event, pointer );\n    return;\n  }\n  var isOkay = this.okayPointerDown( event );\n  if ( !isOkay ) {\n    return;\n  }\n\n  this._pointerDownPreventDefault( event );\n  this.pointerDownFocus( event );\n  // blur\n  if ( document.activeElement != this.element ) {\n    // do not blur if already focused\n    this.pointerDownBlur();\n  }\n\n  // stop if it was moving\n  this.dragX = this.x;\n  this.viewport.classList.add('is-pointer-down');\n  // track scrolling\n  this.pointerDownScroll = getScrollPosition();\n  window.addEventListener( 'scroll', this );\n\n  this._pointerDownDefault( event, pointer );\n};\n\n// default pointerDown logic, used for staticClick\nproto._pointerDownDefault = function( event, pointer ) {\n  // track start event position\n  // Safari 9 overrides pageX and pageY. These values needs to be copied. #779\n  this.pointerDownPointer = {\n    pageX: pointer.pageX,\n    pageY: pointer.pageY,\n  };\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  this.dispatchEvent( 'pointerDown', event, [ pointer ] );\n};\n\nvar focusNodes = {\n  INPUT: true,\n  TEXTAREA: true,\n  SELECT: true,\n};\n\nproto.pointerDownFocus = function( event ) {\n  var isFocusNode = focusNodes[ event.target.nodeName ];\n  if ( !isFocusNode ) {\n    this.focus();\n  }\n};\n\nproto._pointerDownPreventDefault = function( event ) {\n  var isTouchStart = event.type == 'touchstart';\n  var isTouchPointer = event.pointerType == 'touch';\n  var isFocusNode = focusNodes[ event.target.nodeName ];\n  if ( !isTouchStart && !isTouchPointer && !isFocusNode ) {\n    event.preventDefault();\n  }\n};\n\n// ----- move ----- //\n\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > this.options.dragThreshold;\n};\n\n// ----- up ----- //\n\nproto.pointerUp = function( event, pointer ) {\n  delete this.isTouchScrolling;\n  this.viewport.classList.remove('is-pointer-down');\n  this.dispatchEvent( 'pointerUp', event, [ pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nproto.pointerDone = function() {\n  window.removeEventListener( 'scroll', this );\n  delete this.pointerDownScroll;\n};\n\n// -------------------------- dragging -------------------------- //\n\nproto.dragStart = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  this.dragStartPosition = this.x;\n  this.startAnimation();\n  window.removeEventListener( 'scroll', this );\n  this.dispatchEvent( 'dragStart', event, [ pointer ] );\n};\n\nproto.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.dispatchEvent( 'pointerMove', event, [ pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  event.preventDefault();\n\n  this.previousDragX = this.dragX;\n  // reverse if right-to-left\n  var direction = this.options.rightToLeft ? -1 : 1;\n  if ( this.options.wrapAround ) {\n    // wrap around move. #589\n    moveVector.x %= this.slideableWidth;\n  }\n  var dragX = this.dragStartPosition + moveVector.x * direction;\n\n  if ( !this.options.wrapAround && this.slides.length ) {\n    // slow drag\n    var originBound = Math.max( -this.slides[0].target, this.dragStartPosition );\n    dragX = dragX > originBound ? ( dragX + originBound ) * 0.5 : dragX;\n    var endBound = Math.min( -this.getLastSlide().target, this.dragStartPosition );\n    dragX = dragX < endBound ? ( dragX + endBound ) * 0.5 : dragX;\n  }\n\n  this.dragX = dragX;\n\n  this.dragMoveTime = new Date();\n  this.dispatchEvent( 'dragMove', event, [ pointer, moveVector ] );\n};\n\nproto.dragEnd = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  if ( this.options.freeScroll ) {\n    this.isFreeScrolling = true;\n  }\n  // set selectedIndex based on where flick will end up\n  var index = this.dragEndRestingSelect();\n\n  if ( this.options.freeScroll && !this.options.wrapAround ) {\n    // if free-scroll & not wrap around\n    // do not free-scroll if going outside of bounding slides\n    // so bounding slides can attract slider, and keep it in bounds\n    var restingX = this.getRestingPosition();\n    this.isFreeScrolling = -restingX > this.slides[0].target &&\n      -restingX < this.getLastSlide().target;\n  } else if ( !this.options.freeScroll && index == this.selectedIndex ) {\n    // boost selection if selected index has not changed\n    index += this.dragEndBoostSelect();\n  }\n  delete this.previousDragX;\n  // apply selection\n  // TODO refactor this, selecting here feels weird\n  // HACK, set flag so dragging stays in correct direction\n  this.isDragSelect = this.options.wrapAround;\n  this.select( index );\n  delete this.isDragSelect;\n  this.dispatchEvent( 'dragEnd', event, [ pointer ] );\n};\n\nproto.dragEndRestingSelect = function() {\n  var restingX = this.getRestingPosition();\n  // how far away from selected slide\n  var distance = Math.abs( this.getSlideDistance( -restingX, this.selectedIndex ) );\n  // get closet resting going up and going down\n  var positiveResting = this._getClosestResting( restingX, distance, 1 );\n  var negativeResting = this._getClosestResting( restingX, distance, -1 );\n  // use closer resting for wrap-around\n  var index = positiveResting.distance < negativeResting.distance ?\n    positiveResting.index : negativeResting.index;\n  return index;\n};\n\n/**\n * given resting X and distance to selected cell\n * get the distance and index of the closest cell\n * @param {Number} restingX - estimated post-flick resting position\n * @param {Number} distance - distance to selected cell\n * @param {Integer} increment - +1 or -1, going up or down\n * @returns {Object} - { distance: {Number}, index: {Integer} }\n */\nproto._getClosestResting = function( restingX, distance, increment ) {\n  var index = this.selectedIndex;\n  var minDistance = Infinity;\n  var condition = this.options.contain && !this.options.wrapAround ?\n    // if contain, keep going if distance is equal to minDistance\n    function( dist, minDist ) {\n      return dist <= minDist;\n    } : function( dist, minDist ) {\n      return dist < minDist;\n    };\n  while ( condition( distance, minDistance ) ) {\n    // measure distance to next cell\n    index += increment;\n    minDistance = distance;\n    distance = this.getSlideDistance( -restingX, index );\n    if ( distance === null ) {\n      break;\n    }\n    distance = Math.abs( distance );\n  }\n  return {\n    distance: minDistance,\n    // selected was previous index\n    index: index - increment,\n  };\n};\n\n/**\n * measure distance between x and a slide target\n * @param {Number} x - horizontal position\n * @param {Integer} index - slide index\n * @returns {Number} - slide distance\n */\nproto.getSlideDistance = function( x, index ) {\n  var len = this.slides.length;\n  // wrap around if at least 2 slides\n  var isWrapAround = this.options.wrapAround && len > 1;\n  var slideIndex = isWrapAround ? utils.modulo( index, len ) : index;\n  var slide = this.slides[ slideIndex ];\n  if ( !slide ) {\n    return null;\n  }\n  // add distance for wrap-around slides\n  var wrap = isWrapAround ? this.slideableWidth * Math.floor( index/len ) : 0;\n  return x - ( slide.target + wrap );\n};\n\nproto.dragEndBoostSelect = function() {\n  // do not boost if no previousDragX or dragMoveTime\n  if ( this.previousDragX === undefined || !this.dragMoveTime ||\n    // or if drag was held for 100 ms\n    new Date() - this.dragMoveTime > 100 ) {\n    return 0;\n  }\n\n  var distance = this.getSlideDistance( -this.dragX, this.selectedIndex );\n  var delta = this.previousDragX - this.dragX;\n  if ( distance > 0 && delta > 0 ) {\n    // boost to next if moving towards the right, and positive velocity\n    return 1;\n  } else if ( distance < 0 && delta < 0 ) {\n    // boost to previous if moving towards the left, and negative velocity\n    return -1;\n  }\n  return 0;\n};\n\n// ----- staticClick ----- //\n\nproto.staticClick = function( event, pointer ) {\n  // get clickedCell, if cell was clicked\n  var clickedCell = this.getParentCell( event.target );\n  var cellElem = clickedCell && clickedCell.element;\n  var cellIndex = clickedCell && this.cells.indexOf( clickedCell );\n  this.dispatchEvent( 'staticClick', event, [ pointer, cellElem, cellIndex ] );\n};\n\n// ----- scroll ----- //\n\nproto.onscroll = function() {\n  var scroll = getScrollPosition();\n  var scrollMoveX = this.pointerDownScroll.x - scroll.x;\n  var scrollMoveY = this.pointerDownScroll.y - scroll.y;\n  // cancel click/tap if scroll is too much\n  if ( Math.abs( scrollMoveX ) > 3 || Math.abs( scrollMoveY ) > 3 ) {\n    this._pointerDone();\n  }\n};\n\n// ----- utils ----- //\n\nfunction getScrollPosition() {\n  return {\n    x: window.pageXOffset,\n    y: window.pageYOffset,\n  };\n}\n\n// -----  ----- //\n\nreturn Flickity;\n\n} ) );\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","module.exports = __webpack_public_path__ + \"img/axis.64670454.jpg\";","/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n","var isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","<template>\r\n\r\n  <Navbar/>\r\n  <div class=\"sideProject\">\r\n\r\n    <div class=\"project\" v-if=\" flickity_enable==false\">\r\n\r\n      <div>\r\n        <transition name=\"scroll\">\r\n          <div class=\"item-image p1\"  @mouseover=\"projectHover(1)\" @mouseleave=\"projectLeave(1)\" @click=\"openModal(1)\">\r\n            <img class=\"\" src='../img/gallery/crowd.jpg'> \r\n            <div class=\"en_border left\">\r\n            <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border right\">\r\n            <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border top\">\r\n            <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border bottom\">\r\n            <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n\r\n      <div>\r\n        <transition name=\"scroll\">\r\n          <div class=\"item-image p2\" @mouseover=\"projectHover(2)\" @mouseleave=\"projectLeave(2)\" @click=\"openModal(2)\">\r\n            <img class=\"\" src=\"../img/gallery/tcs.png\"> \r\n            <div class=\"en_border left\">\r\n            <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border right\">\r\n            <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border top\">\r\n            <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border bottom\">\r\n            <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n\r\n      <div>\r\n        <transition name=\"scroll\">\r\n          <div class=\"item-image p3\" @mouseover=\"projectHover(3)\" @mouseleave=\"projectLeave(3)\" @click=\"openModal(3)\">\r\n            <img class=\"\" src=\"../img/gallery/gauge.png\"> \r\n            <div class=\"en_border left\">\r\n            <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border right\">\r\n            <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border top\">\r\n            <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border bottom\">\r\n            <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n\r\n      <div>\r\n        <transition name=\"scroll\">\r\n          <div class=\"item-image p4\" @mouseover=\"projectHover(4)\" @mouseleave=\"projectLeave(4)\" @click=\"openModal(4)\">\r\n            <img class=\"\" src=\"../img/gallery/axis.jpg\"> \r\n            <div class=\"en_border left\">\r\n            <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border right\">\r\n            <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border top\">\r\n            <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border bottom\">\r\n            <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n\r\n      <div>\r\n        <transition name=\"scroll\">\r\n          <div class=\"item-image p5\" @mouseover=\"projectHover(5)\" @mouseleave=\"projectLeave(5)\" @click=\"openModal(5)\">\r\n            <img class=\"\" src=\"../img/gallery/d-led.jpg\"> \r\n            <div class=\"en_border left\">\r\n            <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border right\">\r\n            <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border top\">\r\n            <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border bottom\">\r\n            <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n\r\n      <div>\r\n        <transition name=\"scroll\">\r\n          <div class=\"item-image p6\" @mouseover=\"projectHover(6)\" @mouseleave=\"projectLeave(6)\" @click=\"openModal(6)\">\r\n            <img class=\"\" src=\"../img/gallery/poincloud.png\"> \r\n            <div class=\"en_border left\">\r\n            <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border right\">\r\n            <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border top\">\r\n            <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n\r\n            <div class=\"en_border bottom\">\r\n            <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n            </path>\r\n            </svg>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n      \r\n      <div class=\"flex justify-center\">\r\n        <ProjectName  :ind = \"selected_index\" />\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div v-if=\"flickity_enable==true\">\r\n      <FlickityImg />\r\n    </div>\r\n  \r\n  </div>\r\n\r\n  <PopWin :val=\"val\" :isOpen=\"isOpen\" @isClose=\"change(close)\" />\r\n\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport Navbar from './Navbar.vue';\r\nimport FlickityImg from './FlickityImg.vue';\r\nimport ProjectName from './project_title.vue';\r\nimport PopWin from './PopWin.vue'\r\n\r\nimport greygooseImg from '../img/gallery/greygoose.png';\r\nimport reportImg from '../img/gallery/report1.png';\r\nimport ledImg from '../img/gallery/led.jpg';\r\nimport tcImg from '../img/gallery/tc.png';\r\nimport axisImg from '../img/gallery/AXIS-1.png';\r\nimport pointcloud from '../img/gallery/pointcloud.png';\r\n\r\nexport default {\r\n  name: 'SideProject',\r\n  components: {\r\n    Navbar,\r\n    FlickityImg,\r\n    ProjectName,\r\n    PopWin,\r\n  },\r\n  data() {\r\n    return {\r\n      value: [2,3,4,5,6,7],\r\n      value_ind: [2,3,4,5,6,7],\r\n      scale_item: (100/27 *3),\r\n      scale_space: (100/27),\r\n      hovered: false,\r\n      window: {\r\n            width: 0,\r\n            height: 0\r\n      },\r\n      flickity_enable: false,\r\n      selected_index: 3,\r\n      isOpen: false,\r\n      val: 3\r\n    }\r\n  },\r\n  \r\n  mounted(){\r\n    for(var i=0; i<6; i++){\r\n      this.value[i] = this.calcVal(i, this.value_ind[i])\r\n    }\r\n    \r\n  },\r\n  methods:{\r\n    change(close){\r\n      this.isOpen = close\r\n    },\r\n\r\n    openModal(val){\r\n      this.isOpen = true\r\n      //this.project_name = this.project_name_list[val-1]\r\n      this.val = val; \r\n    },\r\n\r\n    projectHover(val){     \r\n      //console.log(\"val:\",val,\"-hovered\",this.hovered);\r\n      if(!this.hovered){\r\n        // 1 ~ val\r\n        for(var i=val-1; i>=1; i--){\r\n          this.value_ind[i-1] = this.value_ind[i-1] - 1\r\n        }\r\n        // val ~ 6\r\n        for(var i=val+1; i<=6 ;i++){\r\n          this.value_ind[i-1] = this.value_ind[i-1] + 1\r\n        }\r\n\r\n        for(var i=0; i<6; i++){\r\n          this.value[i] = this.calcVal(i, this.value_ind[i])\r\n        }\r\n\r\n        this.selected_index = val-1\r\n        //console.log(\"selected:\", this.selected_index);\r\n      }\r\n      \r\n      this.hovered = true\r\n    },\r\n\r\n    projectLeave(val){\r\n      this.value_ind= [2,3,4,5,6,7]\r\n      this.hovered = false\r\n      for(var i=0; i<6; i++){\r\n        this.value[i] = this.calcVal(i, this.value_ind[i])\r\n      }\r\n    },\r\n\r\n    calcVal(ind, shift){ //return space value\r\n      return this.scale_space* (shift) + (this.scale_item* ind) + this.scale_item/2;\r\n    },\r\n\r\n    handleResize() {\r\n      this.window.width = window.innerWidth;\r\n      this.window.height = window.innerHeight;\r\n      if(this.window.width<1200){\r\n        this.flickity_enable = true;\r\n      }\r\n      else{\r\n        this.flickity_enable = false;\r\n      }\r\n      //console.log(this.window.width,\",\",window.innerHeight, \":\", this.flickity_enable);\r\n    },\r\n\r\n    /* project content */\r\n\r\n  },\r\n\r\n  created() {\r\n      window.addEventListener('resize', this.handleResize);\r\n      this.handleResize();\r\n  },\r\n\r\n  destroyed() {\r\n      window.removeEventListener('resize', this.handleResize);\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n  $space-1: v-bind(\"value[0]\");\r\n  $space-2: v-bind(\"value[1]\");\r\n  $space-3: v-bind(\"value[2]\");\r\n  $space-4: v-bind(\"value[3]\");\r\n  $space-5: v-bind(\"value[4]\");\r\n  $space-6: v-bind(\"value[5]\");\r\n  $scale-item: v-bind(\"scale_item\");\r\n  $scale-space: v-bind(\"scale_space\");\r\n\r\n  .project {\r\n    //@apply grid grid-cols-3 gap-2 w-full h-full; \r\n    .item-image{\r\n      //border: 5px solid #d7d7d7;\r\n      width: calc($scale-item * 1vw);\r\n      height: 60%;\r\n      \r\n      transition:all 0.5s ease-out;\r\n      transform: translate(-50%, -50%);\r\n      //transition: width, height, transform 1s;\r\n\r\n      @apply flex justify-center overflow-hidden text-center;\r\n\r\n      img {\r\n        max-height: 100%;\r\n        margin: 0 0;\r\n        max-width: none;\r\n        width: auto;\r\n\r\n      }\r\n    }\r\n\r\n    .item-image:hover {\r\n      width: calc( ($scale-item + ($scale-space*2)) * 1vw);\r\n      cursor: pointer;\r\n    }\r\n  \r\n    /* item image container width */\r\n    .item-image.p1{\r\n      @apply absolute;\r\n      left: calc( $space-1 * 1vw); \r\n      top: 50vh;\r\n      \r\n    }\r\n\r\n    .item-image.p2{\r\n      @apply absolute;\r\n      left:  calc( $space-2 * 1vw); \r\n      top: 55vh\r\n    }\r\n\r\n    .item-image.p3{\r\n      @apply absolute;\r\n      left: calc( $space-3 * 1vw); \r\n      top: 50vh\r\n    }\r\n\r\n    .item-image.p4{\r\n      @apply absolute;\r\n      left:  calc( $space-4 * 1vw); \r\n      top: 55vh\r\n    }\r\n\r\n    .item-image.p5{\r\n      @apply absolute;\r\n      left:  calc( $space-5 * 1vw); \r\n      top: 50vh\r\n    }\r\n\r\n    .item-image.p6{\r\n      @apply absolute;\r\n      left:  calc( $space-6 * 1vw); \r\n      top: 55vh\r\n    }\r\n\r\n    /* en_border */\r\n    .en_border.left{\r\n      @apply absolute bottom-0 top-0;\r\n      left: -3px;\r\n    }\r\n\r\n    .en_border.right{\r\n      @apply absolute bottom-0 top-0;\r\n      right: -3px;\r\n    }\r\n\r\n    .en_border.top{\r\n      @apply absolute ;\r\n      left: 1px;\r\n      right: 5px;\r\n      top: -2px;\r\n      will-change: width;\r\n\r\n      svg{\r\n        height: 8px;\r\n      }\r\n\r\n    }\r\n\r\n    .en_border.bottom{\r\n      @apply absolute;\r\n      left: 1px;\r\n      right: 5px;\r\n      bottom: -2px;\r\n      will-change: width;\r\n\r\n      svg{\r\n        height: 8px;\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n} //-----project end\r\n\r\n</style>","<template>\r\n  <div class=\" FlickityImg\">\r\n    <div class=\"flickWrap\">\r\n      <flickity ref=\"flickity\" :options=\"flickityOptions\" @init=\"onInit\">\r\n\r\n        <div class =\"carousel-cell short:h-450 h-250   \" @click=\"openModal(1)\" >\r\n          <img class=\"\" src=\"../img/gallery/crowd.jpg\"> \r\n          <div class=\"en_border left\">\r\n          <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border right\">\r\n          <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border top\">\r\n          <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border bottom\">\r\n          <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"carousel-cell  short:h-450 h-250\"  @click=\"openModal(2)\" >\r\n          <img class=\"\" src=\"../img/gallery/tcs.png\"> \r\n          <div class=\"en_border left\">\r\n          <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border right\">\r\n          <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border top\">\r\n          <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border bottom\">\r\n          <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"carousel-cell short:h-450 h-250\"  @click=\"openModal(3)\" >\r\n          <img class=\"\" src=\"../img/gallery/gauge.png\"> \r\n          <div class=\"en_border left\">\r\n          <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border right\">\r\n          <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border top\">\r\n          <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border bottom\">\r\n          <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"carousel-cell short:h-450 h-250\"  @click=\"openModal(4)\" >\r\n          <img class=\"\" src=\"../img/gallery/axis.jpg\"> \r\n          <div class=\"en_border left\">\r\n          <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border right\">\r\n          <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border top\">\r\n          <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border bottom\">\r\n          <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"carousel-cell short:h-450 h-250\"  @click=\"openModal(5)\" >\r\n          <img class=\"\" src=\"../img/gallery/d-led.jpg\"> \r\n          <div class=\"en_border left\">\r\n          <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border right\">\r\n          <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border top\">\r\n          <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border bottom\">\r\n          <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"carousel-cell short:h-450 h-250\"  @click=\"openModal(6)\" >\r\n          <img class=\"\" src=\"../img/gallery/poincloud.png\"> \r\n          <div class=\"en_border left\">\r\n          <svg width=\"12\" height=\"650\" viewBox=\"0 0 9 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.06166 564.789C3.26751 542.412 3.4633 521.128 3.4633 497.313C3.4633 476.378 3.66321 455.533 4.64366 434.673C5.18715 423.109 5.00603 411.352 4.82519 399.614C4.73494 393.755 4.64475 387.9 4.64475 382.077C4.64475 368.769 4.93983 355.402 5.23524 342.039L5.23654 341.98C5.53143 328.64 5.8262 315.306 5.8262 302.064C5.8262 296.45 6.40803 290.803 6.99831 285.074L7.00243 285.034C7.59231 279.308 8.1891 273.502 8.1891 267.669C8.1891 261.349 7.89247 255.018 7.59728 248.734L7.59495 248.685C7.30018 242.41 7.00765 236.183 7.00766 230.015L7.00766 189.134C8.41333 180.698 8.30767 177.505 8.13235 172.208C8.06241 170.095 7.98138 167.646 7.9808 164.397C8.86759 151.956 8.39145 137.638 7.69786 122.658C7.57785 120.065 7.45132 117.453 7.3241 114.827C6.71473 102.246 6.0895 89.3389 6.08876 76.7352C7.02187 56.1879 7.01704 48.9367 7.00918 37.1692C7.00844 36.052 7.00766 34.8942 7.00766 33.6803L7.00767 0.9923C7.00767 0.444302 6.56343 6.12955e-05 6.01543 6.12715e-05C5.46743 6.12476e-05 5.02319 0.444301 5.02319 0.992299L5.02319 33.6803C5.02319 34.8958 5.02396 36.0549 5.02471 37.173C5.03258 48.9266 5.03742 56.1477 4.1053 76.6676L4.10428 76.6902L4.10428 76.7127C4.10428 89.3763 4.73278 102.349 5.34264 114.938C5.46969 117.561 5.59593 120.166 5.71551 122.749C6.41005 137.751 6.87968 151.973 5.99885 164.291L5.99632 164.326L5.99632 164.361C5.99632 167.74 6.07927 170.24 6.14993 172.37C6.32347 177.599 6.42283 180.594 5.03675 188.888L5.02318 188.97L5.02318 230.015C5.02318 236.23 5.31753 242.496 5.61156 248.754L5.61499 248.827C5.91053 255.118 6.20462 261.403 6.20462 267.669C6.20462 273.383 5.61997 279.089 5.0284 284.83L5.01904 284.921C4.43234 290.616 3.84173 296.348 3.84173 302.064C3.84173 315.284 3.54736 328.6 3.25231 341.947L3.25124 341.995C2.95592 355.354 2.66028 368.744 2.66028 382.077C2.66028 387.967 2.75114 393.855 2.84179 399.73C3.02235 411.43 3.20207 423.075 2.66137 434.579C1.67872 455.486 1.47882 476.368 1.47882 497.313C1.47882 521.119 1.28311 542.394 1.07725 564.772L1.04358 568.436C0.82593 592.17 0.608249 617.348 0.608248 648.224C0.608248 648.772 1.05249 649.216 1.60049 649.216C2.14848 649.216 2.59272 648.772 2.59272 648.224C2.59273 617.358 2.81033 592.187 3.02797 568.454L3.06166 564.789Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.76118 481.282C1.09127 485.844 1.30408 490.336 0.852552 494.748C0.381985 499.346 0.408209 503.896 0.536746 508.407C0.57155 509.628 0.613722 510.844 0.655802 512.058C0.769788 515.345 0.883099 518.613 0.847475 521.911C0.770378 529.05 0.793238 535.204 0.818843 542.096C0.832726 545.833 0.847417 549.788 0.847417 554.235C0.847417 558.385 0.86426 562.475 0.881092 566.532L0.881469 566.623C0.898177 570.65 0.914749 574.644 0.914749 578.636C0.914749 584.852 0.818026 591.095 0.720457 597.393L0.718365 597.528C0.620131 603.869 0.521743 610.265 0.521743 616.73C0.521743 617.278 0.965984 617.722 1.51398 617.722C2.06198 617.722 2.50622 617.278 2.50622 616.73C2.50622 610.283 2.60434 603.902 2.7026 597.559L2.70481 597.416C2.8023 591.124 2.89923 584.868 2.89923 578.636C2.89923 574.64 2.88264 570.642 2.86594 566.617L2.86555 566.524C2.84872 562.466 2.83189 558.38 2.83189 554.235C2.83189 549.771 2.81716 545.809 2.80326 542.07C2.77767 535.188 2.75488 529.058 2.83184 521.933C2.86799 518.586 2.75233 515.25 2.63782 511.949C2.59606 510.744 2.55445 509.544 2.52042 508.35C2.39251 503.861 2.36967 499.416 2.82672 494.95C3.29702 490.355 3.07169 485.716 2.74048 481.139C2.67442 480.226 2.60426 479.316 2.53435 478.41C2.2518 474.747 1.97323 471.136 1.98482 467.554C2.0013 462.464 2.31904 457.452 2.63884 452.408L2.65059 452.223C2.97372 447.126 3.29515 441.995 3.29515 436.774C3.29515 436.226 2.85091 435.782 2.30291 435.782C1.75491 435.782 1.31067 436.226 1.31067 436.774C1.31067 441.922 0.993735 446.992 0.670093 452.097L0.656707 452.309C0.338008 457.335 0.017028 462.397 0.000355745 467.547C-0.011525 471.217 0.275032 474.929 0.55838 478.599C0.62764 479.496 0.696709 480.391 0.76118 481.282Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.08852 53.5722C5.22317 40.2538 5.05255 27.0594 7.77094 14.653C7.88823 14.1177 7.54937 13.5887 7.01407 13.4714C6.47877 13.3541 5.94974 13.693 5.83245 14.2283C3.0521 26.9174 3.24017 40.3409 4.10822 53.7008C4.3826 57.9238 4.72399 62.1331 5.06299 66.3129C5.80059 75.4074 6.52686 84.3621 6.52686 93.0137L6.52685 172.682C6.52685 191.58 5.89713 211.806 5.26671 232.051L5.26643 232.06C4.63632 252.295 4.00561 272.549 4.00561 291.481C4.00561 292.029 4.44985 292.473 4.99785 292.473C5.54585 292.473 5.99009 292.029 5.99009 291.481C5.99009 272.583 6.61981 252.357 7.25023 232.112L7.25051 232.103C7.88062 211.868 8.51133 191.613 8.51133 172.682L8.51133 93.0137C8.51133 84.2805 7.77436 75.1904 7.03356 66.053C6.69628 61.8928 6.3582 57.7228 6.08852 53.5722Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82166 523.787C2.36957 523.797 2.82179 523.361 2.83172 522.813C4.23636 445.333 5.65135 367.271 5.65135 289.761C5.65135 289.213 5.20711 288.769 4.65911 288.769C4.11112 288.769 3.66688 289.213 3.66688 289.761C3.66687 367.25 2.25227 445.294 0.847568 522.777C0.837635 523.325 1.27375 523.777 1.82166 523.787Z\" fill=\"#373636\"></path><path d=\"M2.00854 620.148C4.48914 576.49 2.50466 535.237 2.50466 493.398\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border right\">\r\n          <svg width=\"14\" height=\"650\" viewBox=\"0 0 12 650\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.55202 2.00995C3.09944 1.9848 3.56358 2.4082 3.58871 2.95563C5.84852 52.1932 6.63649 103.391 6.63649 153.614C6.63649 174.549 6.83639 195.394 7.81684 216.254C8.36033 227.818 8.17921 239.574 7.99837 251.313C7.90812 257.172 7.81793 263.026 7.81793 268.85C7.81793 282.157 8.11301 295.525 8.40841 308.888L8.40972 308.947C8.7046 322.286 8.99937 335.621 8.99937 348.863C8.99937 354.477 9.58119 360.124 10.1715 365.853L10.1756 365.893C10.7655 371.619 11.3623 377.425 11.3623 383.258C11.3623 389.578 11.0656 395.909 10.7705 402.193L10.7681 402.242C10.4733 408.517 10.1808 414.744 10.1808 420.911L10.1808 461.875C10.1808 464.852 10.049 467.957 9.91689 471.068C9.82386 473.258 9.73071 475.452 9.68338 477.607C9.56741 482.886 9.71712 488.077 10.7501 492.961L10.7715 493.063L10.7715 493.166C10.7715 508.777 10.3937 521.677 10.0163 534.353L10.0007 534.878C9.62934 547.346 9.26355 559.629 9.26191 574.117C10.6421 581.107 10.8681 588.414 10.7538 595.684C10.7033 598.896 10.588 602.069 10.4741 605.208C10.3264 609.274 10.1808 613.283 10.1808 617.246C10.1808 622.704 10.0857 627.924 9.99086 633.133L9.99078 633.137C9.89583 638.351 9.80109 643.555 9.80109 648.992C9.80109 649.54 9.35685 649.985 8.80885 649.985C8.26085 649.985 7.81661 649.54 7.81661 648.992C7.81661 643.535 7.91168 638.315 8.00656 633.105L8.00664 633.101C8.10159 627.888 8.19633 622.684 8.19633 617.246C8.19633 613.288 8.34455 609.181 8.4934 605.057C8.60686 601.913 8.7207 598.759 8.76954 595.652C8.88362 588.397 8.65274 581.221 7.29653 574.408L7.27743 574.312L7.27743 574.214C7.27743 559.655 7.64479 547.319 8.01681 534.827L8.03269 534.294C8.40926 521.646 8.7854 508.801 8.78706 493.27C7.72607 488.191 7.58313 482.855 7.69938 477.563C7.74888 475.31 7.84376 473.09 7.93745 470.897C8.06804 467.841 8.19634 464.839 8.19634 461.875L8.19634 420.911C8.19634 414.697 8.4907 408.431 8.78473 402.172L8.78816 402.099C9.0837 395.808 9.37779 389.524 9.37779 383.258C9.37779 377.543 8.79313 371.838 8.20157 366.097L8.19222 366.006C7.60551 360.311 7.0149 354.579 7.0149 348.863C7.0149 335.643 6.72053 322.327 6.42548 308.98L6.42442 308.932C6.1291 295.573 5.83345 282.183 5.83345 268.85C5.83345 262.959 5.92432 257.071 6.01497 251.197C6.19553 239.497 6.37525 227.852 5.83455 216.347C4.85191 195.441 4.65201 174.559 4.65201 153.614C4.65201 103.41 3.8643 52.2444 1.60632 3.04663C1.58119 2.49921 2.0046 2.0351 2.55202 2.00995Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24211 139.729C2.50053 135.958 2.7549 132.246 2.71558 128.605C2.67536 124.881 2.71375 121.477 2.75175 118.107C2.82689 111.445 2.90049 104.92 2.36184 96.331L2.35607 96.239L2.36736 96.1474C3.35344 88.1551 4.0871 80.2808 4.0871 72.2905C4.0871 69.5316 4.11468 66.7796 4.14221 64.0336C4.24039 54.2373 4.33783 44.5156 3.1797 34.8192C3.11471 34.275 3.50313 33.7812 4.04727 33.7162C4.5914 33.6513 5.08519 34.0397 5.15018 34.5838C6.32503 44.4203 6.22538 54.3113 6.12648 64.1274C6.099 66.8551 6.07158 69.5771 6.07158 72.2905C6.07158 80.3677 5.33279 88.3038 4.34818 96.2989C4.88485 104.911 4.81067 111.538 4.73587 118.221C4.69832 121.575 4.66062 124.943 4.69994 128.584C4.74019 132.311 4.4789 136.121 4.21987 139.898C4.15986 140.773 4.09996 141.646 4.04397 142.516C3.74468 147.167 3.55423 151.75 4.00901 156.194C4.93595 165.252 5.12789 174.329 5.15717 183.373C5.17979 190.36 5.17192 198.254 5.16437 205.829C5.1607 209.503 5.15712 213.101 5.15712 216.486C5.15712 217.034 4.71288 217.478 4.16488 217.478C3.61688 217.478 3.17264 217.034 3.17264 216.486C3.17264 213.097 3.17623 209.496 3.17989 205.821C3.18745 198.248 3.19531 190.363 3.1727 183.379C3.14348 174.352 2.95158 165.354 2.03485 156.396C1.56202 151.776 1.76354 147.051 2.06359 142.389C2.12084 141.499 2.18158 140.613 2.24211 139.729Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.26162 597.354C8.39627 610.672 8.22564 623.867 10.944 636.273C11.0613 636.809 10.7225 637.338 10.1872 637.455C9.65187 637.572 9.12284 637.233 9.00555 636.698C6.2252 624.009 6.41327 610.585 7.28131 597.225C7.5557 593.002 7.89709 588.793 8.23609 584.613C8.97369 575.519 9.69996 566.564 9.69996 557.913L9.69996 478.244C9.69996 459.343 9.22951 441.61 8.75862 423.862L8.75848 423.857C8.28772 406.114 7.81658 388.357 7.81658 369.428C7.81658 368.88 8.26082 368.435 8.80882 368.435C9.35682 368.435 9.80106 368.88 9.80106 369.428C9.80106 388.329 10.2715 406.062 10.7424 423.81L10.7425 423.815C11.2133 441.558 11.6844 459.315 11.6844 478.244L11.6844 557.913C11.6844 566.646 10.9475 575.736 10.2067 584.873C9.86938 589.033 9.5313 593.203 9.26162 597.354Z\" fill=\"#373636\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.31167 125.617C4.85958 125.607 5.3118 126.043 5.32173 126.591C5.65948 145.221 6.03735 163.974 6.41653 182.792C7.61406 242.222 8.82451 302.294 8.8245 361.166C8.8245 361.714 8.38026 362.158 7.83227 362.158C7.28427 362.158 6.84003 361.714 6.84003 361.166C6.84003 302.316 5.63016 242.272 4.43272 182.846C4.05349 164.025 3.67549 145.266 3.33758 126.627C3.32765 126.079 3.76376 125.627 4.31167 125.617Z\" fill=\"#373636\"></path><path d=\"M1.9214 1.99802C1.9214 6.5113 1.9214 11.0246 1.9214 15.5379C1.9214 17.5704 1.88141 19.9323 2.31082 21.9184C2.99963 25.1041 2.75275 28.2382 3.0597 31.4442C3.35237 34.5009 3.80859 37.4644 3.80859 40.5506C3.80859 42.5047 4.02042 44.5327 4.09316 46.4968C4.23858 50.4229 4.22954 54.3543 4.36276 58.2842C4.49721 62.2505 4.73042 66.2121 4.872 70.1765C4.95039 72.3714 4.84435 74.5712 4.88698 76.7667C4.92685 78.8203 3.80859 86.2196 3.80859 88.2942\" stroke=\"#373636\" stroke-width=\"2.97671\" stroke-linecap=\"round\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border top\">\r\n          <svg viewBox=\"0 0 251 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M250.581 4.44217C250.511 4.98562 250.013 5.36903 249.47 5.29855C235.772 3.52207 219.647 3.69167 204.752 3.84834C200.637 3.89162 196.615 3.93392 192.765 3.93392C191.373 3.93392 189.966 4.248 188.454 4.59519L188.342 4.62074C186.905 4.95098 185.357 5.30679 183.822 5.30679C183.073 5.30679 182.248 5.33415 181.366 5.36344C181.291 5.36592 181.216 5.36842 181.14 5.37091C180.18 5.40258 179.163 5.43363 178.149 5.42836C176.145 5.41794 174.046 5.26759 172.334 4.63509C172.206 4.58788 172.003 4.57237 171.6 4.59396C171.552 4.59653 171.499 4.59988 171.442 4.60348C171.115 4.62422 170.655 4.65334 170.237 4.59013C169.688 4.50718 169.154 4.39509 168.661 4.29162C168.466 4.25086 168.278 4.21143 168.098 4.17565C167.439 4.0445 166.819 3.94615 166.148 3.93375C164.053 3.89504 161.943 3.74329 159.863 3.59365C159.693 3.58147 159.524 3.56931 159.355 3.55722C157.1 3.3958 154.879 3.24748 152.683 3.24748L139.888 3.24748C136.201 3.24748 132.627 3.54077 128.992 3.83905C127.163 3.98906 125.32 4.14033 123.439 4.25619C122.107 4.33825 120.774 4.42444 119.441 4.51069C113.296 4.90819 107.134 5.30679 100.906 5.30678C96.8127 5.30678 92.8003 4.78583 88.858 4.274L88.8185 4.26887C84.8431 3.75273 80.9378 3.24748 76.9672 3.24748L76.8522 3.24747C73.5515 3.24732 70.8734 3.2472 67.9982 4.3797C67.2577 4.6714 66.3038 4.74445 65.3615 4.73695C64.3919 4.72923 63.3105 4.63287 62.2515 4.51271C61.593 4.438 60.9191 4.35104 60.2802 4.2686C59.9003 4.21958 59.5328 4.17215 59.1883 4.12985C58.2341 4.0127 57.4492 3.93391 56.8992 3.93391C55.2005 3.93391 53.8576 4.08842 52.5444 4.23951C52.0854 4.29231 51.6301 4.3447 51.1645 4.38993C49.3712 4.56412 47.5509 4.6114 45.1343 4.08258C44.2041 3.87904 43.252 3.8982 42.1825 3.91973C41.8365 3.9267 41.4781 3.93391 41.1043 3.93391C38.735 3.93391 36.304 3.72167 33.9402 3.51528C32.8006 3.41578 31.6766 3.31765 30.5827 3.24531C20.9816 2.61046 11.429 2.33919 1.78938 2.21774C1.24142 2.21084 0.802811 1.76104 0.809723 1.21308C0.81662 0.665127 1.26642 0.226518 1.81438 0.233422C11.4734 0.355119 21.0643 0.627118 30.7136 1.26516C31.8984 1.34351 33.0689 1.44599 34.2306 1.5477C36.5422 1.7501 38.8189 1.94943 41.1043 1.94943C41.3816 1.94943 41.6767 1.94308 41.984 1.93647C43.0984 1.91248 44.3751 1.885 45.5585 2.14398C47.7101 2.6148 49.3097 2.57628 50.9726 2.41475C51.3819 2.375 51.8027 2.32652 52.2409 2.27604C53.5779 2.12203 55.0762 1.94943 56.8992 1.94943C57.5872 1.94943 58.4859 2.04424 59.4301 2.16017C59.8009 2.2057 60.179 2.25451 60.5627 2.30407C61.1872 2.38471 61.8268 2.46731 62.4753 2.54089C63.5134 2.65868 64.5129 2.74565 65.3773 2.75253C66.269 2.75963 66.9022 2.67856 67.271 2.5333C70.5004 1.26126 73.5128 1.26208 76.715 1.26295L76.9672 1.263C81.0798 1.263 85.1046 1.78554 89.0531 2.29819L89.0741 2.30091C93.0498 2.81709 96.9485 3.32231 100.906 3.32231C107.063 3.32231 113.148 2.92885 119.291 2.53168C120.63 2.4451 121.971 2.35835 123.317 2.27547C125.111 2.16494 126.912 2.01747 128.72 1.86934C132.405 1.56752 136.123 1.263 139.888 1.263L152.683 1.263C154.959 1.263 157.245 1.41663 159.497 1.5778C159.663 1.5897 159.829 1.60164 159.995 1.61357C162.087 1.76393 164.145 1.91192 166.184 1.94961C167.028 1.96521 167.782 2.08935 168.486 2.22929C168.708 2.27347 168.919 2.31792 169.127 2.3614C169.597 2.46014 170.043 2.55386 170.533 2.62796C170.724 2.65677 170.932 2.64463 171.263 2.62534C171.334 2.62122 171.411 2.61677 171.493 2.61233C171.886 2.5913 172.468 2.56889 173.022 2.77367C174.389 3.27896 176.194 3.43369 178.16 3.44391C179.131 3.44896 180.114 3.41922 181.075 3.38751C181.152 3.38496 181.23 3.38238 181.307 3.37982C182.18 3.3508 183.038 3.32231 183.822 3.32231C185.129 3.32231 186.488 3.01032 188.01 2.66104C189.487 2.32179 191.111 1.94944 192.765 1.94944C196.565 1.94944 200.55 1.90735 204.642 1.86413C219.554 1.70664 235.875 1.53428 249.725 3.33056C250.269 3.40104 250.652 3.89872 250.581 4.44217Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n\r\n          <div class=\"en_border bottom\">\r\n          <svg viewBox=\"0 0 262 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M261.801 4.9921C261.801 5.5401 261.357 5.98434 260.809 5.98434C249.335 5.98434 237.631 5.44407 226.512 4.90513C225.91 4.87595 225.309 4.84677 224.711 4.81769C214.245 4.30908 204.352 3.82824 195.671 3.82824C194.174 3.82824 192.739 4.04008 191.246 4.26548L191.154 4.27937C189.712 4.4973 188.205 4.72497 186.654 4.72497L174.598 4.72497L174.414 4.64817C174.294 4.59816 174.098 4.57882 173.681 4.60412C173.633 4.60706 173.579 4.61093 173.52 4.61513C173.181 4.63953 172.691 4.67476 172.247 4.59867C171.945 4.54703 171.288 4.50562 170.376 4.47876C169.489 4.45264 168.426 4.44151 167.354 4.4375C166.392 4.4339 165.414 4.43613 164.559 4.43809C163.531 4.44044 162.681 4.44239 162.246 4.43331C160.03 4.38698 158.587 4.24785 157.217 4.11579C157.127 4.10714 157.038 4.09852 156.948 4.08996C155.512 3.95223 154.094 3.82823 151.815 3.82823C149.628 3.82823 147.773 3.92218 145.894 4.01751L145.886 4.0179C144.011 4.113 142.112 4.20935 139.871 4.20935C137.843 4.20935 135.966 4.16202 134.144 4.11608C130.664 4.02834 127.382 3.94562 123.632 4.20695C116.164 4.72739 109.521 4.7263 102.132 4.72509C101.773 4.72503 101.413 4.72497 101.051 4.72497C96.8362 4.72497 92.8212 4.49983 88.8339 4.27625L88.8124 4.27504C84.8108 4.05066 80.8366 3.82823 76.6648 3.82823C75.2012 3.82823 74.4809 3.89732 73.4369 3.99744C73.2866 4.01186 73.1295 4.02692 72.9626 4.04251C71.6389 4.16614 69.7604 4.31596 65.8412 4.42807C65.0935 4.70852 64.1739 4.78051 63.271 4.77238C62.2586 4.76326 61.1311 4.64949 60.0298 4.50811C59.345 4.4202 58.6432 4.31775 57.9786 4.22074C57.584 4.16313 57.2025 4.10745 56.8456 4.05786C55.8534 3.92005 55.0429 3.82823 54.4776 3.82823C52.0417 3.82823 50.7083 3.67894 49.3657 3.52863L49.2536 3.51609C47.9075 3.36559 46.5059 3.21623 43.8175 3.21623L43.6965 3.21623L43.579 3.18715C43.0025 3.04443 41.8723 2.99124 40.5927 2.98647C39.9748 2.98416 39.3536 2.99269 38.7909 3.00193C38.6898 3.00359 38.5902 3.00528 38.4926 3.00694C38.0532 3.01441 37.6552 3.02117 37.3475 3.02117C36.1754 3.02117 35.0483 3.05136 33.9311 3.08128C31.7144 3.14065 29.5367 3.19897 27.123 3.01841C22.1763 2.64834 18.3271 2.7314 14.4492 2.89086C13.774 2.91862 13.097 2.94876 12.4127 2.97923C9.16734 3.12372 5.75665 3.27557 1.58682 3.21613C1.03888 3.20832 0.601013 2.75779 0.608826 2.20985C0.616638 1.66191 1.06714 1.22405 1.61508 1.23186C5.72174 1.29039 9.06779 1.14153 12.3101 0.997287C12.9985 0.966658 13.6823 0.936239 14.3676 0.908057C18.2802 0.747175 22.2152 0.661234 27.2711 1.03946C29.5903 1.21296 31.5946 1.15835 33.7444 1.09979C34.8819 1.0688 36.0603 1.03669 37.3475 1.03669C37.6367 1.03669 38.0125 1.03032 38.451 1.02288C38.5504 1.02119 38.6529 1.01945 38.7583 1.01772C39.3233 1.00844 39.9612 0.999622 40.6001 1.00201C41.7751 1.00639 43.077 1.0468 43.9307 1.23184C46.6439 1.23603 48.1022 1.39052 49.4741 1.5439L49.5903 1.5569C50.9025 1.70383 52.1521 1.84375 54.4776 1.84376C55.1989 1.84376 56.1379 1.95604 57.1186 2.09226C57.5051 2.14595 57.8984 2.20341 58.2974 2.2617C58.9457 2.35642 59.609 2.45333 60.2824 2.53978C61.3604 2.67816 62.3954 2.77993 63.2889 2.78798C64.2111 2.79629 64.8568 2.70133 65.2301 2.53497L65.4098 2.45491L65.6064 2.44944C69.6093 2.33788 71.4815 2.18773 72.778 2.06663C72.9408 2.05144 73.0955 2.03658 73.245 2.02223C74.3034 1.92063 75.1042 1.84375 76.6648 1.84376C80.8997 1.84376 84.9272 2.06959 88.9207 2.29352L88.9235 2.29368C92.9253 2.51807 96.8929 2.74049 101.051 2.74049C101.407 2.74049 101.761 2.74055 102.113 2.7406C109.517 2.74176 116.097 2.74278 123.494 2.22727C127.332 1.95982 130.775 2.04576 134.318 2.13418C136.121 2.1792 137.951 2.22487 139.871 2.22487C142.059 2.22487 143.914 2.13092 145.793 2.03559L145.801 2.0352C147.675 1.9401 149.574 1.84375 151.815 1.84375C154.183 1.84376 155.671 1.97388 157.138 2.11454C157.227 2.12305 157.315 2.13159 157.404 2.14014C158.766 2.27139 160.147 2.40451 162.288 2.44927C162.707 2.45802 163.512 2.45609 164.507 2.4537C165.361 2.45165 166.355 2.44927 167.361 2.45304C168.439 2.45707 169.522 2.46827 170.434 2.49514C171.322 2.52127 172.119 2.56353 172.581 2.64261C172.77 2.67482 172.975 2.66133 173.318 2.63878C173.392 2.63391 173.473 2.62862 173.561 2.62328C173.921 2.60143 174.446 2.57752 174.968 2.74049L186.654 2.74049C188.055 2.74049 189.435 2.53207 190.923 2.30726L190.95 2.30325C192.426 2.08028 194.003 1.84376 195.671 1.84376C204.402 1.84376 214.341 2.32686 224.788 2.83463C225.393 2.86402 226 2.8935 226.608 2.92298C237.731 3.46209 249.389 3.99987 260.809 3.99987C261.357 3.99987 261.801 4.44411 261.801 4.9921Z\" fill=\"#373636\">\r\n          </path>\r\n          </svg>\r\n          </div>\r\n        </div>\r\n\r\n      </flickity>\r\n\r\n    </div>\r\n\r\n    \r\n    <div class=\"flex justify-center\">\r\n      <ProjectName  :ind = \"selectedIndex\" />\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <PopWin :val=\"val\" :isOpen=\"isOpen\"  @isClose=\"change(close)\" />\r\n\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport Flickity from 'vue-flickity';\r\nimport ProjectName from './project_title.vue';\r\nimport PopWin from './PopWin.vue';\r\n\r\nexport default {\r\n  name: 'FlickityImg',\r\n  components: {\r\n    Flickity,\r\n    ProjectName,\r\n    PopWin\r\n  },\r\n  data() {\r\n    return{\r\n      flickityOptions: {\r\n        initialIndex: 3,\r\n        draggable:true,\r\n        prevNextButtons: false,\r\n        pageDots: false,\r\n        wrapAround: false,\r\n        freeScroll: true,\r\n        // any options from Flickity can be used\r\n        \r\n      },\r\n      selectedIndex: 3,\r\n      isOpen: false,\r\n      val: 3,\r\n      flexCol: true\r\n    }\r\n  },\r\n  watch:{\r\n    winHeight: (newVal, oldVal)=>{\r\n      console.log(newVal)\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    onInit() {\r\n      this.$refs.flickity.on('change', (event) => {\r\n        this.selectedIndex = event\r\n        console.log('current index', event)\r\n      })\r\n    },\r\n\r\n    openModal(val){\r\n      this.isOpen = true\r\n      this.val = val\r\n    },\r\n    change(close){\r\n      this.isOpen = close\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n.FlickityImg{\r\n\r\n  .flickWrap{\r\n    margin-top: 20vh;\r\n\r\n    .carousel-cell {\r\n      width: 200px;\r\n      margin-right: 80px;\r\n      background: #8C8;\r\n      //border-radius: 5px;\r\n      counter-increment: gallery-cell;\r\n      \r\n      @apply flex justify-center overflow-hidden text-center;\r\n\r\n      img {\r\n        max-height: 100%;\r\n        margin: 0 0;\r\n        max-width: none;\r\n        width: auto;\r\n\r\n      }\r\n\r\n      /* en_border */\r\n      .en_border.left{\r\n        @apply absolute bottom-0 top-0;\r\n        left: -3px;\r\n      }\r\n\r\n      .en_border.right{\r\n        @apply absolute bottom-0 top-0;\r\n        right: -3px;\r\n      }\r\n\r\n      .en_border.top{\r\n        @apply absolute ;\r\n        left: 1px;\r\n        right: 5px;\r\n        top: -2px;\r\n        will-change: width;\r\n\r\n        svg{\r\n          height: 8px;\r\n        }\r\n      }\r\n\r\n      .en_border.bottom{\r\n        @apply absolute;\r\n        left: 1px;\r\n        right: 5px;\r\n        bottom: -2px;\r\n        will-change: width;\r\n\r\n        svg{\r\n          height: 8px;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n    \r\n}\r\n\r\n</style>\r\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    options: Object,\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  beforeDestroy() {\n    this.$flickity.destroy();\n    this.$flickity = null;\n  },\n\n  methods: {\n    /**\n     * Initialize a new flickity and emit init event.\n     */\n    init() {\n      const Flickity = require('flickity');\n\n      this.$flickity = new Flickity(this.$el, this.options);\n      this.$emit('init', this.$flickity);\n    },\n\n    /**\n     * Return the current flickity instance to access directly\n     *\n     * @return {Flickity}\n     */\n    flickity() {\n      return this.$flickity;\n    },\n\n    /**\n     * Selecting Slides\n     */\n\n    /**\n     * Select a slide\n     *\n     * @param {number} index\n     * @param {boolean} isWrapped\n     * @param {boolean} isInstant\n     */\n    select(index, isWrapped, isInstant) {\n      this.$flickity.select(index, isWrapped, isInstant);\n    },\n\n    /**\n     * Change to the next slide\n     *\n     * @param {boolean} isWrapped\n     * @param {boolean} isInstant\n     */\n    next(isWrapped, isInstant) {\n      this.$flickity.next(isWrapped, isInstant);\n    },\n\n    /**\n     * Change to the previous slide\n     *\n     * @param {boolean} isWrapped\n     * @param {boolean} isInstant\n     */\n    previous(isWrapped, isInstant) {\n      this.$flickity.previous(isWrapped, isInstant);\n    },\n\n    /**\n     * Select a cell\n     *\n     * @param {number} value\n     * @param {boolean} isWrapped\n     * @param {boolean} isInstant\n     */\n    selectCell(value, isWrapped, isInstant) {\n      this.$flickity.selectCell(value, isWrapped, isInstant);\n    },\n\n    /**\n     * Sizing and Positioning\n     */\n\n    /**\n     * Trigger a resize event\n     */\n    resize() {\n      this.$flickity.resize();\n    },\n\n    /**\n     * Trigger a reposition event\n     */\n    reposition() {\n      this.$flickity.reposition();\n    },\n\n    /**\n     * Adding and removing cells\n     */\n\n    /**\n     * Prepend elements to flickity\n     *\n     * @param {array|HTMLElement|NodeList} elements\n     */\n    prepend(elements) {\n      this.$flickity.prepend(elements);\n    },\n\n    /**\n     * Append elements to flickity\n     *\n     * @param {array|HTMLElement|NodeList} elements\n     */\n    append(elements) {\n      this.$flickity.append(elements);\n    },\n\n    /**\n     * Insert elements at a given index\n     *\n     * @param {array|HTMLElement|NodeList} elements\n     * @param {number} index\n     */\n    insert(elements, index) {\n      this.$flickity.insert(elements, index);\n    },\n\n    /**\n     * Remove elements from flickity\n     *\n     * @param {array|HTMLElement|NodeList} elements\n     */\n    remove(elements) {\n      this.$flickity.remove(elements);\n    },\n\n    /**\n     * Player\n     */\n\n    /**\n     * Trigger a playPlayer event\n     */\n    playPlayer() {\n      this.$flickity.playPlayer();\n    },\n\n    /**\n     * Trigger a stopPlayer event\n     */\n    stopPlayer() {\n      this.$flickity.stopPlayer();\n    },\n\n    /**\n     * Trigger a pausePlayer event\n     */\n    pausePlayer() {\n      this.$flickity.pausePlayer();\n    },\n\n    /**\n     * Trigger a unpausePlayer event\n     */\n    unpausePlayer() {\n      this.$flickity.unpausePlayer();\n    },\n\n    /**\n     * Trigger a rerender event\n     */\n    rerender() {\n      this.$flickity.destroy();\n      this.init();\n    },\n\n    /**\n     * Utilities\n     */\n\n    /**\n     * Destroy the flickity instance\n     */\n    destroy() {\n      this.$flickity.destroy();\n    },\n\n    /**\n     * Trigger a rerender event\n     */\n    reloadCells() {\n      this.$flickity.reloadCells();\n    },\n\n    /**\n     * Get the cell elements\n     *\n     * @return {array}\n     */\n    getCellElements() {\n      return this.$flickity.getCellElements();\n    },\n\n    /**\n     * Return flickity data\n     *\n     * @return {Flickity}\n     */\n    data() {\n      const Flickity = require('flickity');\n\n      return Flickity.data(this.$el);\n    },\n\n    /**\n     * Events\n     */\n\n    /**\n     * Attach an event\n     *\n     * @param {string} eventName\n     * @param {function} listener\n     */\n    on(eventName, listener) {\n      this.$flickity.on(eventName, listener);\n    },\n\n    /**\n     * Remove an event\n     *\n     * @param {string} eventName\n     * @param {function} listener\n     */\n    off(eventName, listener) {\n      this.$flickity.off(eventName, listener);\n    },\n\n    /**\n     * Attach an event once\n     *\n     * @param {string} eventName\n     * @param {function} listener\n     */\n    once(eventName, listener) {\n      this.$flickity.once(eventName, listener);\n    },\n\n    /**\n     * Properties\n     */\n\n    /**\n     * Return the selected element\n     *\n     * @return {HTMLElement}\n     */\n    selectedElement() {\n      return this.$flickity.selectedElement;\n    },\n\n    /**\n     * Return the selected elements\n     *\n     * @return {array}\n     */\n    selectedElements() {\n      return this.$flickity.selectedElements;\n    },\n\n    /**\n     * Return the selected index\n     *\n     * @return {number}\n     */\n    selectedIndex() {\n      return this.$flickity.selectedIndex;\n    },\n\n    /**\n     * Return the cells\n     *\n     * @return {array}\n     */\n    cells() {\n      return this.$flickity.cells;\n    },\n\n    /**\n     * Return the slides\n     *\n     * @return {array}\n     */\n    slides() {\n      return this.$flickity.slides;\n    },\n\n    /**\n     * Disable dragging of slider\n     */\n    disableDrag() {\n      this.$flickity.options.draggable = false;\n      this.$flickity.updateDraggable();\n    },\n\n    /**\n     * Enable dragging of slider\n     */\n    enableDrag() {\n      this.$flickity.options.draggable = true;\n      this.$flickity.updateDraggable();\n    },\n  },\n};\n</script>\n\n<style src='flickity/dist/flickity.css'></style>\n","import { render } from \"./flickity.vue?vue&type=template&id=42695eab\"\nimport script from \"./flickity.vue?vue&type=script&lang=js\"\nexport * from \"./flickity.vue?vue&type=script&lang=js\"\n\nimport \"flickity/dist/flickity.css?vue&type=style&index=0&lang=css\"\n\nimport exportComponent from \"D:\\\\Project\\\\vue-scss\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"title lg:text-5xl text-3xl \">\r\n    <transition name=\"slide-fade\" mode=\"out-in\">\r\n      <div  :key=\"project_name\"> {{project_name}} </div>\r\n    </transition>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'projectName',\r\n  data(){\r\n    return{\r\n      project_name_list: ['Greygoose', 'Touch Cloud Website', 'Abaci Report', 'Axis Camera Plugin and AI Analysis System', 'NEXCOM Mechanical Arm Computer Vision AI Analysis System', 'Internship : 3D Scanning with Optical Inspection Instruments'],\r\n      project_name:  'Project',\r\n    };\r\n  },\r\n  props: {\r\n    ind: {\r\n      type: Number,\r\n      default: 3,\r\n      required: true\r\n    }\r\n  },\r\n  watch:{\r\n    /*ind: (newVal, oldVal)=>{\r\n      console.log(this.test)\r\n    }*/\r\n\r\n    ind:{\r\n      handler(val, oldVal) {\r\n        this.project_name = this.project_name_list[val]\r\n\r\n        if(val == 1){\r\n        this.project_content=\"My main task is to build the whole AI engine, which is responsible of detection and representation. I built the entire framework, including inference engine,  id tracker,  fence detection, and more. \"\r\n        }\r\n        else if(val==2){\r\n          this.project_content=\" In this project, as a Front-end developer, I was responsible of the entire design of the website, and introduce product to client clearly. \"\r\n        }\r\n        else if(val==3){\r\n          this.project_content=\" A local website for statistical report:  The main challenges were to deal with the gorgeous amount of data from AI engine, and present in a nice way, according charts , gauge capacity. \"\r\n        }\r\n        else if(val==4){\r\n          this.project_content=\" Detect motion and send camera frame to AI server. \"\r\n        }\r\n        else if(val==5){\r\n          this.project_content=\" A system for detection LED lamp :    Detect position , LED lamp rotation angle and color.\"\r\n        }\r\n        else if(val==6){\r\n          this.project_content=\" Point Cloud Visualization System:    User could operate system with point cloud data , analyze and rebuild point cloud, then display with detail information.\"\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .title{\r\n    @apply  absolute bottom-3 ;\r\n  }\r\n\r\n  /* slide fade animation */\r\n  .slide-fade-enter-active {\r\n    transition: all .5s cubic-bezier(1.0, 0.5, 0.8, 1.0);\r\n  }\r\n  .slide-fade-leave-active {\r\n    transition: all .8s cubic-bezier(1.0, 0.5, 0.8, 1.0);\r\n  }\r\n  .slide-fade-leave-to\r\n  /* .slide-fade-leave-active for <2.1.8 */ {\r\n    transform: translateY(-10px);\r\n    opacity: 0;\r\n  }\r\n  .slide-fade-enter-from {\r\n    transform: translateY(10px);\r\n    opacity: 0;\r\n  }\r\n\r\n</style>","import { render } from \"./project_title.vue?vue&type=template&id=0c1ea73f\"\nimport script from \"./project_title.vue?vue&type=script&lang=js\"\nexport * from \"./project_title.vue?vue&type=script&lang=js\"\n\nimport \"./project_title.vue?vue&type=style&index=0&id=0c1ea73f&lang=scss\"\n\nimport exportComponent from \"D:\\\\Project\\\\vue-scss\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template lang=\"\">\r\n  <div>\r\n    <TransitionRoot appear :show=\"isOpen\" as=\"template\">\r\n      <Dialog as=\"div\" @close=\"closeModal\" class=\"relative z-10\">\r\n        <TransitionChild\r\n          as=\"template\"\r\n          enter=\"duration-300 ease-out\"\r\n          enter-from=\"opacity-0\"\r\n          enter-to=\"opacity-100\"\r\n          leave=\"duration-200 ease-in\"\r\n          leave-from=\"opacity-100\"\r\n          leave-to=\"opacity-0\"\r\n        >\r\n          <div class=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n        </TransitionChild>\r\n\r\n        <div class=\"fixed inset-0 overflow-y-auto\">\r\n          <div\r\n            class=\"flex h-full items-center justify-center p-4 text-center\"\r\n          >\r\n            <TransitionChild\r\n              as=\"template\"\r\n              enter=\"duration-300 ease-out\"\r\n              enter-from=\"opacity-0 scale-95\"\r\n              enter-to=\"opacity-100 scale-100\"\r\n              leave=\"duration-200 ease-in\"\r\n              leave-from=\"opacity-100 scale-100\"\r\n              leave-to=\"opacity-0 scale-95\"\r\n            >\r\n              <DialogPanel\r\n                class=\" lg:w-3/5 w-5/6 h-2/3 transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\"\r\n              >\r\n                <DialogTitle\r\n                  as=\"h3\"\r\n                  :key=\"project_name\"\r\n                  class=\" sm:text-2xl text-xl leading-6 text-gray-900 font-acme\"\r\n                >\r\n                  {{project_name}}\r\n                </DialogTitle>\r\n\r\n                <div class=\" flex mt-6 flex-col lg:flex-row\" > \r\n                  <p class=\" lg:w-1/2 w-full content-p\" :key=\"project_content\">\r\n                    {{project_content}}\r\n                  </p>\r\n                  <img class=\"lg:w-1/2 w-2/3 h-1/2\" :src=\"img_src\">\r\n                  \r\n                </div>\r\n\r\n                <div class=\" flex mt-5 flex-row  justify-self-start\">\r\n\r\n                  <div >\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\r\n                      @click=\"closeModal\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div class=\" bottom-3 ml-5\">\r\n                    <a v-show=\"addLink\" :href=\"link\" class=\"btn focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\">Video link</a>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </DialogPanel>\r\n            </TransitionChild>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </TransitionRoot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { TransitionRoot,  TransitionChild,  Dialog,  DialogPanel,  DialogTitle } from '@headlessui/vue';\r\nimport templateImg from '../img/spring_fox.jpg';\r\nimport greygooseImg from '../img/gallery/gggg.jpg';\r\nimport reportImg from '../img/gallery/report1.png';\r\nimport ledImg from '../img/gallery/led.jpg';\r\nimport tcImg from '../img/gallery/tc.png';\r\nimport axisImg from '../img/gallery/AXIS-1.png';\r\nimport pointcloud from '../img/gallery/pointcloud.png';\r\n\r\nexport default {\r\n  name: 'PopWin',\r\n  components: {\r\n    TransitionRoot,\r\n    TransitionChild,\r\n    Dialog,\r\n    DialogPanel,\r\n    DialogTitle,\r\n  },\r\n  props:{\r\n    val: {\r\n      type: Number,\r\n      default: 3,\r\n      required: true\r\n    },\r\n\r\n    isOpen: {\r\n        type: Boolean,\r\n        default: false,\r\n        required: true\r\n    },\r\n\r\n    flexColumn:{\r\n      type: Boolean,\r\n      default: false,\r\n      required: false\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      project_name_list: ['Greygoose', 'Touch Cloud Website', 'Abaci Report', 'Axis Camera Plugin and AI Analysis System', 'NEXCOM Mechanical Arm Computer Vision AI Analysis System', 'Internship : 3D Scanning with Optical Inspection Instruments'],\r\n      project_name:  'Abaci Report',\r\n      project_content:'',\r\n      img_src: templateImg,\r\n      openModal: false,\r\n      addLink: false,\r\n      link:''\r\n    }\r\n  },\r\n\r\n  mounted(){\r\n    this.project_content=\" A local website for statistical report:  The main challenges were to deal with the gorgeous amount of data from AI engine, and present in a nice way, according charts , gauge capacity. \"\r\n    this.img_src=reportImg\r\n  },\r\n\r\n  watch:{\r\n\r\n    val:{\r\n      handler(val, oldVal) {\r\n        this.project_name = this.project_name_list[val-1]\r\n        console.log(this.project_name)\r\n\r\n        if(val == 1){\r\n          this.project_content=\"My main task is to build the whole AI engine, which is responsible of detection and representation. I built the entire framework, including inference engine,  id tracker,  fence detection, and more. \"\r\n          this.addLink = true\r\n          this. link = \"https://youtu.be/_11o5ehJsTc\"\r\n          this.img_src=greygooseImg\r\n        }\r\n        else if(val==2){\r\n          this.project_content=\" In this project, as a Front-end developer, I was responsible of the entire design of the website, and introduce product to client clearly. \"\r\n          this.img_src=tcImg\r\n          this.addLink = true\r\n          this. link = \"https://www.touchcloud.com.tw/\"\r\n        }\r\n        else if(val==3){\r\n          this.project_content=\" A local website for statistical report:  The main challenges were to deal with the gorgeous amount of data from AI engine, and present in a nice way, according charts , gauge capacity. \"\r\n          this.img_src=reportImg\r\n          console.log(this.project_content)\r\n          this.addLink = false\r\n        }\r\n        else if(val==4){\r\n          this.project_content=\" Detect motion and send camera frame to AI server. \"\r\n          this.img_src=axisImg\r\n          this.addLink = true\r\n          this. link = \"https://youtu.be/CXtt25TVekc\"\r\n\r\n        }\r\n        else if(val==5){\r\n          this.project_content=\" A system for detection LED lamp :    Detect position , LED lamp rotation angle and color.\"\r\n          this.img_src=ledImg\r\n          this.addLink = false\r\n        }\r\n        else if(val==6){\r\n          this.project_content=\" Point Cloud Visualization System:    User could operate system with point cloud data , analyze and rebuild point cloud, then display with detail information.\"\r\n          this.img_src=pointcloud\r\n          this.addLink = false\r\n        }\r\n\r\n      }\r\n    },\r\n\r\n    isOpen:{\r\n        handler(val, oldVal){\r\n            this.openModal = val;\r\n            console.log(\"isOpen:\", val);\r\n        }\r\n    }\r\n  },\r\n  methods:{\r\n    closeModal(){\r\n      this.openModal = false;\r\n      this.$emit('isClose', this.openModal);\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n  .btn{\r\n    @apply  inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 ;\r\n  }\r\n\r\n  .content-p{\r\n    @apply font-catamaran text-lg text-gray-500 m-2;\r\n  }\r\n</style>","let e=0;function n(){return++e}function t(){return n()}export{t as useId};\n","function u(r,n,...a){if(r in n){let e=n[r];return typeof e==\"function\"?e(...a):e}let t=new Error(`Tried to handle \"${r}\" but there is no handler defined. Only defined handlers are: ${Object.keys(n).map(e=>`\"${e}\"`).join(\", \")}.`);throw Error.captureStackTrace&&Error.captureStackTrace(t,u),t}export{u as match};\n","import{h as y,cloneVNode as g}from\"vue\";import{match as m}from\"./match.js\";var h=(t=>(t[t.None=0]=\"None\",t[t.RenderStrategy=1]=\"RenderStrategy\",t[t.Static=2]=\"Static\",t))(h||{}),b=(e=>(e[e.Unmount=0]=\"Unmount\",e[e.Hidden=1]=\"Hidden\",e))(b||{});function k({visible:n=!0,features:r=0,...e}){var t;if(n||r&2&&e.props.static)return i(e);if(r&1){let a=(t=e.props.unmount)==null||t?0:1;return m(a,{[0](){return null},[1](){return i({...e,props:{...e.props,hidden:!0,style:{display:\"none\"}}})}})}return i(e)}function i({props:n,attrs:r,slots:e,slot:t,name:a}){var c;let{as:d,...s}=R(n,[\"unmount\",\"static\"]),o=(c=e.default)==null?void 0:c.call(e,t),u={};if(d===\"template\"){if(Object.keys(s).length>0||Object.keys(r).length>0){let[p,...f]=o!=null?o:[];if(!j(p)||f.length>0)throw new Error(['Passing props on \"template\"!',\"\",`The current component <${a} /> is rendering a \"template\".`,\"However we need to passthrough the following props:\",Object.keys(s).concat(Object.keys(r)).map(l=>`  - ${l}`).join(`\n`),\"\",\"You can apply a few solutions:\",['Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"template\".',\"Render a single element as the child so that we can forward the props onto that element.\"].map(l=>`  - ${l}`).join(`\n`)].join(`\n`));return g(p,Object.assign({},s,u))}return Array.isArray(o)&&o.length===1?o[0]:o}return y(d,Object.assign({},s,u),o)}function S(n){let r=Object.assign({},n);for(let e in r)r[e]===void 0&&delete r[e];return r}function R(n,r=[]){let e=Object.assign({},n);for(let t of r)t in e&&delete e[t];return e}function j(n){return n==null?!1:typeof n.type==\"string\"||typeof n.type==\"object\"||typeof n.type==\"function\"}export{h as Features,b as RenderStrategy,S as compact,R as omit,k as render};\n","function l(r){let e={called:!1};return(...t)=>{if(!e.called)return e.called=!0,r(...t)}}export{l as once};\n","function r(){let i=[],o=[],t={enqueue(e){o.push(e)},requestAnimationFrame(...e){let a=requestAnimationFrame(...e);t.add(()=>cancelAnimationFrame(a))},nextFrame(...e){t.requestAnimationFrame(()=>{t.requestAnimationFrame(...e)})},setTimeout(...e){let a=setTimeout(...e);t.add(()=>clearTimeout(a))},add(e){i.push(e)},dispose(){for(let e of i.splice(0))e()},async workQueue(){for(let e of o.splice(0))await e()}};return t}export{r as disposables};\n","import{once as f}from\"../../../utils/once.js\";import{disposables as p}from\"../../../utils/disposables.js\";function m(e,...t){e&&t.length>0&&e.classList.add(...t)}function d(e,...t){e&&t.length>0&&e.classList.remove(...t)}var g=(i=>(i.Finished=\"finished\",i.Cancelled=\"cancelled\",i))(g||{});function F(e,t){let i=p();if(!e)return i.dispose;let{transitionDuration:n,transitionDelay:a}=getComputedStyle(e),[l,s]=[n,a].map(o=>{let[u=0]=o.split(\",\").filter(Boolean).map(r=>r.includes(\"ms\")?parseFloat(r):parseFloat(r)*1e3).sort((r,c)=>c-r);return u});return l!==0?i.setTimeout(()=>t(\"finished\"),l+s):t(\"finished\"),i.add(()=>t(\"cancelled\")),i.dispose}function L(e,t,i,n,a,l){let s=p(),o=l!==void 0?f(l):()=>{};return d(e,...a),m(e,...t,...i),s.nextFrame(()=>{d(e,...i),m(e,...n),s.add(F(e,u=>(d(e,...n,...t),m(e,...a),o(u))))}),s.add(()=>d(e,...t,...i,...n,...a)),s.add(()=>o(\"cancelled\")),s.dispose}export{g as Reason,L as transition};\n","function t(l){return l==null||l.value==null?null:\"$el\"in l.value?l.value.$el:l.value}export{t as dom};\n","import{inject as t,provide as r}from\"vue\";let n=Symbol(\"Context\");var l=(e=>(e[e.Open=0]=\"Open\",e[e.Closed=1]=\"Closed\",e))(l||{});function f(){return p()!==null}function p(){return t(n,null)}function c(o){r(n,o)}export{l as State,f as hasOpenClosed,p as useOpenClosed,c as useOpenClosedProvider};\n","import{computed as b,defineComponent as D,h as I,inject as L,onMounted as g,onUnmounted as A,provide as H,ref as T,watch as X,watchEffect as y}from\"vue\";import{useId as Y}from\"../../hooks/use-id.js\";import{match as E}from\"../../utils/match.js\";import{Features as Z,omit as ee,render as P,RenderStrategy as f}from\"../../utils/render.js\";import{Reason as j,transition as M}from\"./utils/transition.js\";import{dom as U}from\"../../utils/dom.js\";import{useOpenClosedProvider as te,State as V,useOpenClosed as ne,hasOpenClosed as re}from\"../../internal/open-closed.js\";function d(e=\"\"){return e.split(\" \").filter(t=>t.trim().length>1)}let F=Symbol(\"TransitionContext\");var ae=(a=>(a.Visible=\"visible\",a.Hidden=\"hidden\",a))(ae||{});function le(){return L(F,null)!==null}function ie(){let e=L(F,null);if(e===null)throw new Error(\"A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.\");return e}function se(){let e=L(R,null);if(e===null)throw new Error(\"A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.\");return e}let R=Symbol(\"NestingContext\");function w(e){return\"children\"in e?w(e.children):e.value.filter(({state:t})=>t===\"visible\").length>0}function K(e){let t=T([]),a=T(!1);g(()=>a.value=!0),A(()=>a.value=!1);function s(r,n=f.Hidden){let l=t.value.findIndex(({id:i})=>i===r);l!==-1&&(E(n,{[f.Unmount](){t.value.splice(l,1)},[f.Hidden](){t.value[l].state=\"hidden\"}}),!w(t)&&a.value&&(e==null||e()))}function v(r){let n=t.value.find(({id:l})=>l===r);return n?n.state!==\"visible\"&&(n.state=\"visible\"):t.value.push({id:r,state:\"visible\"}),()=>s(r,f.Unmount)}return{children:t,register:v,unregister:s}}let _=Z.RenderStrategy,oe=D({props:{as:{type:[Object,String],default:\"div\"},show:{type:[Boolean],default:null},unmount:{type:[Boolean],default:!0},appear:{type:[Boolean],default:!1},enter:{type:[String],default:\"\"},enterFrom:{type:[String],default:\"\"},enterTo:{type:[String],default:\"\"},entered:{type:[String],default:\"\"},leave:{type:[String],default:\"\"},leaveFrom:{type:[String],default:\"\"},leaveTo:{type:[String],default:\"\"}},emits:{beforeEnter:()=>!0,afterEnter:()=>!0,beforeLeave:()=>!0,afterLeave:()=>!0},setup(e,{emit:t,attrs:a,slots:s,expose:v}){if(!le()&&re())return()=>I(fe,{...e,onBeforeEnter:()=>t(\"beforeEnter\"),onAfterEnter:()=>t(\"afterEnter\"),onBeforeLeave:()=>t(\"beforeLeave\"),onAfterLeave:()=>t(\"afterLeave\")},s);let r=T(null),n=T(\"visible\"),l=b(()=>e.unmount?f.Unmount:f.Hidden);v({el:r,$el:r});let{show:i,appear:x}=ie(),{register:h,unregister:p}=se(),B={value:!0},m=Y(),c={value:!1},N=K(()=>{c.value||(n.value=\"hidden\",p(m),t(\"afterLeave\"))});g(()=>{let o=h(m);A(o)}),y(()=>{if(l.value===f.Hidden&&!!m){if(i&&n.value!==\"visible\"){n.value=\"visible\";return}E(n.value,{[\"hidden\"]:()=>p(m),[\"visible\"]:()=>h(m)})}});let k=d(e.enter),$=d(e.enterFrom),q=d(e.enterTo),O=d(e.entered),z=d(e.leave),G=d(e.leaveFrom),J=d(e.leaveTo);g(()=>{y(()=>{if(n.value===\"visible\"){let o=U(r);if(o instanceof Comment&&o.data===\"\")throw new Error(\"Did you forget to passthrough the `ref` to the actual DOM node?\")}})});function Q(o){let S=B.value&&!x.value,u=U(r);!u||!(u instanceof HTMLElement)||S||(c.value=!0,i.value&&t(\"beforeEnter\"),i.value||t(\"beforeLeave\"),o(i.value?M(u,k,$,q,O,C=>{c.value=!1,C===j.Finished&&t(\"afterEnter\")}):M(u,z,G,J,O,C=>{c.value=!1,C===j.Finished&&(w(N)||(n.value=\"hidden\",p(m),t(\"afterLeave\")))})))}return g(()=>{X([i],(o,S,u)=>{Q(u),B.value=!1},{immediate:!0})}),H(R,N),te(b(()=>E(n.value,{[\"visible\"]:V.Open,[\"hidden\"]:V.Closed}))),()=>{let{appear:o,show:S,enter:u,enterFrom:C,enterTo:de,entered:ve,leave:pe,leaveFrom:me,leaveTo:Te,...W}=e;return P({props:{...W,...{ref:r}},slot:{},slots:s,attrs:a,features:_,visible:n.value===\"visible\",name:\"TransitionChild\"})}}}),ue=oe,fe=D({inheritAttrs:!1,props:{as:{type:[Object,String],default:\"div\"},show:{type:[Boolean],default:null},unmount:{type:[Boolean],default:!0},appear:{type:[Boolean],default:!1},enter:{type:[String],default:\"\"},enterFrom:{type:[String],default:\"\"},enterTo:{type:[String],default:\"\"},entered:{type:[String],default:\"\"},leave:{type:[String],default:\"\"},leaveFrom:{type:[String],default:\"\"},leaveTo:{type:[String],default:\"\"}},emits:{beforeEnter:()=>!0,afterEnter:()=>!0,beforeLeave:()=>!0,afterLeave:()=>!0},setup(e,{emit:t,attrs:a,slots:s}){let v=ne(),r=b(()=>e.show===null&&v!==null?E(v.value,{[V.Open]:!0,[V.Closed]:!1}):e.show);y(()=>{if(![!0,!1].includes(r.value))throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')});let n=T(r.value?\"visible\":\"hidden\"),l=K(()=>{n.value=\"hidden\"}),i=T(!0),x={show:r,appear:b(()=>e.appear||!i.value)};return g(()=>{y(()=>{i.value=!1,r.value?n.value=\"visible\":w(l)||(n.value=\"hidden\")})}),H(R,l),H(F,x),()=>{let h=ee(e,[\"show\",\"appear\",\"unmount\"]),p={unmount:e.unmount};return P({props:{...p,as:\"template\"},slot:{},slots:{...s,default:()=>[I(ue,{onBeforeEnter:()=>t(\"beforeEnter\"),onAfterEnter:()=>t(\"afterEnter\"),onBeforeLeave:()=>t(\"beforeLeave\"),onAfterLeave:()=>t(\"afterLeave\"),...a,...p,...h},s.default)]},attrs:{},features:_,visible:n.value===\"visible\",name:\"Transition\"})}}});export{oe as TransitionChild,fe as TransitionRoot};\n","var o=(r=>(r.Space=\" \",r.Enter=\"Enter\",r.Escape=\"Escape\",r.Backspace=\"Backspace\",r.Delete=\"Delete\",r.ArrowLeft=\"ArrowLeft\",r.ArrowUp=\"ArrowUp\",r.ArrowRight=\"ArrowRight\",r.ArrowDown=\"ArrowDown\",r.Home=\"Home\",r.End=\"End\",r.PageUp=\"PageUp\",r.PageDown=\"PageDown\",r.Tab=\"Tab\",r))(o||{});export{o as Keys};\n","import{defineComponent as i}from\"vue\";import{render as p}from\"../utils/render.js\";var a=(e=>(e[e.None=1]=\"None\",e[e.Focusable=2]=\"Focusable\",e[e.Hidden=4]=\"Hidden\",e))(a||{});let m=i({name:\"Hidden\",props:{as:{type:[Object,String],default:\"div\"},features:{type:Number,default:1}},setup(r,{slots:t,attrs:o}){return()=>{let{features:e,...d}=r,n={\"aria-hidden\":(e&2)===2?!0:void 0,style:{position:\"absolute\",width:1,height:1,padding:0,margin:-1,overflow:\"hidden\",clip:\"rect(0, 0, 0, 0)\",whiteSpace:\"nowrap\",borderWidth:\"0\",...(e&4)===4&&(e&2)!==2&&{display:\"none\"}}};return p({props:{...d,...n},slot:{},attrs:o,slots:t,name:\"Hidden\"})}}});export{a as Features,m as Hidden};\n","import{dom as r}from\"./dom.js\";function e(n){if(typeof window==\"undefined\")return null;if(n instanceof Node)return n.ownerDocument;if(n!=null&&n.hasOwnProperty(\"value\")){let o=r(n);if(o)return o.ownerDocument}return document}export{e as getOwnerDocument};\n","import{match as E}from\"./match.js\";import{getOwnerDocument as p}from\"./owner.js\";let c=[\"[contentEditable=true]\",\"[tabindex]\",\"a[href]\",\"area[href]\",\"button:not([disabled])\",\"iframe\",\"input:not([disabled])\",\"select:not([disabled])\",\"textarea:not([disabled])\"].map(e=>`${e}:not([tabindex='-1'])`).join(\",\");var L=(o=>(o[o.First=1]=\"First\",o[o.Previous=2]=\"Previous\",o[o.Next=4]=\"Next\",o[o.Last=8]=\"Last\",o[o.WrapAround=16]=\"WrapAround\",o[o.NoScroll=32]=\"NoScroll\",o))(L||{}),N=(n=>(n[n.Error=0]=\"Error\",n[n.Overflow=1]=\"Overflow\",n[n.Success=2]=\"Success\",n[n.Underflow=3]=\"Underflow\",n))(N||{}),T=(t=>(t[t.Previous=-1]=\"Previous\",t[t.Next=1]=\"Next\",t))(T||{});function b(e=document.body){return e==null?[]:Array.from(e.querySelectorAll(c))}var M=(t=>(t[t.Strict=0]=\"Strict\",t[t.Loose=1]=\"Loose\",t))(M||{});function F(e,r=0){var t;return e===((t=p(e))==null?void 0:t.body)?!1:E(r,{[0](){return e.matches(c)},[1](){let l=e;for(;l!==null;){if(l.matches(c))return!0;l=l.parentElement}return!1}})}function H(e){e==null||e.focus({preventScroll:!0})}let h=[\"textarea\",\"input\"].join(\",\");function v(e){var r,t;return(t=(r=e==null?void 0:e.matches)==null?void 0:r.call(e,h))!=null?t:!1}function w(e,r=t=>t){return e.slice().sort((t,l)=>{let n=r(t),i=r(l);if(n===null||i===null)return 0;let o=n.compareDocumentPosition(i);return o&Node.DOCUMENT_POSITION_FOLLOWING?-1:o&Node.DOCUMENT_POSITION_PRECEDING?1:0})}function P(e,r,t=!0){var d;let l=(d=Array.isArray(e)?e.length>0?e[0].ownerDocument:document:e==null?void 0:e.ownerDocument)!=null?d:document,n=Array.isArray(e)?t?w(e):e:b(e),i=l.activeElement,o=(()=>{if(r&5)return 1;if(r&10)return-1;throw new Error(\"Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last\")})(),m=(()=>{if(r&1)return 0;if(r&2)return Math.max(0,n.indexOf(i))-1;if(r&4)return Math.max(0,n.indexOf(i))+1;if(r&8)return n.length-1;throw new Error(\"Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last\")})(),x=r&32?{preventScroll:!0}:{},f=0,s=n.length,u;do{if(f>=s||f+s<=0)return 0;let a=m+f;if(r&16)a=(a+s)%s;else{if(a<0)return 3;if(a>=s)return 1}u=n[a],u==null||u.focus(x),f+=o}while(u!==l.activeElement);return u.hasAttribute(\"tabindex\")||u.setAttribute(\"tabindex\",\"0\"),r&6&&v(u)&&u.select(),2}export{L as Focus,N as FocusResult,M as FocusableMode,H as focusElement,P as focusIn,b as getFocusableElements,F as isFocusableElement,w as sortByDomNode};\n","import{watchEffect as d}from\"vue\";function w(e,n,t){typeof window!=\"undefined\"&&d(o=>{window.addEventListener(e,n,t),o(()=>window.removeEventListener(e,n,t))})}export{w as useWindowEvent};\n","import{ref as a}from\"vue\";import{useWindowEvent as t}from\"./use-window-event.js\";var d=(r=>(r[r.Forwards=0]=\"Forwards\",r[r.Backwards=1]=\"Backwards\",r))(d||{});function n(){let o=a(0);return t(\"keydown\",e=>{e.key===\"Tab\"&&(o.value=e.shiftKey?1:0)}),o}export{d as Direction,n as useTabDirection};\n","import{watchEffect as i}from\"vue\";function r(n,e,d,o){typeof window!=\"undefined\"&&i(t=>{n=n!=null?n:window,n.addEventListener(e,d,o),t(()=>n.removeEventListener(e,d,o))})}export{r as useEventListener};\n","import{computed as f,defineComponent as k,h as E,onMounted as M,ref as v,watch as p,Fragment as g}from\"vue\";import{render as B}from\"../../utils/render.js\";import{Hidden as b,Features as D}from\"../../internal/hidden.js\";import{dom as F}from\"../../utils/dom.js\";import{focusIn as L,Focus as d,focusElement as m,FocusResult as P}from\"../../utils/focus-management.js\";import{match as I}from\"../../utils/match.js\";import{useTabDirection as O,Direction as w}from\"../../hooks/use-tab-direction.js\";import{getOwnerDocument as S}from\"../../utils/owner.js\";import{useEventListener as j}from\"../../hooks/use-event-listener.js\";import\"../../utils/micro-task.js\";var y=(e=>(e[e.None=1]=\"None\",e[e.InitialFocus=2]=\"InitialFocus\",e[e.TabLock=4]=\"TabLock\",e[e.FocusLock=8]=\"FocusLock\",e[e.RestoreFocus=16]=\"RestoreFocus\",e[e.All=30]=\"All\",e))(y||{});let V=Object.assign(k({name:\"FocusTrap\",props:{as:{type:[Object,String],default:\"div\"},initialFocus:{type:Object,default:null},features:{type:Number,default:30},containers:{type:Object,default:v(new Set)}},inheritAttrs:!1,setup(o,{attrs:u,slots:n,expose:r}){let t=v(null);r({el:t,$el:t});let a=f(()=>S(t));A({ownerDocument:a},f(()=>Boolean(o.features&16)));let e=N({ownerDocument:a,container:t,initialFocus:f(()=>o.initialFocus)},f(()=>Boolean(o.features&2)));C({ownerDocument:a,container:t,containers:o.containers,previousActiveElement:e},f(()=>Boolean(o.features&8)));let s=O();function i(){let l=F(t);!l||I(s.value,{[w.Forwards]:()=>L(l,d.First),[w.Backwards]:()=>L(l,d.Last)})}return()=>{let l={},T={\"data-hi\":\"container\",ref:t},{features:c,initialFocus:H,containers:R,...h}=o;return E(g,[Boolean(c&4)&&E(b,{as:\"button\",type:\"button\",onFocus:i,features:D.Focusable}),B({props:{...u,...h,...T},slot:l,attrs:u,slots:n,name:\"FocusTrap\"}),Boolean(c&4)&&E(b,{as:\"button\",type:\"button\",onFocus:i,features:D.Focusable})])}}}),{features:y});function A({ownerDocument:o},u){let n=v(null),r={value:!1};M(()=>{p(u,(t,a)=>{var e;t!==a&&(!u.value||(r.value=!0,n.value||(n.value=(e=o.value)==null?void 0:e.activeElement)))},{immediate:!0}),p(u,(t,a,e)=>{t!==a&&(!u.value||e(()=>{r.value!==!1&&(r.value=!1,m(n.value),n.value=null)}))},{immediate:!0})})}function N({ownerDocument:o,container:u,initialFocus:n},r){let t=v(null);return M(()=>{p([u,n,r],(a,e)=>{var T,c;if(a.every((H,R)=>(e==null?void 0:e[R])===H)||!r.value)return;let s=F(u);if(!s)return;let i=F(n),l=(T=o.value)==null?void 0:T.activeElement;if(i){if(i===l){t.value=l;return}}else if(s.contains(l)){t.value=l;return}i?m(i):L(s,d.First)===P.Error&&console.warn(\"There are no focusable elements inside the <FocusTrap />\"),t.value=(c=o.value)==null?void 0:c.activeElement},{immediate:!0,flush:\"post\"})}),t}function C({ownerDocument:o,container:u,containers:n,previousActiveElement:r},t){var a;j((a=o.value)==null?void 0:a.defaultView,\"focus\",e=>{if(!t.value)return;let s=new Set(n==null?void 0:n.value);s.add(u);let i=r.value;if(!i)return;let l=e.target;l&&l instanceof HTMLElement?_(s,l)?(r.value=l,m(l)):(e.preventDefault(),e.stopPropagation(),m(i)):m(r.value)},!0)}function _(o,u){var n;for(let r of o)if((n=r.value)!=null&&n.contains(u))return!0;return!1}export{V as FocusTrap};\n","import{ref as E,watchEffect as m}from\"vue\";import{getOwnerDocument as b}from\"../utils/owner.js\";let l=\"body > *\",i=new Set,r=new Map;function u(t){t.setAttribute(\"aria-hidden\",\"true\"),t.inert=!0}function s(t){let n=r.get(t);!n||(n[\"aria-hidden\"]===null?t.removeAttribute(\"aria-hidden\"):t.setAttribute(\"aria-hidden\",n[\"aria-hidden\"]),t.inert=n.inert)}function g(t,n=E(!0)){m(d=>{if(!n.value||!t.value)return;let a=t.value,o=b(a);if(!!o){i.add(a);for(let e of r.keys())e.contains(a)&&(s(e),r.delete(e));o.querySelectorAll(l).forEach(e=>{if(e instanceof HTMLElement){for(let f of i)if(e.contains(f))return;i.size===1&&(r.set(e,{\"aria-hidden\":e.getAttribute(\"aria-hidden\"),inert:e.inert}),u(e))}}),d(()=>{if(i.delete(a),i.size>0)o.querySelectorAll(l).forEach(e=>{if(e instanceof HTMLElement&&!r.has(e)){for(let f of i)if(e.contains(f))return;r.set(e,{\"aria-hidden\":e.getAttribute(\"aria-hidden\"),inert:e.inert}),u(e)}});else for(let e of r.keys())s(e),r.delete(e)})}})}export{g as useInertOthers};\n","import{defineComponent as l,inject as a,provide as c}from\"vue\";import{render as p}from\"../utils/render.js\";let e=Symbol(\"ForcePortalRootContext\");function u(){return a(e,!1)}let P=l({name:\"ForcePortalRoot\",props:{as:{type:[Object,String],default:\"template\"},force:{type:Boolean,default:!1}},setup(o,{slots:t,attrs:r}){return c(e,o.force),()=>{let{force:f,...n}=o;return p({props:n,slot:{},slots:t,attrs:r,name:\"ForcePortalRoot\"})}}});export{P as ForcePortalRoot,u as usePortalRoot};\n","import{Teleport as P,defineComponent as s,h as y,inject as T,onUnmounted as h,provide as E,reactive as w,ref as f,watchEffect as C,computed as b}from\"vue\";import{render as d}from\"../../utils/render.js\";import{usePortalRoot as j}from\"../../internal/portal-force-root.js\";import{getOwnerDocument as v}from\"../../utils/owner.js\";function c(t){let r=v(t);if(!r){if(t===null)return null;throw new Error(`[Headless UI]: Cannot find ownerDocument for contextElement: ${t}`)}let o=r.getElementById(\"headlessui-portal-root\");if(o)return o;let e=r.createElement(\"div\");return e.setAttribute(\"id\",\"headlessui-portal-root\"),r.body.appendChild(e)}let R=s({name:\"Portal\",props:{as:{type:[Object,String],default:\"div\"}},setup(t,{slots:r,attrs:o}){let e=f(null),p=b(()=>v(e)),n=j(),u=T(g,null),l=f(n===!0||u==null?c(e.value):u.resolveTarget());return C(()=>{n||u!=null&&(l.value=u.resolveTarget())}),h(()=>{var i,m;let a=(i=p.value)==null?void 0:i.getElementById(\"headlessui-portal-root\");!a||l.value===a&&l.value.children.length<=0&&((m=l.value.parentElement)==null||m.removeChild(l.value))}),()=>{if(l.value===null)return null;let a={ref:e};return y(P,{to:l.value},d({props:{...t,...a},slot:{},attrs:o,slots:r,name:\"Portal\"}))}}}),g=Symbol(\"PortalGroupContext\"),L=s({name:\"PortalGroup\",props:{as:{type:[Object,String],default:\"template\"},target:{type:Object,default:null}},setup(t,{attrs:r,slots:o}){let e=w({resolveTarget(){return t.target}});return E(g,e),()=>{let{target:p,...n}=t;return d({props:n,slot:{},attrs:r,slots:o,name:\"PortalGroup\"})}}});export{R as Portal,L as PortalGroup};\n","import{inject as d,provide as u,onMounted as l,onUnmounted as p}from\"vue\";let i=Symbol(\"StackContext\");var c=(e=>(e[e.Add=0]=\"Add\",e[e.Remove=1]=\"Remove\",e))(c||{});function a(){return d(i,()=>{})}function s({type:n,element:o,onUpdate:e}){let m=a();function t(...r){e==null||e(...r),m(...r)}l(()=>{t(0,n,o),p(()=>{t(1,n,o)})}),u(i,t)}export{c as StackMessage,a as useStackContext,s as useStackProvider};\n","import{computed as m,defineComponent as x,inject as R,onMounted as v,onUnmounted as D,provide as j,ref as p,unref as y}from\"vue\";import{useId as C}from\"../../hooks/use-id.js\";import{render as b}from\"../../utils/render.js\";let u=Symbol(\"DescriptionContext\");function h(){let n=R(u,null);if(n===null)throw new Error(\"Missing parent\");return n}function P({slot:n=p({}),name:o=\"Description\",props:s={}}={}){let e=p([]);function t(r){return e.value.push(r),()=>{let i=e.value.indexOf(r);i!==-1&&e.value.splice(i,1)}}return j(u,{register:t,slot:n,name:o,props:s}),m(()=>e.value.length>0?e.value.join(\" \"):void 0)}let S=x({name:\"Description\",props:{as:{type:[Object,String],default:\"p\"}},setup(n,{attrs:o,slots:s}){let e=h(),t=`headlessui-description-${C()}`;return v(()=>D(e.register(t))),()=>{let{name:r=\"Description\",slot:i=p({}),props:c={}}=e,l=n,d={...Object.entries(c).reduce((f,[a,g])=>Object.assign(f,{[a]:y(g)}),{}),id:t};return b({props:{...l,...d},slot:i.value,attrs:o,slots:s,name:r})}}});export{S as Description,P as useDescriptions};\n","function t(e){typeof queueMicrotask==\"function\"?queueMicrotask(e):Promise.resolve().then(e).catch(o=>setTimeout(()=>{throw o}))}export{t as microTask};\n","import{useWindowEvent as u}from\"./use-window-event.js\";import{dom as m}from\"../utils/dom.js\";import{microTask as p}from\"../utils/micro-task.js\";var s=(n=>(n[n.None=1]=\"None\",n[n.IgnoreScrollbars=2]=\"IgnoreScrollbars\",n))(s||{});function w(f,a,n=1){let i=!1;function l(r){if(i)return;i=!0,p(()=>{i=!1});let o=r.target;if(!o.ownerDocument.documentElement.contains(o))return;let c=function t(e){return typeof e==\"function\"?t(e()):Array.isArray(e)||e instanceof Set?e:[e]}(f);if((n&2)===2){let t=20,e=o.ownerDocument.documentElement;if(r.clientX>e.clientWidth-t||r.clientX<t||r.clientY>e.clientHeight-t||r.clientY<t)return}for(let t of c){if(t===null)continue;let e=t instanceof HTMLElement?t:m(t);if(e!=null&&e.contains(o))return}a(r,o)}u(\"pointerdown\",l),u(\"mousedown\",l)}export{s as Features,w as useOutsideClick};\n","import{computed as m,defineComponent as S,h as v,inject as H,nextTick as Z,onMounted as j,onUnmounted as ee,provide as te,ref as h,watchEffect as L}from\"vue\";import{render as b,Features as W}from\"../../utils/render.js\";import{Keys as le}from\"../../keyboard.js\";import{useId as O}from\"../../hooks/use-id.js\";import{FocusTrap as P}from\"../../components/focus-trap/focus-trap.js\";import{useInertOthers as oe}from\"../../hooks/use-inert-others.js\";import{Portal as K,PortalGroup as re}from\"../portal/portal.js\";import{StackMessage as N,useStackProvider as ne}from\"../../internal/stack-context.js\";import{match as E}from\"../../utils/match.js\";import{ForcePortalRoot as F}from\"../../internal/portal-force-root.js\";import{Description as ae,useDescriptions as ie}from\"../description/description.js\";import{dom as _}from\"../../utils/dom.js\";import{useOpenClosed as ue,State as U}from\"../../internal/open-closed.js\";import{useOutsideClick as se,Features as pe}from\"../../hooks/use-outside-click.js\";import{getOwnerDocument as de}from\"../../utils/owner.js\";import{useEventListener as fe}from\"../../hooks/use-event-listener.js\";import{Hidden as ce,Features as ge}from\"../../internal/hidden.js\";var me=(l=>(l[l.Open=0]=\"Open\",l[l.Closed=1]=\"Closed\",l))(me||{});let x=Symbol(\"DialogContext\");function R(r){let i=H(x,null);if(i===null){let l=new Error(`<${r} /> is missing a parent <Dialog /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(l,R),l}return i}let T=\"DC8F892D-2EBD-447C-A4C8-A03058436FF4\",He=S({name:\"Dialog\",inheritAttrs:!1,props:{as:{type:[Object,String],default:\"div\"},static:{type:Boolean,default:!1},unmount:{type:Boolean,default:!0},open:{type:[Boolean,String],default:T},initialFocus:{type:Object,default:null}},emits:{close:r=>!0},setup(r,{emit:i,attrs:l,slots:u,expose:a}){var B;let p=h(0),n=ue(),c=m(()=>r.open===T&&n!==null?E(n.value,{[U.Open]:!0,[U.Closed]:!1}):r.open),y=h(new Set),d=h(null),I=h(null),k=m(()=>de(d));if(a({el:d,$el:d}),!(r.open!==T||n!==null))throw new Error(\"You forgot to provide an `open` prop to the `Dialog`.\");if(typeof c.value!=\"boolean\")throw new Error(`You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${c.value===T?void 0:r.open}`);let f=m(()=>c.value?0:1),M=m(()=>f.value===0),C=m(()=>p.value>1),V=H(x,null)!==null,Y=m(()=>C.value?\"parent\":\"leaf\");oe(d,m(()=>C.value?M.value:!1)),ne({type:\"Dialog\",element:d,onUpdate:(t,o,e)=>{if(o===\"Dialog\")return E(t,{[N.Add](){y.value.add(e),p.value+=1},[N.Remove](){y.value.delete(e),p.value-=1}})}});let q=ie({name:\"DialogDescription\",slot:m(()=>({open:c.value}))}),G=`headlessui-dialog-${O()}`,w=h(null),D={titleId:w,panelRef:h(null),dialogState:f,setTitleId(t){w.value!==t&&(w.value=t)},close(){i(\"close\",!1)}};te(x,D),se(()=>{var o,e,g;return[...Array.from((e=(o=k.value)==null?void 0:o.querySelectorAll(\"body > *\"))!=null?e:[]).filter(s=>!(!(s instanceof HTMLElement)||s.contains(_(I))||D.panelRef.value&&s.contains(D.panelRef.value))),(g=D.panelRef.value)!=null?g:d.value]},(t,o)=>{f.value===0&&(C.value||(D.close(),Z(()=>o==null?void 0:o.focus())))},pe.IgnoreScrollbars),fe((B=k.value)==null?void 0:B.defaultView,\"keydown\",t=>{t.defaultPrevented||t.key===le.Escape&&f.value===0&&(C.value||(t.preventDefault(),t.stopPropagation(),D.close()))}),L(t=>{var A;if(f.value!==0||V)return;let o=k.value;if(!o)return;let e=o==null?void 0:o.documentElement,g=(A=o.defaultView)!=null?A:window,s=e.style.overflow,J=e.style.paddingRight,$=g.innerWidth-e.clientWidth;if(e.style.overflow=\"hidden\",$>0){let Q=e.clientWidth-e.offsetWidth,X=$-Q;e.style.paddingRight=`${X}px`}t(()=>{e.style.overflow=s,e.style.paddingRight=J})}),L(t=>{if(f.value!==0)return;let o=_(d);if(!o)return;let e=new IntersectionObserver(g=>{for(let s of g)s.boundingClientRect.x===0&&s.boundingClientRect.y===0&&s.boundingClientRect.width===0&&s.boundingClientRect.height===0&&D.close()});e.observe(o),t(()=>e.disconnect())});function z(t){t.stopPropagation()}return()=>{let t={...l,ref:d,id:G,role:\"dialog\",\"aria-modal\":f.value===0?!0:void 0,\"aria-labelledby\":w.value,\"aria-describedby\":q.value,onClick:z},{open:o,initialFocus:e,...g}=r,s={open:f.value===0};return v(F,{force:!0},()=>[v(K,()=>v(re,{target:d.value},()=>v(F,{force:!1},()=>v(P,{initialFocus:e,containers:y,features:M.value?E(Y.value,{parent:P.features.RestoreFocus,leaf:P.features.All&~P.features.FocusLock}):P.features.None},()=>b({props:{...g,...t},slot:s,attrs:l,slots:u,visible:f.value===0,features:W.RenderStrategy|W.Static,name:\"Dialog\"}))))),v(ce,{features:ge.Hidden,ref:I})])}}}),je=S({name:\"DialogOverlay\",props:{as:{type:[Object,String],default:\"div\"}},setup(r,{attrs:i,slots:l}){let u=R(\"DialogOverlay\"),a=`headlessui-dialog-overlay-${O()}`;function p(n){n.target===n.currentTarget&&(n.preventDefault(),n.stopPropagation(),u.close())}return()=>b({props:{...r,...{id:a,\"aria-hidden\":!0,onClick:p}},slot:{open:u.dialogState.value===0},attrs:i,slots:l,name:\"DialogOverlay\"})}}),Le=S({name:\"DialogBackdrop\",props:{as:{type:[Object,String],default:\"div\"}},inheritAttrs:!1,setup(r,{attrs:i,slots:l,expose:u}){let a=R(\"DialogBackdrop\"),p=`headlessui-dialog-backdrop-${O()}`,n=h(null);return u({el:n,$el:n}),j(()=>{if(a.panelRef.value===null)throw new Error(\"A <DialogBackdrop /> component is being used, but a <DialogPanel /> component is missing.\")}),()=>{let c=r,y={id:p,ref:n,\"aria-hidden\":!0};return v(F,{force:!0},()=>v(K,()=>b({props:{...i,...c,...y},slot:{open:a.dialogState.value===0},attrs:i,slots:l,name:\"DialogBackdrop\"})))}}}),We=S({name:\"DialogPanel\",props:{as:{type:[Object,String],default:\"div\"}},setup(r,{attrs:i,slots:l,expose:u}){let a=R(\"DialogPanel\"),p=`headlessui-dialog-panel-${O()}`;return u({el:a.panelRef,$el:a.panelRef}),()=>{let n={id:p,ref:a.panelRef};return b({props:{...r,...n},slot:{open:a.dialogState.value===0},attrs:i,slots:l,name:\"DialogPanel\"})}}}),Ke=S({name:\"DialogTitle\",props:{as:{type:[Object,String],default:\"h2\"}},setup(r,{attrs:i,slots:l}){let u=R(\"DialogTitle\"),a=`headlessui-dialog-title-${O()}`;return j(()=>{u.setTitleId(a),ee(()=>u.setTitleId(null))}),()=>b({props:{...r,...{id:a}},slot:{open:u.dialogState.value===0},attrs:i,slots:l,name:\"DialogTitle\"})}}),Ne=ae;export{He as Dialog,Le as DialogBackdrop,Ne as DialogDescription,je as DialogOverlay,We as DialogPanel,Ke as DialogTitle};\n","import { render } from \"./PopWin.vue?vue&type=template&id=3a7e91fa&lang=true\"\nimport script from \"./PopWin.vue?vue&type=script&lang=js\"\nexport * from \"./PopWin.vue?vue&type=script&lang=js\"\n\nimport \"./PopWin.vue?vue&type=style&index=0&id=3a7e91fa&lang=css\"\n\nimport exportComponent from \"D:\\\\Project\\\\vue-scss\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FlickityImg.vue?vue&type=template&id=12d3fb13\"\nimport script from \"./FlickityImg.vue?vue&type=script&lang=js\"\nexport * from \"./FlickityImg.vue?vue&type=script&lang=js\"\n\nimport \"./FlickityImg.vue?vue&type=style&index=0&id=12d3fb13&lang=scss\"\n\nimport exportComponent from \"D:\\\\Project\\\\vue-scss\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./sideProject.vue?vue&type=template&id=a9584f16\"\nimport script from \"./sideProject.vue?vue&type=script&lang=js\"\nexport * from \"./sideProject.vue?vue&type=script&lang=js\"\n\nimport \"./sideProject.vue?vue&type=style&index=0&id=a9584f16&lang=scss\"\n\nimport exportComponent from \"D:\\\\Project\\\\vue-scss\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// slide\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n\n}( window, function factory() {\n'use strict';\n\nfunction Slide( parent ) {\n  this.parent = parent;\n  this.isOriginLeft = parent.originSide == 'left';\n  this.cells = [];\n  this.outerWidth = 0;\n  this.height = 0;\n}\n\nvar proto = Slide.prototype;\n\nproto.addCell = function( cell ) {\n  this.cells.push( cell );\n  this.outerWidth += cell.size.outerWidth;\n  this.height = Math.max( cell.size.outerHeight, this.height );\n  // first cell stuff\n  if ( this.cells.length == 1 ) {\n    this.x = cell.x; // x comes from first cell\n    var beginMargin = this.isOriginLeft ? 'marginLeft' : 'marginRight';\n    this.firstMargin = cell.size[ beginMargin ];\n  }\n};\n\nproto.updateTarget = function() {\n  var endMargin = this.isOriginLeft ? 'marginRight' : 'marginLeft';\n  var lastCell = this.getLastCell();\n  var lastMargin = lastCell ? lastCell.size[ endMargin ] : 0;\n  var slideWidth = this.outerWidth - ( this.firstMargin + lastMargin );\n  this.target = this.x + this.firstMargin + slideWidth * this.parent.cellAlign;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.select = function() {\n  this.cells.forEach( function( cell ) {\n    cell.select();\n  } );\n};\n\nproto.unselect = function() {\n  this.cells.forEach( function( cell ) {\n    cell.unselect();\n  } );\n};\n\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  } );\n};\n\nreturn Slide;\n\n} ) );\n","module.exports = __webpack_public_path__ + \"img/d-led.3f7b6a36.jpg\";","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\n\nvar quot = /\"/g;\nvar replace = uncurryThis(''.replace);\n\n// `CreateHTML` abstract operation\n// https://tc39.es/ecma262/#sec-createhtml\nmodule.exports = function (string, tag, attribute, value) {\n  var S = toString(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + replace(toString(value), quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\n","module.exports = __webpack_public_path__ + \"img/poincloud.ffcfcf70.png\";","// lazyload\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'fizzy-ui-utils/utils',\n    ], function( Flickity, utils ) {\n      return factory( window, Flickity, utils );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('./flickity'),\n        require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n        window,\n        window.Flickity,\n        window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, utils ) {\n'use strict';\n\nFlickity.createMethods.push('_createLazyload');\nvar proto = Flickity.prototype;\n\nproto._createLazyload = function() {\n  this.on( 'select', this.lazyLoad );\n};\n\nproto.lazyLoad = function() {\n  var lazyLoad = this.options.lazyLoad;\n  if ( !lazyLoad ) {\n    return;\n  }\n  // get adjacent cells, use lazyLoad option for adjacent count\n  var adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;\n  var cellElems = this.getAdjacentCellElements( adjCount );\n  // get lazy images in those cells\n  var lazyImages = [];\n  cellElems.forEach( function( cellElem ) {\n    var lazyCellImages = getCellLazyImages( cellElem );\n    lazyImages = lazyImages.concat( lazyCellImages );\n  } );\n  // load lazy images\n  lazyImages.forEach( function( img ) {\n    new LazyLoader( img, this );\n  }, this );\n};\n\nfunction getCellLazyImages( cellElem ) {\n  // check if cell element is lazy image\n  if ( cellElem.nodeName == 'IMG' ) {\n    var lazyloadAttr = cellElem.getAttribute('data-flickity-lazyload');\n    var srcAttr = cellElem.getAttribute('data-flickity-lazyload-src');\n    var srcsetAttr = cellElem.getAttribute('data-flickity-lazyload-srcset');\n    if ( lazyloadAttr || srcAttr || srcsetAttr ) {\n      return [ cellElem ];\n    }\n  }\n  // select lazy images in cell\n  var lazySelector = 'img[data-flickity-lazyload], ' +\n    'img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]';\n  var imgs = cellElem.querySelectorAll( lazySelector );\n  return utils.makeArray( imgs );\n}\n\n// -------------------------- LazyLoader -------------------------- //\n\n/**\n * class to handle loading images\n * @param {Image} img - Image element\n * @param {Flickity} flickity - Flickity instance\n */\nfunction LazyLoader( img, flickity ) {\n  this.img = img;\n  this.flickity = flickity;\n  this.load();\n}\n\nLazyLoader.prototype.handleEvent = utils.handleEvent;\n\nLazyLoader.prototype.load = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  // get src & srcset\n  var src = this.img.getAttribute('data-flickity-lazyload') ||\n    this.img.getAttribute('data-flickity-lazyload-src');\n  var srcset = this.img.getAttribute('data-flickity-lazyload-srcset');\n  // set src & serset\n  this.img.src = src;\n  if ( srcset ) {\n    this.img.setAttribute( 'srcset', srcset );\n  }\n  // remove attr\n  this.img.removeAttribute('data-flickity-lazyload');\n  this.img.removeAttribute('data-flickity-lazyload-src');\n  this.img.removeAttribute('data-flickity-lazyload-srcset');\n};\n\nLazyLoader.prototype.onload = function( event ) {\n  this.complete( event, 'flickity-lazyloaded' );\n};\n\nLazyLoader.prototype.onerror = function( event ) {\n  this.complete( event, 'flickity-lazyerror' );\n};\n\nLazyLoader.prototype.complete = function( event, className ) {\n  // unbind events\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n\n  var cell = this.flickity.getParentCell( this.img );\n  var cellElem = cell && cell.element;\n  this.flickity.cellSizeChange( cellElem );\n\n  this.img.classList.add( className );\n  this.flickity.dispatchEvent( 'lazyLoad', event, cellElem );\n};\n\n// -----  ----- //\n\nFlickity.LazyLoader = LazyLoader;\n\nreturn Flickity;\n\n} ) );\n","module.exports = __webpack_public_path__ + \"img/gauge.f8425929.png\";","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.link` method\n// https://tc39.es/ecma262/#sec-string.prototype.link\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {\n  link: function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar arraySlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = arraySlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n    var dummy = this;\n    // check on 1..constructor(foo) case\n    return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })\n      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var fails = require('../internals/fails');\n\n// check the existence of a method, lowercase\n// of a tag and escaping quotes in arguments\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    var test = ''[METHOD_NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  });\n};\n","// player & autoPlay\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter',\n      'fizzy-ui-utils/utils',\n      './flickity',\n    ], function( EvEmitter, utils, Flickity ) {\n      return factory( EvEmitter, utils, Flickity );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('ev-emitter'),\n        require('fizzy-ui-utils'),\n        require('./flickity')\n    );\n  } else {\n    // browser global\n    factory(\n        window.EvEmitter,\n        window.fizzyUIUtils,\n        window.Flickity\n    );\n  }\n\n}( window, function factory( EvEmitter, utils, Flickity ) {\n\n'use strict';\n\n// -------------------------- Player -------------------------- //\n\nfunction Player( parent ) {\n  this.parent = parent;\n  this.state = 'stopped';\n  // visibility change event handler\n  this.onVisibilityChange = this.visibilityChange.bind( this );\n  this.onVisibilityPlay = this.visibilityPlay.bind( this );\n}\n\nPlayer.prototype = Object.create( EvEmitter.prototype );\n\n// start play\nPlayer.prototype.play = function() {\n  if ( this.state == 'playing' ) {\n    return;\n  }\n  // do not play if page is hidden, start playing when page is visible\n  var isPageHidden = document.hidden;\n  if ( isPageHidden ) {\n    document.addEventListener( 'visibilitychange', this.onVisibilityPlay );\n    return;\n  }\n\n  this.state = 'playing';\n  // listen to visibility change\n  document.addEventListener( 'visibilitychange', this.onVisibilityChange );\n  // start ticking\n  this.tick();\n};\n\nPlayer.prototype.tick = function() {\n  // do not tick if not playing\n  if ( this.state != 'playing' ) {\n    return;\n  }\n\n  var time = this.parent.options.autoPlay;\n  // default to 3 seconds\n  time = typeof time == 'number' ? time : 3000;\n  var _this = this;\n  // HACK: reset ticks if stopped and started within interval\n  this.clear();\n  this.timeout = setTimeout( function() {\n    _this.parent.next( true );\n    _this.tick();\n  }, time );\n};\n\nPlayer.prototype.stop = function() {\n  this.state = 'stopped';\n  this.clear();\n  // remove visibility change event\n  document.removeEventListener( 'visibilitychange', this.onVisibilityChange );\n};\n\nPlayer.prototype.clear = function() {\n  clearTimeout( this.timeout );\n};\n\nPlayer.prototype.pause = function() {\n  if ( this.state == 'playing' ) {\n    this.state = 'paused';\n    this.clear();\n  }\n};\n\nPlayer.prototype.unpause = function() {\n  // re-start play if paused\n  if ( this.state == 'paused' ) {\n    this.play();\n  }\n};\n\n// pause if page visibility is hidden, unpause if visible\nPlayer.prototype.visibilityChange = function() {\n  var isPageHidden = document.hidden;\n  this[ isPageHidden ? 'pause' : 'unpause' ]();\n};\n\nPlayer.prototype.visibilityPlay = function() {\n  this.play();\n  document.removeEventListener( 'visibilitychange', this.onVisibilityPlay );\n};\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pauseAutoPlayOnHover: true,\n} );\n\nFlickity.createMethods.push('_createPlayer');\nvar proto = Flickity.prototype;\n\nproto._createPlayer = function() {\n  this.player = new Player( this );\n\n  this.on( 'activate', this.activatePlayer );\n  this.on( 'uiChange', this.stopPlayer );\n  this.on( 'pointerDown', this.stopPlayer );\n  this.on( 'deactivate', this.deactivatePlayer );\n};\n\nproto.activatePlayer = function() {\n  if ( !this.options.autoPlay ) {\n    return;\n  }\n  this.player.play();\n  this.element.addEventListener( 'mouseenter', this );\n};\n\n// Player API, don't hate the ... thanks I know where the door is\n\nproto.playPlayer = function() {\n  this.player.play();\n};\n\nproto.stopPlayer = function() {\n  this.player.stop();\n};\n\nproto.pausePlayer = function() {\n  this.player.pause();\n};\n\nproto.unpausePlayer = function() {\n  this.player.unpause();\n};\n\nproto.deactivatePlayer = function() {\n  this.player.stop();\n  this.element.removeEventListener( 'mouseenter', this );\n};\n\n// ----- mouseenter/leave ----- //\n\n// pause auto-play on hover\nproto.onmouseenter = function() {\n  if ( !this.options.pauseAutoPlayOnHover ) {\n    return;\n  }\n  this.player.pause();\n  this.element.addEventListener( 'mouseleave', this );\n};\n\n// resume auto-play on hover off\nproto.onmouseleave = function() {\n  this.player.unpause();\n  this.element.removeEventListener( 'mouseleave', this );\n};\n\n// -----  ----- //\n\nFlickity.Player = Player;\n\nreturn Flickity;\n\n} ) );\n","module.exports = __webpack_public_path__ + \"img/AXIS-1.e291f2d2.png\";","export * from \"-!../../mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../vue-loader-v16/dist/stylePostLoader.js!../../postcss-loader/src/index.js??ref--7-oneOf-1-2!./flickity.css?vue&type=style&index=0&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./FlickityImg.vue?vue&type=style&index=0&id=12d3fb13&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./project_title.vue?vue&type=style&index=0&id=0c1ea73f&lang=scss\"","// add, remove cell\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'fizzy-ui-utils/utils',\n    ], function( Flickity, utils ) {\n      return factory( window, Flickity, utils );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('./flickity'),\n        require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n        window,\n        window.Flickity,\n        window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, utils ) {\n\n'use strict';\n\n// append cells to a document fragment\nfunction getCellsFragment( cells ) {\n  var fragment = document.createDocumentFragment();\n  cells.forEach( function( cell ) {\n    fragment.appendChild( cell.element );\n  } );\n  return fragment;\n}\n\n// -------------------------- add/remove cell prototype -------------------------- //\n\nvar proto = Flickity.prototype;\n\n/**\n * Insert, prepend, or append cells\n * @param {[Element, Array, NodeList]} elems - Elements to insert\n * @param {Integer} index - Zero-based number to insert\n */\nproto.insert = function( elems, index ) {\n  var cells = this._makeCells( elems );\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  var len = this.cells.length;\n  // default to append\n  index = index === undefined ? len : index;\n  // add cells with document fragment\n  var fragment = getCellsFragment( cells );\n  // append to slider\n  var isAppend = index == len;\n  if ( isAppend ) {\n    this.slider.appendChild( fragment );\n  } else {\n    var insertCellElement = this.cells[ index ].element;\n    this.slider.insertBefore( fragment, insertCellElement );\n  }\n  // add to this.cells\n  if ( index === 0 ) {\n    // prepend, add to start\n    this.cells = cells.concat( this.cells );\n  } else if ( isAppend ) {\n    // append, add to end\n    this.cells = this.cells.concat( cells );\n  } else {\n    // insert in this.cells\n    var endCells = this.cells.splice( index, len - index );\n    this.cells = this.cells.concat( cells ).concat( endCells );\n  }\n\n  this._sizeCells( cells );\n  this.cellChange( index, true );\n};\n\nproto.append = function( elems ) {\n  this.insert( elems, this.cells.length );\n};\n\nproto.prepend = function( elems ) {\n  this.insert( elems, 0 );\n};\n\n/**\n * Remove cells\n * @param {[Element, Array, NodeList]} elems - ELements to remove\n */\nproto.remove = function( elems ) {\n  var cells = this.getCells( elems );\n  if ( !cells || !cells.length ) {\n    return;\n  }\n\n  var minCellIndex = this.cells.length - 1;\n  // remove cells from collection & DOM\n  cells.forEach( function( cell ) {\n    cell.remove();\n    var index = this.cells.indexOf( cell );\n    minCellIndex = Math.min( index, minCellIndex );\n    utils.removeFrom( this.cells, cell );\n  }, this );\n\n  this.cellChange( minCellIndex, true );\n};\n\n/**\n * logic to be run after a cell's size changes\n * @param {Element} elem - cell's element\n */\nproto.cellSizeChange = function( elem ) {\n  var cell = this.getCell( elem );\n  if ( !cell ) {\n    return;\n  }\n  cell.getSize();\n\n  var index = this.cells.indexOf( cell );\n  this.cellChange( index );\n};\n\n/**\n * logic any time a cell is changed: added, removed, or size changed\n * @param {Integer} changedCellIndex - index of the changed cell, optional\n * @param {Boolean} isPositioningSlider - Positions slider after selection\n */\nproto.cellChange = function( changedCellIndex, isPositioningSlider ) {\n  var prevSelectedElem = this.selectedElement;\n  this._positionCells( changedCellIndex );\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  // update selectedIndex\n  // try to maintain position & select previous selected element\n  var cell = this.getCell( prevSelectedElem );\n  if ( cell ) {\n    this.selectedIndex = this.getCellSlideIndex( cell );\n  }\n  this.selectedIndex = Math.min( this.slides.length - 1, this.selectedIndex );\n\n  this.emitEvent( 'cellChange', [ changedCellIndex ] );\n  // position slider\n  this.select( this.selectedIndex );\n  // do not position slider after lazy load\n  if ( isPositioningSlider ) {\n    this.positionSliderAtSelected();\n  }\n};\n\n// -----  ----- //\n\nreturn Flickity;\n\n} ) );\n","module.exports = __webpack_public_path__ + \"img/gggg.29eb71e7.jpg\";","/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n","// Flickity.Cell\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'get-size/get-size',\n    ], function( getSize ) {\n      return factory( window, getSize );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('get-size')\n    );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Cell = factory(\n        window,\n        window.getSize\n    );\n  }\n\n}( window, function factory( window, getSize ) {\n\n'use strict';\n\nfunction Cell( elem, parent ) {\n  this.element = elem;\n  this.parent = parent;\n\n  this.create();\n}\n\nvar proto = Cell.prototype;\n\nproto.create = function() {\n  this.element.style.position = 'absolute';\n  this.element.setAttribute( 'aria-hidden', 'true' );\n  this.x = 0;\n  this.shift = 0;\n  this.element.style[ this.parent.originSide ] = 0;\n};\n\nproto.destroy = function() {\n  // reset style\n  this.unselect();\n  this.element.style.position = '';\n  var side = this.parent.originSide;\n  this.element.style[ side ] = '';\n  this.element.style.transform = '';\n  this.element.removeAttribute('aria-hidden');\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\nproto.setPosition = function( x ) {\n  this.x = x;\n  this.updateTarget();\n  this.renderPosition( x );\n};\n\n// setDefaultTarget v1 method, backwards compatibility, remove in v3\nproto.updateTarget = proto.setDefaultTarget = function() {\n  var marginProperty = this.parent.originSide == 'left' ? 'marginLeft' : 'marginRight';\n  this.target = this.x + this.size[ marginProperty ] +\n    this.size.width * this.parent.cellAlign;\n};\n\nproto.renderPosition = function( x ) {\n  // render position of cell with in slider\n  var sideOffset = this.parent.originSide === 'left' ? 1 : -1;\n\n  var adjustedX = this.parent.options.percentPosition ?\n    x * sideOffset * ( this.parent.size.innerWidth / this.size.width ) :\n    x * sideOffset;\n\n  this.element.style.transform = 'translateX(' +\n    this.parent.getPositionValue( adjustedX ) + ')';\n};\n\nproto.select = function() {\n  this.element.classList.add('is-selected');\n  this.element.removeAttribute('aria-hidden');\n};\n\nproto.unselect = function() {\n  this.element.classList.remove('is-selected');\n  this.element.setAttribute( 'aria-hidden', 'true' );\n};\n\n/**\n * @param {Integer} shift - 0, 1, or -1\n */\nproto.wrapShift = function( shift ) {\n  this.shift = shift;\n  this.renderPosition( this.x + this.parent.slideableWidth * shift );\n};\n\nproto.remove = function() {\n  this.element.parentNode.removeChild( this.element );\n};\n\nreturn Cell;\n\n} ) );\n","<template>\r\n  <nav class=\" navStyle \">\r\n    <router-link to=\"/\">Home</router-link> \r\n    <!--<router-link to=\"/lyingCat\">Cat</router-link>-->\r\n    <router-link to=\"/sideProject\">Project</router-link>\r\n    <router-link to=\"/about\">About</router-link>\r\n\t</nav>\r\n  <router-view/>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'navBar',\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n#nav {\r\n  padding: 30px;\r\n\r\n  a {\r\n    font-weight: bold;\r\n    color: #2c3e50;\r\n\r\n    &.router-link-exact-active {\r\n      color: #b97742;\r\n    }\r\n  }\r\n}\r\n\r\n.navStyle {\r\n    @apply absolute text-center top-4 left-4 leading-4 flex flex-wrap text-faint_orange text-sm ;\r\n    //font-family: 'Playfair Display';\r\n\r\n    a{\r\n        @apply  border-faint_orange px-3 py-3 font-bold tracking-widest uppercase ;\r\n        border: 1px solid #d1b790;\r\n\r\n        :not(:last-child){\r\n          border-right: 0;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n</style>\r\n","import { render } from \"./Navbar.vue?vue&type=template&id=225471f8\"\nimport script from \"./Navbar.vue?vue&type=script&lang=js\"\nexport * from \"./Navbar.vue?vue&type=script&lang=js\"\n\nimport \"./Navbar.vue?vue&type=style&index=0&id=225471f8&lang=scss\"\n\nimport exportComponent from \"D:\\\\Project\\\\vue-scss\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// prev/next buttons\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'unipointer/unipointer',\n      'fizzy-ui-utils/utils',\n    ], function( Flickity, Unipointer, utils ) {\n      return factory( window, Flickity, Unipointer, utils );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('./flickity'),\n        require('unipointer'),\n        require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n        window,\n        window.Flickity,\n        window.Unipointer,\n        window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, Unipointer, utils ) {\n'use strict';\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\n// -------------------------- PrevNextButton -------------------------- //\n\nfunction PrevNextButton( direction, parent ) {\n  this.direction = direction;\n  this.parent = parent;\n  this._create();\n}\n\nPrevNextButton.prototype = Object.create( Unipointer.prototype );\n\nPrevNextButton.prototype._create = function() {\n  // properties\n  this.isEnabled = true;\n  this.isPrevious = this.direction == -1;\n  var leftDirection = this.parent.options.rightToLeft ? 1 : -1;\n  this.isLeft = this.direction == leftDirection;\n\n  var element = this.element = document.createElement('button');\n  element.className = 'flickity-button flickity-prev-next-button';\n  element.className += this.isPrevious ? ' previous' : ' next';\n  // prevent button from submitting form http://stackoverflow.com/a/10836076/182183\n  element.setAttribute( 'type', 'button' );\n  // init as disabled\n  this.disable();\n\n  element.setAttribute( 'aria-label', this.isPrevious ? 'Previous' : 'Next' );\n\n  // create arrow\n  var svg = this.createSVG();\n  element.appendChild( svg );\n  // events\n  this.parent.on( 'select', this.update.bind( this ) );\n  this.on( 'pointerDown', this.parent.childUIPointerDown.bind( this.parent ) );\n};\n\nPrevNextButton.prototype.activate = function() {\n  this.bindStartEvent( this.element );\n  this.element.addEventListener( 'click', this );\n  // add to DOM\n  this.parent.element.appendChild( this.element );\n};\n\nPrevNextButton.prototype.deactivate = function() {\n  // remove from DOM\n  this.parent.element.removeChild( this.element );\n  // click events\n  this.unbindStartEvent( this.element );\n  this.element.removeEventListener( 'click', this );\n};\n\nPrevNextButton.prototype.createSVG = function() {\n  var svg = document.createElementNS( svgURI, 'svg' );\n  svg.setAttribute( 'class', 'flickity-button-icon' );\n  svg.setAttribute( 'viewBox', '0 0 100 100' );\n  var path = document.createElementNS( svgURI, 'path' );\n  var pathMovements = getArrowMovements( this.parent.options.arrowShape );\n  path.setAttribute( 'd', pathMovements );\n  path.setAttribute( 'class', 'arrow' );\n  // rotate arrow\n  if ( !this.isLeft ) {\n    path.setAttribute( 'transform', 'translate(100, 100) rotate(180) ' );\n  }\n  svg.appendChild( path );\n  return svg;\n};\n\n// get SVG path movmement\nfunction getArrowMovements( shape ) {\n  // use shape as movement if string\n  if ( typeof shape == 'string' ) {\n    return shape;\n  }\n  // create movement string\n  return 'M ' + shape.x0 + ',50' +\n    ' L ' + shape.x1 + ',' + ( shape.y1 + 50 ) +\n    ' L ' + shape.x2 + ',' + ( shape.y2 + 50 ) +\n    ' L ' + shape.x3 + ',50 ' +\n    ' L ' + shape.x2 + ',' + ( 50 - shape.y2 ) +\n    ' L ' + shape.x1 + ',' + ( 50 - shape.y1 ) +\n    ' Z';\n}\n\nPrevNextButton.prototype.handleEvent = utils.handleEvent;\n\nPrevNextButton.prototype.onclick = function() {\n  if ( !this.isEnabled ) {\n    return;\n  }\n  this.parent.uiChange();\n  var method = this.isPrevious ? 'previous' : 'next';\n  this.parent[ method ]();\n};\n\n// -----  ----- //\n\nPrevNextButton.prototype.enable = function() {\n  if ( this.isEnabled ) {\n    return;\n  }\n  this.element.disabled = false;\n  this.isEnabled = true;\n};\n\nPrevNextButton.prototype.disable = function() {\n  if ( !this.isEnabled ) {\n    return;\n  }\n  this.element.disabled = true;\n  this.isEnabled = false;\n};\n\nPrevNextButton.prototype.update = function() {\n  // index of first or last slide, if previous or next\n  var slides = this.parent.slides;\n  // enable is wrapAround and at least 2 slides\n  if ( this.parent.options.wrapAround && slides.length > 1 ) {\n    this.enable();\n    return;\n  }\n  var lastIndex = slides.length ? slides.length - 1 : 0;\n  var boundIndex = this.isPrevious ? 0 : lastIndex;\n  var method = this.parent.selectedIndex == boundIndex ? 'disable' : 'enable';\n  this[ method ]();\n};\n\nPrevNextButton.prototype.destroy = function() {\n  this.deactivate();\n  this.allOff();\n};\n\n// -------------------------- Flickity prototype -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  prevNextButtons: true,\n  arrowShape: {\n    x0: 10,\n    x1: 60, y1: 50,\n    x2: 70, y2: 40,\n    x3: 30,\n  },\n} );\n\nFlickity.createMethods.push('_createPrevNextButtons');\nvar proto = Flickity.prototype;\n\nproto._createPrevNextButtons = function() {\n  if ( !this.options.prevNextButtons ) {\n    return;\n  }\n\n  this.prevButton = new PrevNextButton( -1, this );\n  this.nextButton = new PrevNextButton( 1, this );\n\n  this.on( 'activate', this.activatePrevNextButtons );\n};\n\nproto.activatePrevNextButtons = function() {\n  this.prevButton.activate();\n  this.nextButton.activate();\n  this.on( 'deactivate', this.deactivatePrevNextButtons );\n};\n\nproto.deactivatePrevNextButtons = function() {\n  this.prevButton.deactivate();\n  this.nextButton.deactivate();\n  this.off( 'deactivate', this.deactivatePrevNextButtons );\n};\n\n// --------------------------  -------------------------- //\n\nFlickity.PrevNextButton = PrevNextButton;\n\nreturn Flickity;\n\n} ) );\n","module.exports = __webpack_public_path__ + \"img/led.025eb715.jpg\";","/*!\n * Unipointer v2.4.0\n * base class for doing one thing with pointer event\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*global define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter'\n    ], function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter')\n    );\n  } else {\n    // browser global\n    window.Unipointer = factory(\n      window,\n      window.EvEmitter\n    );\n  }\n\n}( window, function factory( window, EvEmitter ) {\n\n'use strict';\n\nfunction noop() {}\n\nfunction Unipointer() {}\n\n// inherit EvEmitter\nvar proto = Unipointer.prototype = Object.create( EvEmitter.prototype );\n\nproto.bindStartEvent = function( elem ) {\n  this._bindStartEvent( elem, true );\n};\n\nproto.unbindStartEvent = function( elem ) {\n  this._bindStartEvent( elem, false );\n};\n\n/**\n * Add or remove start event\n * @param {Boolean} isAdd - remove if falsey\n */\nproto._bindStartEvent = function( elem, isAdd ) {\n  // munge isAdd, default to true\n  isAdd = isAdd === undefined ? true : isAdd;\n  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';\n\n  // default to mouse events\n  var startEvent = 'mousedown';\n  if ( 'ontouchstart' in window ) {\n    // HACK prefer Touch Events as you can preventDefault on touchstart to\n    // disable scroll in iOS & mobile Chrome metafizzy/flickity#1177\n    startEvent = 'touchstart';\n  } else if ( window.PointerEvent ) {\n    // Pointer Events\n    startEvent = 'pointerdown';\n  }\n  elem[ bindMethod ]( startEvent, this );\n};\n\n// trigger handler methods for events\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// returns the touch that we're keeping track of\nproto.getTouch = function( touches ) {\n  for ( var i=0; i < touches.length; i++ ) {\n    var touch = touches[i];\n    if ( touch.identifier == this.pointerIdentifier ) {\n      return touch;\n    }\n  }\n};\n\n// ----- start event ----- //\n\nproto.onmousedown = function( event ) {\n  // dismiss clicks from right or middle buttons\n  var button = event.button;\n  if ( button && ( button !== 0 && button !== 1 ) ) {\n    return;\n  }\n  this._pointerDown( event, event );\n};\n\nproto.ontouchstart = function( event ) {\n  this._pointerDown( event, event.changedTouches[0] );\n};\n\nproto.onpointerdown = function( event ) {\n  this._pointerDown( event, event );\n};\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto._pointerDown = function( event, pointer ) {\n  // dismiss right click and other pointers\n  // button = 0 is okay, 1-4 not\n  if ( event.button || this.isPointerDown ) {\n    return;\n  }\n\n  this.isPointerDown = true;\n  // save pointer identifier to match up touch events\n  this.pointerIdentifier = pointer.pointerId !== undefined ?\n    // pointerId for pointer events, touch.indentifier for touch events\n    pointer.pointerId : pointer.identifier;\n\n  this.pointerDown( event, pointer );\n};\n\nproto.pointerDown = function( event, pointer ) {\n  this._bindPostStartEvents( event );\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// hash of events to be bound after start event\nvar postStartEvents = {\n  mousedown: [ 'mousemove', 'mouseup' ],\n  touchstart: [ 'touchmove', 'touchend', 'touchcancel' ],\n  pointerdown: [ 'pointermove', 'pointerup', 'pointercancel' ],\n};\n\nproto._bindPostStartEvents = function( event ) {\n  if ( !event ) {\n    return;\n  }\n  // get proper events to match start event\n  var events = postStartEvents[ event.type ];\n  // bind events to node\n  events.forEach( function( eventName ) {\n    window.addEventListener( eventName, this );\n  }, this );\n  // save these arguments\n  this._boundPointerEvents = events;\n};\n\nproto._unbindPostStartEvents = function() {\n  // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\n  if ( !this._boundPointerEvents ) {\n    return;\n  }\n  this._boundPointerEvents.forEach( function( eventName ) {\n    window.removeEventListener( eventName, this );\n  }, this );\n\n  delete this._boundPointerEvents;\n};\n\n// ----- move event ----- //\n\nproto.onmousemove = function( event ) {\n  this._pointerMove( event, event );\n};\n\nproto.onpointermove = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerMove( event, event );\n  }\n};\n\nproto.ontouchmove = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerMove( event, touch );\n  }\n};\n\n/**\n * pointer move\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerMove = function( event, pointer ) {\n  this.pointerMove( event, pointer );\n};\n\n// public\nproto.pointerMove = function( event, pointer ) {\n  this.emitEvent( 'pointerMove', [ event, pointer ] );\n};\n\n// ----- end event ----- //\n\n\nproto.onmouseup = function( event ) {\n  this._pointerUp( event, event );\n};\n\nproto.onpointerup = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerUp( event, event );\n  }\n};\n\nproto.ontouchend = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerUp( event, touch );\n  }\n};\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerUp = function( event, pointer ) {\n  this._pointerDone();\n  this.pointerUp( event, pointer );\n};\n\n// public\nproto.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n};\n\n// ----- pointer done ----- //\n\n// triggered on pointer up & pointer cancel\nproto._pointerDone = function() {\n  this._pointerReset();\n  this._unbindPostStartEvents();\n  this.pointerDone();\n};\n\nproto._pointerReset = function() {\n  // reset properties\n  this.isPointerDown = false;\n  delete this.pointerIdentifier;\n};\n\nproto.pointerDone = noop;\n\n// ----- pointer cancel ----- //\n\nproto.onpointercancel = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerCancel( event, event );\n  }\n};\n\nproto.ontouchcancel = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerCancel( event, touch );\n  }\n};\n\n/**\n * pointer cancel\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerCancel = function( event, pointer ) {\n  this._pointerDone();\n  this.pointerCancel( event, pointer );\n};\n\n// public\nproto.pointerCancel = function( event, pointer ) {\n  this.emitEvent( 'pointerCancel', [ event, pointer ] );\n};\n\n// -----  ----- //\n\n// utility function for getting x/y coords from event\nUnipointer.getPointerPoint = function( pointer ) {\n  return {\n    x: pointer.pageX,\n    y: pointer.pageY\n  };\n};\n\n// -----  ----- //\n\nreturn Unipointer;\n\n}));\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./PopWin.vue?vue&type=style&index=0&id=3a7e91fa&lang=css\"","module.exports = __webpack_public_path__ + \"img/spring_fox.96af380f.jpg\";","/*!\n * Unidragger v2.4.0\n * Draggable base class\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'unipointer/unipointer'\n    ], function( Unipointer ) {\n      return factory( window, Unipointer );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('unipointer')\n    );\n  } else {\n    // browser global\n    window.Unidragger = factory(\n      window,\n      window.Unipointer\n    );\n  }\n\n}( window, function factory( window, Unipointer ) {\n\n'use strict';\n\n// -------------------------- Unidragger -------------------------- //\n\nfunction Unidragger() {}\n\n// inherit Unipointer & EvEmitter\nvar proto = Unidragger.prototype = Object.create( Unipointer.prototype );\n\n// ----- bind start ----- //\n\nproto.bindHandles = function() {\n  this._bindHandles( true );\n};\n\nproto.unbindHandles = function() {\n  this._bindHandles( false );\n};\n\n/**\n * Add or remove start event\n * @param {Boolean} isAdd\n */\nproto._bindHandles = function( isAdd ) {\n  // munge isAdd, default to true\n  isAdd = isAdd === undefined ? true : isAdd;\n  // bind each handle\n  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';\n  var touchAction = isAdd ? this._touchActionValue : '';\n  for ( var i=0; i < this.handles.length; i++ ) {\n    var handle = this.handles[i];\n    this._bindStartEvent( handle, isAdd );\n    handle[ bindMethod ]( 'click', this );\n    // touch-action: none to override browser touch gestures. metafizzy/flickity#540\n    if ( window.PointerEvent ) {\n      handle.style.touchAction = touchAction;\n    }\n  }\n};\n\n// prototype so it can be overwriteable by Flickity\nproto._touchActionValue = 'none';\n\n// ----- start event ----- //\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerDown = function( event, pointer ) {\n  var isOkay = this.okayPointerDown( event );\n  if ( !isOkay ) {\n    return;\n  }\n  // track start event position\n  // Safari 9 overrides pageX and pageY. These values needs to be copied. flickity#842\n  this.pointerDownPointer = {\n    pageX: pointer.pageX,\n    pageY: pointer.pageY,\n  };\n\n  event.preventDefault();\n  this.pointerDownBlur();\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// nodes that have text fields\nvar cursorNodes = {\n  TEXTAREA: true,\n  INPUT: true,\n  SELECT: true,\n  OPTION: true,\n};\n\n// input types that do not have text fields\nvar clickTypes = {\n  radio: true,\n  checkbox: true,\n  button: true,\n  submit: true,\n  image: true,\n  file: true,\n};\n\n// dismiss inputs with text fields. flickity#403, flickity#404\nproto.okayPointerDown = function( event ) {\n  var isCursorNode = cursorNodes[ event.target.nodeName ];\n  var isClickType = clickTypes[ event.target.type ];\n  var isOkay = !isCursorNode || isClickType;\n  if ( !isOkay ) {\n    this._pointerReset();\n  }\n  return isOkay;\n};\n\n// kludge to blur previously focused input\nproto.pointerDownBlur = function() {\n  var focused = document.activeElement;\n  // do not blur body for IE10, metafizzy/flickity#117\n  var canBlur = focused && focused.blur && focused != document.body;\n  if ( canBlur ) {\n    focused.blur();\n  }\n};\n\n// ----- move event ----- //\n\n/**\n * drag move\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\n// base pointer move logic\nproto._dragPointerMove = function( event, pointer ) {\n  var moveVector = {\n    x: pointer.pageX - this.pointerDownPointer.pageX,\n    y: pointer.pageY - this.pointerDownPointer.pageY\n  };\n  // start drag if pointer has moved far enough to start drag\n  if ( !this.isDragging && this.hasDragStarted( moveVector ) ) {\n    this._dragStart( event, pointer );\n  }\n  return moveVector;\n};\n\n// condition if pointer has moved far enough to start drag\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;\n};\n\n// ----- end event ----- //\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nproto._dragPointerUp = function( event, pointer ) {\n  if ( this.isDragging ) {\n    this._dragEnd( event, pointer );\n  } else {\n    // pointer didn't move enough for drag to start\n    this._staticClick( event, pointer );\n  }\n};\n\n// -------------------------- drag -------------------------- //\n\n// dragStart\nproto._dragStart = function( event, pointer ) {\n  this.isDragging = true;\n  // prevent clicks\n  this.isPreventingClicks = true;\n  this.dragStart( event, pointer );\n};\n\nproto.dragStart = function( event, pointer ) {\n  this.emitEvent( 'dragStart', [ event, pointer ] );\n};\n\n// dragMove\nproto._dragMove = function( event, pointer, moveVector ) {\n  // do not drag if not dragging yet\n  if ( !this.isDragging ) {\n    return;\n  }\n\n  this.dragMove( event, pointer, moveVector );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  event.preventDefault();\n  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );\n};\n\n// dragEnd\nproto._dragEnd = function( event, pointer ) {\n  // set flags\n  this.isDragging = false;\n  // re-enable clicking async\n  setTimeout( function() {\n    delete this.isPreventingClicks;\n  }.bind( this ) );\n\n  this.dragEnd( event, pointer );\n};\n\nproto.dragEnd = function( event, pointer ) {\n  this.emitEvent( 'dragEnd', [ event, pointer ] );\n};\n\n// ----- onclick ----- //\n\n// handle all clicks and prevent clicks when dragging\nproto.onclick = function( event ) {\n  if ( this.isPreventingClicks ) {\n    event.preventDefault();\n  }\n};\n\n// ----- staticClick ----- //\n\n// triggered after pointer down & up with no/tiny movement\nproto._staticClick = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  if ( this.isIgnoringMouseUp && event.type == 'mouseup' ) {\n    return;\n  }\n\n  this.staticClick( event, pointer );\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( event.type != 'mouseup' ) {\n    this.isIgnoringMouseUp = true;\n    // reset flag after 300ms\n    setTimeout( function() {\n      delete this.isIgnoringMouseUp;\n    }.bind( this ), 400 );\n  }\n};\n\nproto.staticClick = function( event, pointer ) {\n  this.emitEvent( 'staticClick', [ event, pointer ] );\n};\n\n// ----- utils ----- //\n\nUnidragger.getPointerPoint = Unipointer.getPointerPoint;\n\n// -----  ----- //\n\nreturn Unidragger;\n\n}));\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./sideProject.vue?vue&type=style&index=0&id=a9584f16&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Navbar.vue?vue&type=style&index=0&id=225471f8&lang=scss\"","<template lang=\"\">\r\n  \r\n  <Navbar/>\r\n\r\n  <div class=\" header relative\">\r\n    <h1><span>Aqua</span>About Me</h1>\r\n    <h2>Frontend & Software Developer</h2>\r\n\r\n    <div class=\"content\">\r\n      <div class=\" md:w-1/3 w-5/6\">\r\n        <span> I'm Aqua, an engineer. </span>\r\n        <p> I’m a curious girl who like to try anything new, also like to learn new technologies and solve the problems.  \r\n            I used to focus on <span>computer vision</span>, now study in <span>Front-end develop</span> as well.<br>\r\n            I studied <span>Vue</span> by myself, I found some tutorial videos on the youtube, \"The Net Ninja\" is one of\r\n            my favorite youtuber, he got a lot of awesome videos. \r\n            After I finished videos, I will make a small project to checkout that I really understand the content.<br>\r\n            Actually, this portfolio is one of my works. \r\n            I found <span>Appworks school</span> from my friend, I am surprise that there is such a good place to improve ability,<br>\r\n            <span>I would really want to have a chance to change myself and move forward. </span>\r\n\r\n        </p>\r\n\r\n      </div>\r\n\r\n      \r\n    </div>\r\n\r\n    <div class=\"flex flex-col\">\r\n      <div class=\" contact mt-6 \">\r\n        <h2 class=\" contact-h2 \">Contact </h2>\r\n        <p class=\" contact-p \">Get in touch with me.</p>\r\n\r\n      </div>\r\n\r\n        <div class=\"flex mt-6 justify-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 3l-3.195 11.716-4.329-3.855 4.154-4.385-5.568 3.849-3.843-.934 12.781-6.391zm-7.988 8.876v4.124l1.735-2.578-1.735-1.546zm-4.136 5.684c-.646.405-1.312.765-1.986 1.069l.492 1.184c.675-.303 1.343-.658 1.992-1.056l-.498-1.197zm3.124-2.408c-.59.581-1.363 1.171-2.042 1.67l.505 1.214c.486-.346 1.087-.758 1.537-1.146v-1.738zm-5.808 5.137c-1.294.457-2.52.711-3.643.711-3.069 0-5.549-1.787-5.549-4.83 0-1.348.457-2.511 1.326-3.392 1-1 2.315-1.489 4.001-1.489 2.533 0 4.338 1.631 4.338 3.903 0 1.022-.369 1.957-1.033 2.62-.564.565-1.305.892-2.032.892-.425 0-.772-.163-.936-.424-.054-.087-.065-.142-.098-.337-.413.478-.848.685-1.457.685-1.076 0-1.761-.804-1.761-2.044 0-1.837 1.206-3.359 2.652-3.359.609 0 .913.152 1.207.609l.108-.38h1.285c-.065.217-.261.88-.315 1.12-.706 2.612-.695 2.504-.695 2.74 0 .447.616.27.967-.011.533-.413.881-1.218.881-2.055 0-1-.468-1.87-1.25-2.359-.489-.293-1.175-.457-1.946-.457-2.294 0-3.903 1.522-3.903 3.675 0 3.446 3.626 4.262 7.361 2.996l.492 1.186zm-3.397-5.282c0-.446-.25-.75-.631-.75-.413 0-.794.271-1.065.783-.261.489-.435 1.13-.435 1.631 0 .576.217.88.631.88.401 0 .782-.315 1.064-.87.262-.511.436-1.174.436-1.674z\"/></svg>\r\n          <p class=\"mail-p text-center\">\r\n            bellems811@gmail.com <br>\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"flex mt-3 justify-center\">\r\n          <div class=\"flex justify-center\">\r\n\r\n            <p >\r\n              <a href=\"https://github.com/aquahsu0811\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 6c-3.313 0-6 2.686-6 6 0 2.651 1.719 4.9 4.104 5.693.3.056.396-.13.396-.289v-1.117c-1.669.363-2.017-.707-2.017-.707-.272-.693-.666-.878-.666-.878-.544-.373.041-.365.041-.365.603.042.92.619.92.619.535.917 1.403.652 1.746.499.054-.388.209-.652.381-.802-1.333-.152-2.733-.667-2.733-2.965 0-.655.234-1.19.618-1.61-.062-.153-.268-.764.058-1.59 0 0 .504-.161 1.65.615.479-.133.992-.199 1.502-.202.51.002 1.023.069 1.503.202 1.146-.776 1.648-.615 1.648-.615.327.826.121 1.437.06 1.588.385.42.617.955.617 1.61 0 2.305-1.404 2.812-2.74 2.96.216.186.412.551.412 1.111v1.646c0 .16.096.347.4.288 2.383-.793 4.1-3.041 4.1-5.691 0-3.314-2.687-6-6-6z\"/></svg></a>\r\n            </p>\r\n            \r\n            <p>\r\n              <a href=\"https://www.youtube.com/channel/UCQ6GXSdkbe7iUmzg4fJqE6A\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.23 7.102c-2.002-.136-6.462-.135-8.461 0-2.165.148-2.419 1.456-2.436 4.898.017 3.436.27 4.75 2.437 4.898 1.999.135 6.459.136 8.461 0 2.165-.148 2.42-1.457 2.437-4.898-.018-3.436-.271-4.75-2.438-4.898zm-6.23 7.12v-4.444l4.778 2.218-4.778 2.226zm2-12.222c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12z\"/></svg></a>\r\n            </p>\r\n\r\n          </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\" w-1/4  absolute  left-0 top-16 invisible md:visible\">\r\n      <img src=\"../img/self.jpg\" class=\"absolute\">\r\n    </div>\r\n\r\n    <div class=\" w-1/4  absolute  right-0 bottom-20 invisible md:visible\">\r\n      <img src=\"../img/typing.png\" class=\"absolute\">\r\n    </div>\r\n\r\n  </div>\r\n\r\n  \r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport Navbar from './Navbar.vue';\r\nexport default {\r\n  components: {\r\n    Navbar,\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .header {\r\n    @apply absolute top-32 left-0 text-center w-full;\r\n    h1 {\r\n      \r\n      font-size: 5em;\r\n      @apply font-acme leading-4 m-0 text-faint_orange tracking-normal;\r\n      letter-spacing: -0.025em;\r\n\r\n      span {   \r\n        @apply font-calligraffitti text-sm block whitespace-nowrap ml-72 mb-2;\r\n        font-size: 0.25em;\r\n        letter-spacing: 0px;\r\n      }\r\n    }\r\n    h2 {\r\n      font-size: 0.5em;\r\n      @apply font-catamaran mx-1 my-0 mt-8 uppercase leading-4 whitespace-nowrap text-blue-900;\r\n      //color: #d6483b;\r\n      letter-spacing: 0.8em;\r\n    }\r\n    \r\n  }\r\n  .content{\r\n    @apply  flex justify-center mt-8;\r\n    div{\r\n      margin: auto;\r\n      p{\r\n        @apply font-catamaran text-left  text-gray-500 text-justify;\r\n        font-size:1em;\r\n      }\r\n\r\n      span{\r\n        @apply font-bold text-gray-500 font-catamaran;\r\n      }\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  .contact{\r\n      @apply flex flex-col;\r\n\r\n      .contact-h2{\r\n        @apply font-acme ;\r\n        font-size: 1.5em;\r\n      }\r\n\r\n      .contact-p{\r\n        @apply  font-bold;\r\n        font-size: 1em;\r\n      }\r\n  }\r\n\r\n  .mail-p{\r\n    font-size: 1em;\r\n  }\r\n\r\n  .img-d{\r\n    @apply w-1/3 h-1/3 -bottom-0;\r\n    background-image:url(../img/typing.png);\r\n  }\r\n</style>","import { render } from \"./About.vue?vue&type=template&id=19431972&lang=true\"\nimport script from \"./About.vue?vue&type=script&lang=js\"\nexport * from \"./About.vue?vue&type=script&lang=js\"\n\nimport \"./About.vue?vue&type=style&index=0&id=19431972&lang=scss\"\n\nimport exportComponent from \"D:\\\\Project\\\\vue-scss\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}